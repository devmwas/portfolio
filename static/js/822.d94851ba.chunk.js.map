{"version":3,"file":"static/js/822.d94851ba.chunk.js","mappings":"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","sources":["../node_modules/@mui/material/utils/capitalize.js","../node_modules/@mui/material/utils/useEventCallback.js","../node_modules/@mui/material/utils/useForkRef.js","../node_modules/@mui/utils/esm/useIsFocusVisible.js","../node_modules/@mui/material/utils/useIsFocusVisible.js","../node_modules/@mui/utils/esm/setRef.js","../node_modules/@mui/utils/esm/useEnhancedEffect/useEnhancedEffect.js","../node_modules/@mui/utils/esm/useEventCallback/useEventCallback.js","../node_modules/@mui/utils/esm/useForkRef/useForkRef.js","../node_modules/framer-motion/dist/es/animation/hooks/animation-controls.mjs","../node_modules/framer-motion/dist/es/animation/hooks/use-animation.mjs","../node_modules/framer-motion/dist/es/utils/use-instant-transition-state.mjs","../node_modules/framer-motion/dist/es/easing/utils/is-bezier-definition.mjs","../node_modules/framer-motion/dist/es/animation/animators/waapi/easing.mjs","../node_modules/framer-motion/dist/es/easing/cubic-bezier.mjs","../node_modules/framer-motion/dist/es/easing/ease.mjs","../node_modules/framer-motion/dist/es/easing/utils/is-easing-array.mjs","../node_modules/framer-motion/dist/es/easing/back.mjs","../node_modules/framer-motion/dist/es/easing/utils/map.mjs","../node_modules/framer-motion/dist/es/easing/anticipate.mjs","../node_modules/framer-motion/dist/es/utils/hsla-to-rgba.mjs","../node_modules/framer-motion/dist/es/utils/mix-color.mjs","../node_modules/framer-motion/dist/es/utils/mix-complex.mjs","../node_modules/framer-motion/dist/es/utils/interpolate.mjs","../node_modules/framer-motion/dist/es/utils/offsets/default.mjs","../node_modules/framer-motion/dist/es/utils/offsets/fill.mjs","../node_modules/framer-motion/dist/es/animation/generators/keyframes.mjs","../node_modules/framer-motion/dist/es/utils/offsets/time.mjs","../node_modules/framer-motion/dist/es/animation/generators/utils/velocity.mjs","../node_modules/framer-motion/dist/es/animation/generators/spring/find.mjs","../node_modules/framer-motion/dist/es/animation/generators/spring/index.mjs","../node_modules/framer-motion/dist/es/animation/generators/inertia.mjs","../node_modules/framer-motion/dist/es/animation/animators/js/driver-frameloop.mjs","../node_modules/framer-motion/dist/es/animation/generators/utils/calc-duration.mjs","../node_modules/framer-motion/dist/es/animation/animators/js/index.mjs","../node_modules/framer-motion/dist/es/animation/animators/waapi/create-accelerated-animation.mjs","../node_modules/framer-motion/dist/es/utils/memo.mjs","../node_modules/framer-motion/dist/es/animation/animators/waapi/index.mjs","../node_modules/framer-motion/dist/es/animation/animators/waapi/utils/get-final-keyframe.mjs","../node_modules/framer-motion/dist/es/animation/utils/default-transitions.mjs","../node_modules/framer-motion/dist/es/animation/utils/is-animatable.mjs","../node_modules/framer-motion/dist/es/animation/utils/is-none.mjs","../node_modules/framer-motion/dist/es/animation/interfaces/motion-value.mjs","../node_modules/framer-motion/dist/es/animation/utils/keyframes.mjs","../node_modules/framer-motion/dist/es/animation/animators/instant.mjs","../node_modules/framer-motion/dist/es/animation/interfaces/visual-element-target.mjs","../node_modules/framer-motion/dist/es/animation/interfaces/visual-element-variant.mjs","../node_modules/framer-motion/dist/es/animation/interfaces/visual-element.mjs","../node_modules/framer-motion/dist/es/animation/optimized-appear/data-id.mjs","../node_modules/framer-motion/dist/es/animation/utils/is-keyframes-target.mjs","../node_modules/framer-motion/dist/es/animation/utils/transitions.mjs","../node_modules/framer-motion/dist/es/easing/circ.mjs","../node_modules/framer-motion/dist/es/easing/modifiers/mirror.mjs","../node_modules/framer-motion/dist/es/easing/modifiers/reverse.mjs","../node_modules/framer-motion/dist/es/context/MotionConfigContext.mjs","../node_modules/framer-motion/dist/es/context/MotionContext/index.mjs","../node_modules/framer-motion/dist/es/context/LazyContext.mjs","../node_modules/framer-motion/dist/es/utils/is-ref-object.mjs","../node_modules/framer-motion/dist/es/render/utils/is-variant-label.mjs","../node_modules/framer-motion/dist/es/animation/utils/is-animation-controls.mjs","../node_modules/framer-motion/dist/es/render/utils/variant-props.mjs","../node_modules/framer-motion/dist/es/render/utils/is-controlling-variants.mjs","../node_modules/framer-motion/dist/es/context/MotionContext/create.mjs","../node_modules/framer-motion/dist/es/context/MotionContext/utils.mjs","../node_modules/framer-motion/dist/es/motion/features/definitions.mjs","../node_modules/framer-motion/dist/es/context/SwitchLayoutGroupContext.mjs","../node_modules/framer-motion/dist/es/motion/utils/symbol.mjs","../node_modules/framer-motion/dist/es/motion/index.mjs","../node_modules/framer-motion/dist/es/motion/features/load-features.mjs","../node_modules/framer-motion/dist/es/motion/utils/use-visual-element.mjs","../node_modules/framer-motion/dist/es/motion/utils/use-motion-ref.mjs","../node_modules/framer-motion/dist/es/render/dom/motion-proxy.mjs","../node_modules/framer-motion/dist/es/render/svg/lowercase-elements.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/is-svg-component.mjs","../node_modules/framer-motion/dist/es/projection/styles/scale-correction.mjs","../node_modules/framer-motion/dist/es/motion/utils/is-forced-motion-value.mjs","../node_modules/framer-motion/dist/es/render/html/utils/build-transform.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/get-as-type.mjs","../node_modules/framer-motion/dist/es/render/html/utils/build-styles.mjs","../node_modules/framer-motion/dist/es/render/html/utils/create-render-state.mjs","../node_modules/framer-motion/dist/es/render/html/use-props.mjs","../node_modules/framer-motion/dist/es/motion/utils/valid-prop.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/filter-props.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/transform-origin.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/path.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/build-attrs.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/create-render-state.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/is-svg-tag.mjs","../node_modules/framer-motion/dist/es/render/svg/use-props.mjs","../node_modules/framer-motion/dist/es/render/dom/use-render.mjs","../node_modules/framer-motion/dist/es/render/html/utils/render.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/camel-case-attrs.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/render.mjs","../node_modules/framer-motion/dist/es/render/html/utils/scrape-motion-values.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/scrape-motion-values.mjs","../node_modules/framer-motion/dist/es/value/utils/resolve-motion-value.mjs","../node_modules/framer-motion/dist/es/motion/utils/use-visual-state.mjs","../node_modules/framer-motion/dist/es/render/svg/config-motion.mjs","../node_modules/framer-motion/dist/es/render/html/config-motion.mjs","../node_modules/framer-motion/dist/es/events/add-dom-event.mjs","../node_modules/framer-motion/dist/es/events/utils/is-primary-pointer.mjs","../node_modules/framer-motion/dist/es/events/event-info.mjs","../node_modules/framer-motion/dist/es/events/add-pointer-event.mjs","../node_modules/framer-motion/dist/es/gestures/drag/utils/lock.mjs","../node_modules/framer-motion/dist/es/motion/features/Feature.mjs","../node_modules/framer-motion/dist/es/gestures/hover.mjs","../node_modules/framer-motion/dist/es/gestures/utils/is-node-or-child.mjs","../node_modules/framer-motion/dist/es/gestures/press.mjs","../node_modules/framer-motion/dist/es/motion/features/viewport/observers.mjs","../node_modules/framer-motion/dist/es/motion/features/viewport/index.mjs","../node_modules/framer-motion/dist/es/motion/features/gestures.mjs","../node_modules/framer-motion/dist/es/gestures/focus.mjs","../node_modules/framer-motion/dist/es/utils/shallow-compare.mjs","../node_modules/framer-motion/dist/es/render/utils/animation-state.mjs","../node_modules/framer-motion/dist/es/motion/features/animation/exit.mjs","../node_modules/framer-motion/dist/es/motion/features/animations.mjs","../node_modules/framer-motion/dist/es/motion/features/animation/index.mjs","../node_modules/framer-motion/dist/es/utils/distance.mjs","../node_modules/framer-motion/dist/es/gestures/pan/PanSession.mjs","../node_modules/framer-motion/dist/es/projection/geometry/delta-calc.mjs","../node_modules/framer-motion/dist/es/gestures/drag/utils/constraints.mjs","../node_modules/framer-motion/dist/es/projection/geometry/models.mjs","../node_modules/framer-motion/dist/es/projection/utils/each-axis.mjs","../node_modules/framer-motion/dist/es/projection/geometry/conversion.mjs","../node_modules/framer-motion/dist/es/projection/utils/has-transform.mjs","../node_modules/framer-motion/dist/es/projection/geometry/delta-apply.mjs","../node_modules/framer-motion/dist/es/projection/utils/measure.mjs","../node_modules/framer-motion/dist/es/utils/get-context-window.mjs","../node_modules/framer-motion/dist/es/gestures/drag/VisualElementDragControls.mjs","../node_modules/framer-motion/dist/es/gestures/pan/index.mjs","../node_modules/framer-motion/dist/es/projection/node/state.mjs","../node_modules/framer-motion/dist/es/projection/styles/scale-border-radius.mjs","../node_modules/framer-motion/dist/es/projection/styles/scale-box-shadow.mjs","../node_modules/framer-motion/dist/es/motion/features/layout/MeasureLayout.mjs","../node_modules/framer-motion/dist/es/components/AnimatePresence/use-presence.mjs","../node_modules/framer-motion/dist/es/projection/animation/mix-values.mjs","../node_modules/framer-motion/dist/es/projection/geometry/copy.mjs","../node_modules/framer-motion/dist/es/projection/geometry/delta-remove.mjs","../node_modules/framer-motion/dist/es/projection/geometry/utils.mjs","../node_modules/framer-motion/dist/es/projection/shared/stack.mjs","../node_modules/framer-motion/dist/es/projection/styles/transform.mjs","../node_modules/framer-motion/dist/es/render/utils/compare-by-depth.mjs","../node_modules/framer-motion/dist/es/render/utils/flat-tree.mjs","../node_modules/framer-motion/dist/es/projection/node/create-projection-node.mjs","../node_modules/framer-motion/dist/es/debug/record.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/is-svg-element.mjs","../node_modules/framer-motion/dist/es/utils/delay.mjs","../node_modules/framer-motion/dist/es/animation/interfaces/single-value.mjs","../node_modules/framer-motion/dist/es/projection/node/DocumentProjectionNode.mjs","../node_modules/framer-motion/dist/es/projection/node/HTMLProjectionNode.mjs","../node_modules/framer-motion/dist/es/motion/features/drag.mjs","../node_modules/framer-motion/dist/es/gestures/drag/index.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/css-variables-conversion.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/unit-conversion.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/parse-dom-variant.mjs","../node_modules/framer-motion/dist/es/utils/reduced-motion/state.mjs","../node_modules/framer-motion/dist/es/render/store.mjs","../node_modules/framer-motion/dist/es/render/VisualElement.mjs","../node_modules/framer-motion/dist/es/utils/reduced-motion/index.mjs","../node_modules/framer-motion/dist/es/render/utils/motion-values.mjs","../node_modules/framer-motion/dist/es/render/dom/DOMVisualElement.mjs","../node_modules/framer-motion/dist/es/render/html/HTMLVisualElement.mjs","../node_modules/framer-motion/dist/es/render/svg/SVGVisualElement.mjs","../node_modules/framer-motion/dist/es/render/dom/create-visual-element.mjs","../node_modules/framer-motion/dist/es/render/dom/motion.mjs","../node_modules/framer-motion/dist/es/motion/features/layout.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/create-config.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/camel-to-dash.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/is-css-variable.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/animatable-none.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/defaults.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/type-auto.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/dimensions.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/type-int.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/number.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/test.mjs","../node_modules/framer-motion/dist/es/render/html/utils/transform.mjs","../node_modules/framer-motion/dist/es/render/utils/resolve-dynamic-variants.mjs","../node_modules/framer-motion/dist/es/render/utils/resolve-variants.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/find.mjs","../node_modules/framer-motion/dist/es/render/utils/setters.mjs","../node_modules/framer-motion/dist/es/utils/array.mjs","../node_modules/framer-motion/dist/es/utils/clamp.mjs","../node_modules/framer-motion/dist/es/utils/is-numerical-string.mjs","../node_modules/framer-motion/dist/es/utils/is-zero-value-string.mjs","../node_modules/framer-motion/dist/es/utils/mix.mjs","../node_modules/framer-motion/dist/es/utils/pipe.mjs","../node_modules/framer-motion/dist/es/utils/progress.mjs","../node_modules/framer-motion/dist/es/utils/resolve-value.mjs","../node_modules/framer-motion/dist/es/utils/subscription-manager.mjs","../node_modules/framer-motion/dist/es/utils/time-conversion.mjs","../node_modules/framer-motion/dist/es/utils/velocity-per-second.mjs","../node_modules/framer-motion/dist/es/value/index.mjs","../node_modules/framer-motion/dist/es/value/types/color/hex.mjs","../node_modules/framer-motion/dist/es/value/types/color/hsla.mjs","../node_modules/framer-motion/dist/es/value/types/color/index.mjs","../node_modules/framer-motion/dist/es/value/types/color/rgba.mjs","../node_modules/framer-motion/dist/es/value/types/color/utils.mjs","../node_modules/framer-motion/dist/es/value/types/complex/filter.mjs","../node_modules/framer-motion/dist/es/value/types/complex/index.mjs","../node_modules/framer-motion/dist/es/value/types/numbers/index.mjs","../node_modules/framer-motion/dist/es/value/types/numbers/units.mjs","../node_modules/framer-motion/dist/es/value/types/utils.mjs","../node_modules/framer-motion/dist/es/value/use-will-change/is.mjs","../node_modules/framer-motion/dist/es/value/utils/is-motion-value.mjs"],"sourcesContent":["import { unstable_capitalize as capitalize } from '@mui/utils';\nexport default capitalize;","'use client';\n\nimport { unstable_useEventCallback as useEventCallback } from '@mui/utils';\nexport default useEventCallback;","'use client';\n\nimport { unstable_useForkRef as useForkRef } from '@mui/utils';\nexport default useForkRef;","'use client';\n\n// based on https://github.com/WICG/focus-visible/blob/v4.1.5/src/focus-visible.js\nimport * as React from 'react';\nlet hadKeyboardEvent = true;\nlet hadFocusVisibleRecently = false;\nlet hadFocusVisibleRecentlyTimeout;\nconst inputTypesWhitelist = {\n  text: true,\n  search: true,\n  url: true,\n  tel: true,\n  email: true,\n  password: true,\n  number: true,\n  date: true,\n  month: true,\n  week: true,\n  time: true,\n  datetime: true,\n  'datetime-local': true\n};\n\n/**\n * Computes whether the given element should automatically trigger the\n * `focus-visible` class being added, i.e. whether it should always match\n * `:focus-visible` when focused.\n * @param {Element} node\n * @returns {boolean}\n */\nfunction focusTriggersKeyboardModality(node) {\n  const {\n    type,\n    tagName\n  } = node;\n  if (tagName === 'INPUT' && inputTypesWhitelist[type] && !node.readOnly) {\n    return true;\n  }\n  if (tagName === 'TEXTAREA' && !node.readOnly) {\n    return true;\n  }\n  if (node.isContentEditable) {\n    return true;\n  }\n  return false;\n}\n\n/**\n * Keep track of our keyboard modality state with `hadKeyboardEvent`.\n * If the most recent user interaction was via the keyboard;\n * and the key press did not include a meta, alt/option, or control key;\n * then the modality is keyboard. Otherwise, the modality is not keyboard.\n * @param {KeyboardEvent} event\n */\nfunction handleKeyDown(event) {\n  if (event.metaKey || event.altKey || event.ctrlKey) {\n    return;\n  }\n  hadKeyboardEvent = true;\n}\n\n/**\n * If at any point a user clicks with a pointing device, ensure that we change\n * the modality away from keyboard.\n * This avoids the situation where a user presses a key on an already focused\n * element, and then clicks on a different element, focusing it with a\n * pointing device, while we still think we're in keyboard modality.\n */\nfunction handlePointerDown() {\n  hadKeyboardEvent = false;\n}\nfunction handleVisibilityChange() {\n  if (this.visibilityState === 'hidden') {\n    // If the tab becomes active again, the browser will handle calling focus\n    // on the element (Safari actually calls it twice).\n    // If this tab change caused a blur on an element with focus-visible,\n    // re-apply the class when the user switches back to the tab.\n    if (hadFocusVisibleRecently) {\n      hadKeyboardEvent = true;\n    }\n  }\n}\nfunction prepare(doc) {\n  doc.addEventListener('keydown', handleKeyDown, true);\n  doc.addEventListener('mousedown', handlePointerDown, true);\n  doc.addEventListener('pointerdown', handlePointerDown, true);\n  doc.addEventListener('touchstart', handlePointerDown, true);\n  doc.addEventListener('visibilitychange', handleVisibilityChange, true);\n}\nexport function teardown(doc) {\n  doc.removeEventListener('keydown', handleKeyDown, true);\n  doc.removeEventListener('mousedown', handlePointerDown, true);\n  doc.removeEventListener('pointerdown', handlePointerDown, true);\n  doc.removeEventListener('touchstart', handlePointerDown, true);\n  doc.removeEventListener('visibilitychange', handleVisibilityChange, true);\n}\nfunction isFocusVisible(event) {\n  const {\n    target\n  } = event;\n  try {\n    return target.matches(':focus-visible');\n  } catch (error) {\n    // Browsers not implementing :focus-visible will throw a SyntaxError.\n    // We use our own heuristic for those browsers.\n    // Rethrow might be better if it's not the expected error but do we really\n    // want to crash if focus-visible malfunctioned?\n  }\n\n  // No need for validFocusTarget check. The user does that by attaching it to\n  // focusable events only.\n  return hadKeyboardEvent || focusTriggersKeyboardModality(target);\n}\nexport default function useIsFocusVisible() {\n  const ref = React.useCallback(node => {\n    if (node != null) {\n      prepare(node.ownerDocument);\n    }\n  }, []);\n  const isFocusVisibleRef = React.useRef(false);\n\n  /**\n   * Should be called if a blur event is fired\n   */\n  function handleBlurVisible() {\n    // checking against potential state variable does not suffice if we focus and blur synchronously.\n    // React wouldn't have time to trigger a re-render so `focusVisible` would be stale.\n    // Ideally we would adjust `isFocusVisible(event)` to look at `relatedTarget` for blur events.\n    // This doesn't work in IE11 due to https://github.com/facebook/react/issues/3751\n    // TODO: check again if React releases their internal changes to focus event handling (https://github.com/facebook/react/pull/19186).\n    if (isFocusVisibleRef.current) {\n      // To detect a tab/window switch, we look for a blur event followed\n      // rapidly by a visibility change.\n      // If we don't see a visibility change within 100ms, it's probably a\n      // regular focus change.\n      hadFocusVisibleRecently = true;\n      window.clearTimeout(hadFocusVisibleRecentlyTimeout);\n      hadFocusVisibleRecentlyTimeout = window.setTimeout(() => {\n        hadFocusVisibleRecently = false;\n      }, 100);\n      isFocusVisibleRef.current = false;\n      return true;\n    }\n    return false;\n  }\n\n  /**\n   * Should be called if a blur event is fired\n   */\n  function handleFocusVisible(event) {\n    if (isFocusVisible(event)) {\n      isFocusVisibleRef.current = true;\n      return true;\n    }\n    return false;\n  }\n  return {\n    isFocusVisibleRef,\n    onFocus: handleFocusVisible,\n    onBlur: handleBlurVisible,\n    ref\n  };\n}","'use client';\n\nimport { unstable_useIsFocusVisible as useIsFocusVisible } from '@mui/utils';\nexport default useIsFocusVisible;","/**\n * TODO v5: consider making it private\n *\n * passes {value} to {ref}\n *\n * WARNING: Be sure to only call this inside a callback that is passed as a ref.\n * Otherwise, make sure to cleanup the previous {ref} if it changes. See\n * https://github.com/mui/material-ui/issues/13539\n *\n * Useful if you want to expose the ref of an inner component to the public API\n * while still using it inside the component.\n * @param ref A ref callback or ref object. If anything falsy, this is a no-op.\n */\nexport default function setRef(ref, value) {\n  if (typeof ref === 'function') {\n    ref(value);\n  } else if (ref) {\n    ref.current = value;\n  }\n}","'use client';\n\nimport * as React from 'react';\n\n/**\n * A version of `React.useLayoutEffect` that does not show a warning when server-side rendering.\n * This is useful for effects that are only needed for client-side rendering but not for SSR.\n *\n * Before you use this hook, make sure to read https://gist.github.com/gaearon/e7d97cdf38a2907924ea12e4ebdf3c85\n * and confirm it doesn't apply to your use-case.\n */\nconst useEnhancedEffect = typeof window !== 'undefined' ? React.useLayoutEffect : React.useEffect;\nexport default useEnhancedEffect;","'use client';\n\nimport * as React from 'react';\nimport useEnhancedEffect from '../useEnhancedEffect';\n\n/**\n * Inspired by https://github.com/facebook/react/issues/14099#issuecomment-440013892\n * See RFC in https://github.com/reactjs/rfcs/pull/220\n */\n\nfunction useEventCallback(fn) {\n  const ref = React.useRef(fn);\n  useEnhancedEffect(() => {\n    ref.current = fn;\n  });\n  return React.useRef((...args) =>\n  // @ts-expect-error hide `this`\n  // tslint:disable-next-line:ban-comma-operator\n  (0, ref.current)(...args)).current;\n}\nexport default useEventCallback;","'use client';\n\nimport * as React from 'react';\nimport setRef from '../setRef';\nexport default function useForkRef(...refs) {\n  /**\n   * This will create a new function if the refs passed to this hook change and are all defined.\n   * This means react will call the old forkRef with `null` and the new forkRef\n   * with the ref. Cleanup naturally emerges from this behavior.\n   */\n  return React.useMemo(() => {\n    if (refs.every(ref => ref == null)) {\n      return null;\n    }\n    return instance => {\n      refs.forEach(ref => {\n        setRef(ref, instance);\n      });\n    };\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, refs);\n}","import { invariant } from '../../utils/errors.mjs';\nimport { setValues } from '../../render/utils/setters.mjs';\nimport { animateVisualElement } from '../interfaces/visual-element.mjs';\n\nfunction stopAnimation(visualElement) {\n    visualElement.values.forEach((value) => value.stop());\n}\n/**\n * @public\n */\nfunction animationControls() {\n    /**\n     * Track whether the host component has mounted.\n     */\n    let hasMounted = false;\n    /**\n     * A collection of linked component animation controls.\n     */\n    const subscribers = new Set();\n    const controls = {\n        subscribe(visualElement) {\n            subscribers.add(visualElement);\n            return () => void subscribers.delete(visualElement);\n        },\n        start(definition, transitionOverride) {\n            invariant(hasMounted, \"controls.start() should only be called after a component has mounted. Consider calling within a useEffect hook.\");\n            const animations = [];\n            subscribers.forEach((visualElement) => {\n                animations.push(animateVisualElement(visualElement, definition, {\n                    transitionOverride,\n                }));\n            });\n            return Promise.all(animations);\n        },\n        set(definition) {\n            invariant(hasMounted, \"controls.set() should only be called after a component has mounted. Consider calling within a useEffect hook.\");\n            return subscribers.forEach((visualElement) => {\n                setValues(visualElement, definition);\n            });\n        },\n        stop() {\n            subscribers.forEach((visualElement) => {\n                stopAnimation(visualElement);\n            });\n        },\n        mount() {\n            hasMounted = true;\n            return () => {\n                hasMounted = false;\n                controls.stop();\n            };\n        },\n    };\n    return controls;\n}\n\nexport { animationControls };\n","import { animationControls } from './animation-controls.mjs';\nimport { useConstant } from '../../utils/use-constant.mjs';\nimport { useIsomorphicLayoutEffect } from '../../utils/use-isomorphic-effect.mjs';\n\n/**\n * Creates `AnimationControls`, which can be used to manually start, stop\n * and sequence animations on one or more components.\n *\n * The returned `AnimationControls` should be passed to the `animate` property\n * of the components you want to animate.\n *\n * These components can then be animated with the `start` method.\n *\n * ```jsx\n * import * as React from 'react'\n * import { motion, useAnimation } from 'framer-motion'\n *\n * export function MyComponent(props) {\n *    const controls = useAnimation()\n *\n *    controls.start({\n *        x: 100,\n *        transition: { duration: 0.5 },\n *    })\n *\n *    return <motion.div animate={controls} />\n * }\n * ```\n *\n * @returns Animation controller with `start` and `stop` methods\n *\n * @public\n */\nfunction useAnimationControls() {\n    const controls = useConstant(animationControls);\n    useIsomorphicLayoutEffect(controls.mount, []);\n    return controls;\n}\nconst useAnimation = useAnimationControls;\n\nexport { useAnimation, useAnimationControls };\n","const instantAnimationState = {\n    current: false,\n};\n\nexport { instantAnimationState };\n","const isBezierDefinition = (easing) => Array.isArray(easing) && typeof easing[0] === \"number\";\n\nexport { isBezierDefinition };\n","import { isBezierDefinition } from '../../../easing/utils/is-bezier-definition.mjs';\n\nfunction isWaapiSupportedEasing(easing) {\n    return Boolean(!easing ||\n        (typeof easing === \"string\" && supportedWaapiEasing[easing]) ||\n        isBezierDefinition(easing) ||\n        (Array.isArray(easing) && easing.every(isWaapiSupportedEasing)));\n}\nconst cubicBezierAsString = ([a, b, c, d]) => `cubic-bezier(${a}, ${b}, ${c}, ${d})`;\nconst supportedWaapiEasing = {\n    linear: \"linear\",\n    ease: \"ease\",\n    easeIn: \"ease-in\",\n    easeOut: \"ease-out\",\n    easeInOut: \"ease-in-out\",\n    circIn: cubicBezierAsString([0, 0.65, 0.55, 1]),\n    circOut: cubicBezierAsString([0.55, 0, 1, 0.45]),\n    backIn: cubicBezierAsString([0.31, 0.01, 0.66, -0.59]),\n    backOut: cubicBezierAsString([0.33, 1.53, 0.69, 0.99]),\n};\nfunction mapEasingToNativeEasing(easing) {\n    if (!easing)\n        return undefined;\n    return isBezierDefinition(easing)\n        ? cubicBezierAsString(easing)\n        : Array.isArray(easing)\n            ? easing.map(mapEasingToNativeEasing)\n            : supportedWaapiEasing[easing];\n}\n\nexport { cubicBezierAsString, isWaapiSupportedEasing, mapEasingToNativeEasing, supportedWaapiEasing };\n","import { noop } from '../utils/noop.mjs';\n\n/*\n  Bezier function generator\n  This has been modified from Gaëtan Renaudeau's BezierEasing\n  https://github.com/gre/bezier-easing/blob/master/src/index.js\n  https://github.com/gre/bezier-easing/blob/master/LICENSE\n  \n  I've removed the newtonRaphsonIterate algo because in benchmarking it\n  wasn't noticiably faster than binarySubdivision, indeed removing it\n  usually improved times, depending on the curve.\n  I also removed the lookup table, as for the added bundle size and loop we're\n  only cutting ~4 or so subdivision iterations. I bumped the max iterations up\n  to 12 to compensate and this still tended to be faster for no perceivable\n  loss in accuracy.\n  Usage\n    const easeOut = cubicBezier(.17,.67,.83,.67);\n    const x = easeOut(0.5); // returns 0.627...\n*/\n// Returns x(t) given t, x1, and x2, or y(t) given t, y1, and y2.\nconst calcBezier = (t, a1, a2) => (((1.0 - 3.0 * a2 + 3.0 * a1) * t + (3.0 * a2 - 6.0 * a1)) * t + 3.0 * a1) *\n    t;\nconst subdivisionPrecision = 0.0000001;\nconst subdivisionMaxIterations = 12;\nfunction binarySubdivide(x, lowerBound, upperBound, mX1, mX2) {\n    let currentX;\n    let currentT;\n    let i = 0;\n    do {\n        currentT = lowerBound + (upperBound - lowerBound) / 2.0;\n        currentX = calcBezier(currentT, mX1, mX2) - x;\n        if (currentX > 0.0) {\n            upperBound = currentT;\n        }\n        else {\n            lowerBound = currentT;\n        }\n    } while (Math.abs(currentX) > subdivisionPrecision &&\n        ++i < subdivisionMaxIterations);\n    return currentT;\n}\nfunction cubicBezier(mX1, mY1, mX2, mY2) {\n    // If this is a linear gradient, return linear easing\n    if (mX1 === mY1 && mX2 === mY2)\n        return noop;\n    const getTForX = (aX) => binarySubdivide(aX, 0, 1, mX1, mX2);\n    // If animation is at start/end, return t without easing\n    return (t) => t === 0 || t === 1 ? t : calcBezier(getTForX(t), mY1, mY2);\n}\n\nexport { cubicBezier };\n","import { cubicBezier } from './cubic-bezier.mjs';\n\nconst easeIn = cubicBezier(0.42, 0, 1, 1);\nconst easeOut = cubicBezier(0, 0, 0.58, 1);\nconst easeInOut = cubicBezier(0.42, 0, 0.58, 1);\n\nexport { easeIn, easeInOut, easeOut };\n","const isEasingArray = (ease) => {\n    return Array.isArray(ease) && typeof ease[0] !== \"number\";\n};\n\nexport { isEasingArray };\n","import { cubicBezier } from './cubic-bezier.mjs';\nimport { mirrorEasing } from './modifiers/mirror.mjs';\nimport { reverseEasing } from './modifiers/reverse.mjs';\n\nconst backOut = cubicBezier(0.33, 1.53, 0.69, 0.99);\nconst backIn = reverseEasing(backOut);\nconst backInOut = mirrorEasing(backIn);\n\nexport { backIn, backInOut, backOut };\n","import { invariant } from '../../utils/errors.mjs';\nimport { cubicBezier } from '../cubic-bezier.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { easeIn, easeInOut, easeOut } from '../ease.mjs';\nimport { circIn, circInOut, circOut } from '../circ.mjs';\nimport { backIn, backInOut, backOut } from '../back.mjs';\nimport { anticipate } from '../anticipate.mjs';\n\nconst easingLookup = {\n    linear: noop,\n    easeIn,\n    easeInOut,\n    easeOut,\n    circIn,\n    circInOut,\n    circOut,\n    backIn,\n    backInOut,\n    backOut,\n    anticipate,\n};\nconst easingDefinitionToFunction = (definition) => {\n    if (Array.isArray(definition)) {\n        // If cubic bezier definition, create bezier curve\n        invariant(definition.length === 4, `Cubic bezier arrays must contain four numerical values.`);\n        const [x1, y1, x2, y2] = definition;\n        return cubicBezier(x1, y1, x2, y2);\n    }\n    else if (typeof definition === \"string\") {\n        // Else lookup from table\n        invariant(easingLookup[definition] !== undefined, `Invalid easing type '${definition}'`);\n        return easingLookup[definition];\n    }\n    return definition;\n};\n\nexport { easingDefinitionToFunction };\n","import { backIn } from './back.mjs';\n\nconst anticipate = (p) => (p *= 2) < 1 ? 0.5 * backIn(p) : 0.5 * (2 - Math.pow(2, -10 * (p - 1)));\n\nexport { anticipate };\n","// Adapted from https://gist.github.com/mjackson/5311256\nfunction hueToRgb(p, q, t) {\n    if (t < 0)\n        t += 1;\n    if (t > 1)\n        t -= 1;\n    if (t < 1 / 6)\n        return p + (q - p) * 6 * t;\n    if (t < 1 / 2)\n        return q;\n    if (t < 2 / 3)\n        return p + (q - p) * (2 / 3 - t) * 6;\n    return p;\n}\nfunction hslaToRgba({ hue, saturation, lightness, alpha }) {\n    hue /= 360;\n    saturation /= 100;\n    lightness /= 100;\n    let red = 0;\n    let green = 0;\n    let blue = 0;\n    if (!saturation) {\n        red = green = blue = lightness;\n    }\n    else {\n        const q = lightness < 0.5\n            ? lightness * (1 + saturation)\n            : lightness + saturation - lightness * saturation;\n        const p = 2 * lightness - q;\n        red = hueToRgb(p, q, hue + 1 / 3);\n        green = hueToRgb(p, q, hue);\n        blue = hueToRgb(p, q, hue - 1 / 3);\n    }\n    return {\n        red: Math.round(red * 255),\n        green: Math.round(green * 255),\n        blue: Math.round(blue * 255),\n        alpha,\n    };\n}\n\nexport { hslaToRgba };\n","import { mix } from './mix.mjs';\nimport { invariant } from './errors.mjs';\nimport { hslaToRgba } from './hsla-to-rgba.mjs';\nimport { hex } from '../value/types/color/hex.mjs';\nimport { rgba } from '../value/types/color/rgba.mjs';\nimport { hsla } from '../value/types/color/hsla.mjs';\n\n// Linear color space blending\n// Explained https://www.youtube.com/watch?v=LKnqECcg6Gw\n// Demonstrated http://codepen.io/osublake/pen/xGVVaN\nconst mixLinearColor = (from, to, v) => {\n    const fromExpo = from * from;\n    return Math.sqrt(Math.max(0, v * (to * to - fromExpo) + fromExpo));\n};\nconst colorTypes = [hex, rgba, hsla];\nconst getColorType = (v) => colorTypes.find((type) => type.test(v));\nfunction asRGBA(color) {\n    const type = getColorType(color);\n    invariant(Boolean(type), `'${color}' is not an animatable color. Use the equivalent color code instead.`);\n    let model = type.parse(color);\n    if (type === hsla) {\n        // TODO Remove this cast - needed since Framer Motion's stricter typing\n        model = hslaToRgba(model);\n    }\n    return model;\n}\nconst mixColor = (from, to) => {\n    const fromRGBA = asRGBA(from);\n    const toRGBA = asRGBA(to);\n    const blended = { ...fromRGBA };\n    return (v) => {\n        blended.red = mixLinearColor(fromRGBA.red, toRGBA.red, v);\n        blended.green = mixLinearColor(fromRGBA.green, toRGBA.green, v);\n        blended.blue = mixLinearColor(fromRGBA.blue, toRGBA.blue, v);\n        blended.alpha = mix(fromRGBA.alpha, toRGBA.alpha, v);\n        return rgba.transform(blended);\n    };\n};\n\nexport { mixColor, mixLinearColor };\n","import { mix } from './mix.mjs';\nimport { mixColor } from './mix-color.mjs';\nimport { pipe } from './pipe.mjs';\nimport { warning } from './errors.mjs';\nimport { color } from '../value/types/color/index.mjs';\nimport { complex, analyseComplexValue } from '../value/types/complex/index.mjs';\n\nconst mixImmediate = (origin, target) => (p) => `${p > 0 ? target : origin}`;\nfunction getMixer(origin, target) {\n    if (typeof origin === \"number\") {\n        return (v) => mix(origin, target, v);\n    }\n    else if (color.test(origin)) {\n        return mixColor(origin, target);\n    }\n    else {\n        return origin.startsWith(\"var(\")\n            ? mixImmediate(origin, target)\n            : mixComplex(origin, target);\n    }\n}\nconst mixArray = (from, to) => {\n    const output = [...from];\n    const numValues = output.length;\n    const blendValue = from.map((fromThis, i) => getMixer(fromThis, to[i]));\n    return (v) => {\n        for (let i = 0; i < numValues; i++) {\n            output[i] = blendValue[i](v);\n        }\n        return output;\n    };\n};\nconst mixObject = (origin, target) => {\n    const output = { ...origin, ...target };\n    const blendValue = {};\n    for (const key in output) {\n        if (origin[key] !== undefined && target[key] !== undefined) {\n            blendValue[key] = getMixer(origin[key], target[key]);\n        }\n    }\n    return (v) => {\n        for (const key in blendValue) {\n            output[key] = blendValue[key](v);\n        }\n        return output;\n    };\n};\nconst mixComplex = (origin, target) => {\n    const template = complex.createTransformer(target);\n    const originStats = analyseComplexValue(origin);\n    const targetStats = analyseComplexValue(target);\n    const canInterpolate = originStats.numVars === targetStats.numVars &&\n        originStats.numColors === targetStats.numColors &&\n        originStats.numNumbers >= targetStats.numNumbers;\n    if (canInterpolate) {\n        return pipe(mixArray(originStats.values, targetStats.values), template);\n    }\n    else {\n        warning(true, `Complex values '${origin}' and '${target}' too different to mix. Ensure all colors are of the same type, and that each contains the same quantity of number and color values. Falling back to instant transition.`);\n        return mixImmediate(origin, target);\n    }\n};\n\nexport { mixArray, mixComplex, mixObject };\n","import { invariant } from './errors.mjs';\nimport { color } from '../value/types/color/index.mjs';\nimport { clamp } from './clamp.mjs';\nimport { mix } from './mix.mjs';\nimport { mixColor } from './mix-color.mjs';\nimport { mixComplex, mixArray, mixObject } from './mix-complex.mjs';\nimport { pipe } from './pipe.mjs';\nimport { progress } from './progress.mjs';\nimport { noop } from './noop.mjs';\n\nconst mixNumber = (from, to) => (p) => mix(from, to, p);\nfunction detectMixerFactory(v) {\n    if (typeof v === \"number\") {\n        return mixNumber;\n    }\n    else if (typeof v === \"string\") {\n        return color.test(v) ? mixColor : mixComplex;\n    }\n    else if (Array.isArray(v)) {\n        return mixArray;\n    }\n    else if (typeof v === \"object\") {\n        return mixObject;\n    }\n    return mixNumber;\n}\nfunction createMixers(output, ease, customMixer) {\n    const mixers = [];\n    const mixerFactory = customMixer || detectMixerFactory(output[0]);\n    const numMixers = output.length - 1;\n    for (let i = 0; i < numMixers; i++) {\n        let mixer = mixerFactory(output[i], output[i + 1]);\n        if (ease) {\n            const easingFunction = Array.isArray(ease) ? ease[i] || noop : ease;\n            mixer = pipe(easingFunction, mixer);\n        }\n        mixers.push(mixer);\n    }\n    return mixers;\n}\n/**\n * Create a function that maps from a numerical input array to a generic output array.\n *\n * Accepts:\n *   - Numbers\n *   - Colors (hex, hsl, hsla, rgb, rgba)\n *   - Complex (combinations of one or more numbers or strings)\n *\n * ```jsx\n * const mixColor = interpolate([0, 1], ['#fff', '#000'])\n *\n * mixColor(0.5) // 'rgba(128, 128, 128, 1)'\n * ```\n *\n * TODO Revist this approach once we've moved to data models for values,\n * probably not needed to pregenerate mixer functions.\n *\n * @public\n */\nfunction interpolate(input, output, { clamp: isClamp = true, ease, mixer } = {}) {\n    const inputLength = input.length;\n    invariant(inputLength === output.length, \"Both input and output ranges must be the same length\");\n    /**\n     * If we're only provided a single input, we can just make a function\n     * that returns the output.\n     */\n    if (inputLength === 1)\n        return () => output[0];\n    // If input runs highest -> lowest, reverse both arrays\n    if (input[0] > input[inputLength - 1]) {\n        input = [...input].reverse();\n        output = [...output].reverse();\n    }\n    const mixers = createMixers(output, ease, mixer);\n    const numMixers = mixers.length;\n    const interpolator = (v) => {\n        let i = 0;\n        if (numMixers > 1) {\n            for (; i < input.length - 2; i++) {\n                if (v < input[i + 1])\n                    break;\n            }\n        }\n        const progressInRange = progress(input[i], input[i + 1], v);\n        return mixers[i](progressInRange);\n    };\n    return isClamp\n        ? (v) => interpolator(clamp(input[0], input[inputLength - 1], v))\n        : interpolator;\n}\n\nexport { interpolate };\n","import { fillOffset } from './fill.mjs';\n\nfunction defaultOffset(arr) {\n    const offset = [0];\n    fillOffset(offset, arr.length - 1);\n    return offset;\n}\n\nexport { defaultOffset };\n","import { mix } from '../mix.mjs';\nimport { progress } from '../progress.mjs';\n\nfunction fillOffset(offset, remaining) {\n    const min = offset[offset.length - 1];\n    for (let i = 1; i <= remaining; i++) {\n        const offsetProgress = progress(0, remaining, i);\n        offset.push(mix(min, 1, offsetProgress));\n    }\n}\n\nexport { fillOffset };\n","import { easeInOut } from '../../easing/ease.mjs';\nimport { isEasingArray } from '../../easing/utils/is-easing-array.mjs';\nimport { easingDefinitionToFunction } from '../../easing/utils/map.mjs';\nimport { interpolate } from '../../utils/interpolate.mjs';\nimport { defaultOffset } from '../../utils/offsets/default.mjs';\nimport { convertOffsetToTimes } from '../../utils/offsets/time.mjs';\n\nfunction defaultEasing(values, easing) {\n    return values.map(() => easing || easeInOut).splice(0, values.length - 1);\n}\nfunction keyframes({ duration = 300, keyframes: keyframeValues, times, ease = \"easeInOut\", }) {\n    /**\n     * Easing functions can be externally defined as strings. Here we convert them\n     * into actual functions.\n     */\n    const easingFunctions = isEasingArray(ease)\n        ? ease.map(easingDefinitionToFunction)\n        : easingDefinitionToFunction(ease);\n    /**\n     * This is the Iterator-spec return value. We ensure it's mutable rather than using a generator\n     * to reduce GC during animation.\n     */\n    const state = {\n        done: false,\n        value: keyframeValues[0],\n    };\n    /**\n     * Create a times array based on the provided 0-1 offsets\n     */\n    const absoluteTimes = convertOffsetToTimes(\n    // Only use the provided offsets if they're the correct length\n    // TODO Maybe we should warn here if there's a length mismatch\n    times && times.length === keyframeValues.length\n        ? times\n        : defaultOffset(keyframeValues), duration);\n    const mapTimeToKeyframe = interpolate(absoluteTimes, keyframeValues, {\n        ease: Array.isArray(easingFunctions)\n            ? easingFunctions\n            : defaultEasing(keyframeValues, easingFunctions),\n    });\n    return {\n        calculatedDuration: duration,\n        next: (t) => {\n            state.value = mapTimeToKeyframe(t);\n            state.done = t >= duration;\n            return state;\n        },\n    };\n}\n\nexport { defaultEasing, keyframes };\n","function convertOffsetToTimes(offset, duration) {\n    return offset.map((o) => o * duration);\n}\n\nexport { convertOffsetToTimes };\n","import { velocityPerSecond } from '../../../utils/velocity-per-second.mjs';\n\nconst velocitySampleDuration = 5; // ms\nfunction calcGeneratorVelocity(resolveValue, t, current) {\n    const prevT = Math.max(t - velocitySampleDuration, 0);\n    return velocityPerSecond(current - resolveValue(prevT), t - prevT);\n}\n\nexport { calcGeneratorVelocity };\n","import { warning } from '../../../utils/errors.mjs';\nimport { clamp } from '../../../utils/clamp.mjs';\nimport { secondsToMilliseconds, millisecondsToSeconds } from '../../../utils/time-conversion.mjs';\n\nconst safeMin = 0.001;\nconst minDuration = 0.01;\nconst maxDuration = 10.0;\nconst minDamping = 0.05;\nconst maxDamping = 1;\nfunction findSpring({ duration = 800, bounce = 0.25, velocity = 0, mass = 1, }) {\n    let envelope;\n    let derivative;\n    warning(duration <= secondsToMilliseconds(maxDuration), \"Spring duration must be 10 seconds or less\");\n    let dampingRatio = 1 - bounce;\n    /**\n     * Restrict dampingRatio and duration to within acceptable ranges.\n     */\n    dampingRatio = clamp(minDamping, maxDamping, dampingRatio);\n    duration = clamp(minDuration, maxDuration, millisecondsToSeconds(duration));\n    if (dampingRatio < 1) {\n        /**\n         * Underdamped spring\n         */\n        envelope = (undampedFreq) => {\n            const exponentialDecay = undampedFreq * dampingRatio;\n            const delta = exponentialDecay * duration;\n            const a = exponentialDecay - velocity;\n            const b = calcAngularFreq(undampedFreq, dampingRatio);\n            const c = Math.exp(-delta);\n            return safeMin - (a / b) * c;\n        };\n        derivative = (undampedFreq) => {\n            const exponentialDecay = undampedFreq * dampingRatio;\n            const delta = exponentialDecay * duration;\n            const d = delta * velocity + velocity;\n            const e = Math.pow(dampingRatio, 2) * Math.pow(undampedFreq, 2) * duration;\n            const f = Math.exp(-delta);\n            const g = calcAngularFreq(Math.pow(undampedFreq, 2), dampingRatio);\n            const factor = -envelope(undampedFreq) + safeMin > 0 ? -1 : 1;\n            return (factor * ((d - e) * f)) / g;\n        };\n    }\n    else {\n        /**\n         * Critically-damped spring\n         */\n        envelope = (undampedFreq) => {\n            const a = Math.exp(-undampedFreq * duration);\n            const b = (undampedFreq - velocity) * duration + 1;\n            return -safeMin + a * b;\n        };\n        derivative = (undampedFreq) => {\n            const a = Math.exp(-undampedFreq * duration);\n            const b = (velocity - undampedFreq) * (duration * duration);\n            return a * b;\n        };\n    }\n    const initialGuess = 5 / duration;\n    const undampedFreq = approximateRoot(envelope, derivative, initialGuess);\n    duration = secondsToMilliseconds(duration);\n    if (isNaN(undampedFreq)) {\n        return {\n            stiffness: 100,\n            damping: 10,\n            duration,\n        };\n    }\n    else {\n        const stiffness = Math.pow(undampedFreq, 2) * mass;\n        return {\n            stiffness,\n            damping: dampingRatio * 2 * Math.sqrt(mass * stiffness),\n            duration,\n        };\n    }\n}\nconst rootIterations = 12;\nfunction approximateRoot(envelope, derivative, initialGuess) {\n    let result = initialGuess;\n    for (let i = 1; i < rootIterations; i++) {\n        result = result - envelope(result) / derivative(result);\n    }\n    return result;\n}\nfunction calcAngularFreq(undampedFreq, dampingRatio) {\n    return undampedFreq * Math.sqrt(1 - dampingRatio * dampingRatio);\n}\n\nexport { calcAngularFreq, findSpring, maxDamping, maxDuration, minDamping, minDuration };\n","import { millisecondsToSeconds } from '../../../utils/time-conversion.mjs';\nimport { calcGeneratorVelocity } from '../utils/velocity.mjs';\nimport { findSpring, calcAngularFreq } from './find.mjs';\n\nconst durationKeys = [\"duration\", \"bounce\"];\nconst physicsKeys = [\"stiffness\", \"damping\", \"mass\"];\nfunction isSpringType(options, keys) {\n    return keys.some((key) => options[key] !== undefined);\n}\nfunction getSpringOptions(options) {\n    let springOptions = {\n        velocity: 0.0,\n        stiffness: 100,\n        damping: 10,\n        mass: 1.0,\n        isResolvedFromDuration: false,\n        ...options,\n    };\n    // stiffness/damping/mass overrides duration/bounce\n    if (!isSpringType(options, physicsKeys) &&\n        isSpringType(options, durationKeys)) {\n        const derived = findSpring(options);\n        springOptions = {\n            ...springOptions,\n            ...derived,\n            velocity: 0.0,\n            mass: 1.0,\n        };\n        springOptions.isResolvedFromDuration = true;\n    }\n    return springOptions;\n}\nfunction spring({ keyframes, restDelta, restSpeed, ...options }) {\n    const origin = keyframes[0];\n    const target = keyframes[keyframes.length - 1];\n    /**\n     * This is the Iterator-spec return value. We ensure it's mutable rather than using a generator\n     * to reduce GC during animation.\n     */\n    const state = { done: false, value: origin };\n    const { stiffness, damping, mass, velocity, duration, isResolvedFromDuration, } = getSpringOptions(options);\n    const initialVelocity = velocity ? -millisecondsToSeconds(velocity) : 0.0;\n    const dampingRatio = damping / (2 * Math.sqrt(stiffness * mass));\n    const initialDelta = target - origin;\n    const undampedAngularFreq = millisecondsToSeconds(Math.sqrt(stiffness / mass));\n    /**\n     * If we're working on a granular scale, use smaller defaults for determining\n     * when the spring is finished.\n     *\n     * These defaults have been selected emprically based on what strikes a good\n     * ratio between feeling good and finishing as soon as changes are imperceptible.\n     */\n    const isGranularScale = Math.abs(initialDelta) < 5;\n    restSpeed || (restSpeed = isGranularScale ? 0.01 : 2);\n    restDelta || (restDelta = isGranularScale ? 0.005 : 0.5);\n    let resolveSpring;\n    if (dampingRatio < 1) {\n        const angularFreq = calcAngularFreq(undampedAngularFreq, dampingRatio);\n        // Underdamped spring\n        resolveSpring = (t) => {\n            const envelope = Math.exp(-dampingRatio * undampedAngularFreq * t);\n            return (target -\n                envelope *\n                    (((initialVelocity +\n                        dampingRatio * undampedAngularFreq * initialDelta) /\n                        angularFreq) *\n                        Math.sin(angularFreq * t) +\n                        initialDelta * Math.cos(angularFreq * t)));\n        };\n    }\n    else if (dampingRatio === 1) {\n        // Critically damped spring\n        resolveSpring = (t) => target -\n            Math.exp(-undampedAngularFreq * t) *\n                (initialDelta +\n                    (initialVelocity + undampedAngularFreq * initialDelta) * t);\n    }\n    else {\n        // Overdamped spring\n        const dampedAngularFreq = undampedAngularFreq * Math.sqrt(dampingRatio * dampingRatio - 1);\n        resolveSpring = (t) => {\n            const envelope = Math.exp(-dampingRatio * undampedAngularFreq * t);\n            // When performing sinh or cosh values can hit Infinity so we cap them here\n            const freqForT = Math.min(dampedAngularFreq * t, 300);\n            return (target -\n                (envelope *\n                    ((initialVelocity +\n                        dampingRatio * undampedAngularFreq * initialDelta) *\n                        Math.sinh(freqForT) +\n                        dampedAngularFreq *\n                            initialDelta *\n                            Math.cosh(freqForT))) /\n                    dampedAngularFreq);\n        };\n    }\n    return {\n        calculatedDuration: isResolvedFromDuration ? duration || null : null,\n        next: (t) => {\n            const current = resolveSpring(t);\n            if (!isResolvedFromDuration) {\n                let currentVelocity = initialVelocity;\n                if (t !== 0) {\n                    /**\n                     * We only need to calculate velocity for under-damped springs\n                     * as over- and critically-damped springs can't overshoot, so\n                     * checking only for displacement is enough.\n                     */\n                    if (dampingRatio < 1) {\n                        currentVelocity = calcGeneratorVelocity(resolveSpring, t, current);\n                    }\n                    else {\n                        currentVelocity = 0;\n                    }\n                }\n                const isBelowVelocityThreshold = Math.abs(currentVelocity) <= restSpeed;\n                const isBelowDisplacementThreshold = Math.abs(target - current) <= restDelta;\n                state.done =\n                    isBelowVelocityThreshold && isBelowDisplacementThreshold;\n            }\n            else {\n                state.done = t >= duration;\n            }\n            state.value = state.done ? target : current;\n            return state;\n        },\n    };\n}\n\nexport { spring };\n","import { spring } from './spring/index.mjs';\nimport { calcGeneratorVelocity } from './utils/velocity.mjs';\n\nfunction inertia({ keyframes, velocity = 0.0, power = 0.8, timeConstant = 325, bounceDamping = 10, bounceStiffness = 500, modifyTarget, min, max, restDelta = 0.5, restSpeed, }) {\n    const origin = keyframes[0];\n    const state = {\n        done: false,\n        value: origin,\n    };\n    const isOutOfBounds = (v) => (min !== undefined && v < min) || (max !== undefined && v > max);\n    const nearestBoundary = (v) => {\n        if (min === undefined)\n            return max;\n        if (max === undefined)\n            return min;\n        return Math.abs(min - v) < Math.abs(max - v) ? min : max;\n    };\n    let amplitude = power * velocity;\n    const ideal = origin + amplitude;\n    const target = modifyTarget === undefined ? ideal : modifyTarget(ideal);\n    /**\n     * If the target has changed we need to re-calculate the amplitude, otherwise\n     * the animation will start from the wrong position.\n     */\n    if (target !== ideal)\n        amplitude = target - origin;\n    const calcDelta = (t) => -amplitude * Math.exp(-t / timeConstant);\n    const calcLatest = (t) => target + calcDelta(t);\n    const applyFriction = (t) => {\n        const delta = calcDelta(t);\n        const latest = calcLatest(t);\n        state.done = Math.abs(delta) <= restDelta;\n        state.value = state.done ? target : latest;\n    };\n    /**\n     * Ideally this would resolve for t in a stateless way, we could\n     * do that by always precalculating the animation but as we know\n     * this will be done anyway we can assume that spring will\n     * be discovered during that.\n     */\n    let timeReachedBoundary;\n    let spring$1;\n    const checkCatchBoundary = (t) => {\n        if (!isOutOfBounds(state.value))\n            return;\n        timeReachedBoundary = t;\n        spring$1 = spring({\n            keyframes: [state.value, nearestBoundary(state.value)],\n            velocity: calcGeneratorVelocity(calcLatest, t, state.value),\n            damping: bounceDamping,\n            stiffness: bounceStiffness,\n            restDelta,\n            restSpeed,\n        });\n    };\n    checkCatchBoundary(0);\n    return {\n        calculatedDuration: null,\n        next: (t) => {\n            /**\n             * We need to resolve the friction to figure out if we need a\n             * spring but we don't want to do this twice per frame. So here\n             * we flag if we updated for this frame and later if we did\n             * we can skip doing it again.\n             */\n            let hasUpdatedFrame = false;\n            if (!spring$1 && timeReachedBoundary === undefined) {\n                hasUpdatedFrame = true;\n                applyFriction(t);\n                checkCatchBoundary(t);\n            }\n            /**\n             * If we have a spring and the provided t is beyond the moment the friction\n             * animation crossed the min/max boundary, use the spring.\n             */\n            if (timeReachedBoundary !== undefined && t > timeReachedBoundary) {\n                return spring$1.next(t - timeReachedBoundary);\n            }\n            else {\n                !hasUpdatedFrame && applyFriction(t);\n                return state;\n            }\n        },\n    };\n}\n\nexport { inertia };\n","import { frame, cancelFrame, frameData } from '../../../frameloop/frame.mjs';\n\nconst frameloopDriver = (update) => {\n    const passTimestamp = ({ timestamp }) => update(timestamp);\n    return {\n        start: () => frame.update(passTimestamp, true),\n        stop: () => cancelFrame(passTimestamp),\n        /**\n         * If we're processing this frame we can use the\n         * framelocked timestamp to keep things in sync.\n         */\n        now: () => frameData.isProcessing ? frameData.timestamp : performance.now(),\n    };\n};\n\nexport { frameloopDriver };\n","/**\n * Implement a practical max duration for keyframe generation\n * to prevent infinite loops\n */\nconst maxGeneratorDuration = 20000;\nfunction calcGeneratorDuration(generator) {\n    let duration = 0;\n    const timeStep = 50;\n    let state = generator.next(duration);\n    while (!state.done && duration < maxGeneratorDuration) {\n        duration += timeStep;\n        state = generator.next(duration);\n    }\n    return duration >= maxGeneratorDuration ? Infinity : duration;\n}\n\nexport { calcGeneratorDuration, maxGeneratorDuration };\n","import { keyframes } from '../../generators/keyframes.mjs';\nimport { spring } from '../../generators/spring/index.mjs';\nimport { inertia } from '../../generators/inertia.mjs';\nimport { frameloopDriver } from './driver-frameloop.mjs';\nimport { interpolate } from '../../../utils/interpolate.mjs';\nimport { clamp } from '../../../utils/clamp.mjs';\nimport { millisecondsToSeconds, secondsToMilliseconds } from '../../../utils/time-conversion.mjs';\nimport { calcGeneratorDuration } from '../../generators/utils/calc-duration.mjs';\n\nconst types = {\n    decay: inertia,\n    inertia,\n    tween: keyframes,\n    keyframes: keyframes,\n    spring,\n};\n/**\n * Animate a single value on the main thread.\n *\n * This function is written, where functionality overlaps,\n * to be largely spec-compliant with WAAPI to allow fungibility\n * between the two.\n */\nfunction animateValue({ autoplay = true, delay = 0, driver = frameloopDriver, keyframes: keyframes$1, type = \"keyframes\", repeat = 0, repeatDelay = 0, repeatType = \"loop\", onPlay, onStop, onComplete, onUpdate, ...options }) {\n    let speed = 1;\n    let hasStopped = false;\n    let resolveFinishedPromise;\n    let currentFinishedPromise;\n    /**\n     * Resolve the current Promise every time we enter the\n     * finished state. This is WAAPI-compatible behaviour.\n     */\n    const updateFinishedPromise = () => {\n        currentFinishedPromise = new Promise((resolve) => {\n            resolveFinishedPromise = resolve;\n        });\n    };\n    // Create the first finished promise\n    updateFinishedPromise();\n    let animationDriver;\n    const generatorFactory = types[type] || keyframes;\n    /**\n     * If this isn't the keyframes generator and we've been provided\n     * strings as keyframes, we need to interpolate these.\n     * TODO: Support velocity for units and complex value types/\n     */\n    let mapNumbersToKeyframes;\n    if (generatorFactory !== keyframes &&\n        typeof keyframes$1[0] !== \"number\") {\n        mapNumbersToKeyframes = interpolate([0, 100], keyframes$1, {\n            clamp: false,\n        });\n        keyframes$1 = [0, 100];\n    }\n    const generator = generatorFactory({ ...options, keyframes: keyframes$1 });\n    let mirroredGenerator;\n    if (repeatType === \"mirror\") {\n        mirroredGenerator = generatorFactory({\n            ...options,\n            keyframes: [...keyframes$1].reverse(),\n            velocity: -(options.velocity || 0),\n        });\n    }\n    let playState = \"idle\";\n    let holdTime = null;\n    let startTime = null;\n    let cancelTime = null;\n    /**\n     * If duration is undefined and we have repeat options,\n     * we need to calculate a duration from the generator.\n     *\n     * We set it to the generator itself to cache the duration.\n     * Any timeline resolver will need to have already precalculated\n     * the duration by this step.\n     */\n    if (generator.calculatedDuration === null && repeat) {\n        generator.calculatedDuration = calcGeneratorDuration(generator);\n    }\n    const { calculatedDuration } = generator;\n    let resolvedDuration = Infinity;\n    let totalDuration = Infinity;\n    if (calculatedDuration !== null) {\n        resolvedDuration = calculatedDuration + repeatDelay;\n        totalDuration = resolvedDuration * (repeat + 1) - repeatDelay;\n    }\n    let currentTime = 0;\n    const tick = (timestamp) => {\n        if (startTime === null)\n            return;\n        /**\n         * requestAnimationFrame timestamps can come through as lower than\n         * the startTime as set by performance.now(). Here we prevent this,\n         * though in the future it could be possible to make setting startTime\n         * a pending operation that gets resolved here.\n         */\n        if (speed > 0)\n            startTime = Math.min(startTime, timestamp);\n        if (speed < 0)\n            startTime = Math.min(timestamp - totalDuration / speed, startTime);\n        if (holdTime !== null) {\n            currentTime = holdTime;\n        }\n        else {\n            // Rounding the time because floating point arithmetic is not always accurate, e.g. 3000.367 - 1000.367 =\n            // 2000.0000000000002. This is a problem when we are comparing the currentTime with the duration, for\n            // example.\n            currentTime = Math.round(timestamp - startTime) * speed;\n        }\n        // Rebase on delay\n        const timeWithoutDelay = currentTime - delay * (speed >= 0 ? 1 : -1);\n        const isInDelayPhase = speed >= 0 ? timeWithoutDelay < 0 : timeWithoutDelay > totalDuration;\n        currentTime = Math.max(timeWithoutDelay, 0);\n        /**\n         * If this animation has finished, set the current time\n         * to the total duration.\n         */\n        if (playState === \"finished\" && holdTime === null) {\n            currentTime = totalDuration;\n        }\n        let elapsed = currentTime;\n        let frameGenerator = generator;\n        if (repeat) {\n            /**\n             * Get the current progress (0-1) of the animation. If t is >\n             * than duration we'll get values like 2.5 (midway through the\n             * third iteration)\n             */\n            const progress = currentTime / resolvedDuration;\n            /**\n             * Get the current iteration (0 indexed). For instance the floor of\n             * 2.5 is 2.\n             */\n            let currentIteration = Math.floor(progress);\n            /**\n             * Get the current progress of the iteration by taking the remainder\n             * so 2.5 is 0.5 through iteration 2\n             */\n            let iterationProgress = progress % 1.0;\n            /**\n             * If iteration progress is 1 we count that as the end\n             * of the previous iteration.\n             */\n            if (!iterationProgress && progress >= 1) {\n                iterationProgress = 1;\n            }\n            iterationProgress === 1 && currentIteration--;\n            currentIteration = Math.min(currentIteration, repeat + 1);\n            /**\n             * Reverse progress if we're not running in \"normal\" direction\n             */\n            const iterationIsOdd = Boolean(currentIteration % 2);\n            if (iterationIsOdd) {\n                if (repeatType === \"reverse\") {\n                    iterationProgress = 1 - iterationProgress;\n                    if (repeatDelay) {\n                        iterationProgress -= repeatDelay / resolvedDuration;\n                    }\n                }\n                else if (repeatType === \"mirror\") {\n                    frameGenerator = mirroredGenerator;\n                }\n            }\n            let p = clamp(0, 1, iterationProgress);\n            if (currentTime > totalDuration) {\n                p = repeatType === \"reverse\" && iterationIsOdd ? 1 : 0;\n            }\n            elapsed = p * resolvedDuration;\n        }\n        /**\n         * If we're in negative time, set state as the initial keyframe.\n         * This prevents delay: x, duration: 0 animations from finishing\n         * instantly.\n         */\n        const state = isInDelayPhase\n            ? { done: false, value: keyframes$1[0] }\n            : frameGenerator.next(elapsed);\n        if (mapNumbersToKeyframes) {\n            state.value = mapNumbersToKeyframes(state.value);\n        }\n        let { done } = state;\n        if (!isInDelayPhase && calculatedDuration !== null) {\n            done = speed >= 0 ? currentTime >= totalDuration : currentTime <= 0;\n        }\n        const isAnimationFinished = holdTime === null &&\n            (playState === \"finished\" || (playState === \"running\" && done));\n        if (onUpdate) {\n            onUpdate(state.value);\n        }\n        if (isAnimationFinished) {\n            finish();\n        }\n        return state;\n    };\n    const stopAnimationDriver = () => {\n        animationDriver && animationDriver.stop();\n        animationDriver = undefined;\n    };\n    const cancel = () => {\n        playState = \"idle\";\n        stopAnimationDriver();\n        resolveFinishedPromise();\n        updateFinishedPromise();\n        startTime = cancelTime = null;\n    };\n    const finish = () => {\n        playState = \"finished\";\n        onComplete && onComplete();\n        stopAnimationDriver();\n        resolveFinishedPromise();\n    };\n    const play = () => {\n        if (hasStopped)\n            return;\n        if (!animationDriver)\n            animationDriver = driver(tick);\n        const now = animationDriver.now();\n        onPlay && onPlay();\n        if (holdTime !== null) {\n            startTime = now - holdTime;\n        }\n        else if (!startTime || playState === \"finished\") {\n            startTime = now;\n        }\n        if (playState === \"finished\") {\n            updateFinishedPromise();\n        }\n        cancelTime = startTime;\n        holdTime = null;\n        /**\n         * Set playState to running only after we've used it in\n         * the previous logic.\n         */\n        playState = \"running\";\n        animationDriver.start();\n    };\n    if (autoplay) {\n        play();\n    }\n    const controls = {\n        then(resolve, reject) {\n            return currentFinishedPromise.then(resolve, reject);\n        },\n        get time() {\n            return millisecondsToSeconds(currentTime);\n        },\n        set time(newTime) {\n            newTime = secondsToMilliseconds(newTime);\n            currentTime = newTime;\n            if (holdTime !== null || !animationDriver || speed === 0) {\n                holdTime = newTime;\n            }\n            else {\n                startTime = animationDriver.now() - newTime / speed;\n            }\n        },\n        get duration() {\n            const duration = generator.calculatedDuration === null\n                ? calcGeneratorDuration(generator)\n                : generator.calculatedDuration;\n            return millisecondsToSeconds(duration);\n        },\n        get speed() {\n            return speed;\n        },\n        set speed(newSpeed) {\n            if (newSpeed === speed || !animationDriver)\n                return;\n            speed = newSpeed;\n            controls.time = millisecondsToSeconds(currentTime);\n        },\n        get state() {\n            return playState;\n        },\n        play,\n        pause: () => {\n            playState = \"paused\";\n            holdTime = currentTime;\n        },\n        stop: () => {\n            hasStopped = true;\n            if (playState === \"idle\")\n                return;\n            playState = \"idle\";\n            onStop && onStop();\n            cancel();\n        },\n        cancel: () => {\n            if (cancelTime !== null)\n                tick(cancelTime);\n            cancel();\n        },\n        complete: () => {\n            playState = \"finished\";\n        },\n        sample: (elapsed) => {\n            startTime = 0;\n            return tick(elapsed);\n        },\n    };\n    return controls;\n}\n\nexport { animateValue };\n","import { animateStyle } from './index.mjs';\nimport { isWaapiSupportedEasing } from './easing.mjs';\nimport { getFinalKeyframe } from './utils/get-final-keyframe.mjs';\nimport { animateValue } from '../js/index.mjs';\nimport { millisecondsToSeconds, secondsToMilliseconds } from '../../../utils/time-conversion.mjs';\nimport { memo } from '../../../utils/memo.mjs';\nimport { noop } from '../../../utils/noop.mjs';\nimport { frame, cancelFrame } from '../../../frameloop/frame.mjs';\n\nconst supportsWaapi = memo(() => Object.hasOwnProperty.call(Element.prototype, \"animate\"));\n/**\n * A list of values that can be hardware-accelerated.\n */\nconst acceleratedValues = new Set([\n    \"opacity\",\n    \"clipPath\",\n    \"filter\",\n    \"transform\",\n    \"backgroundColor\",\n]);\n/**\n * 10ms is chosen here as it strikes a balance between smooth\n * results (more than one keyframe per frame at 60fps) and\n * keyframe quantity.\n */\nconst sampleDelta = 10; //ms\n/**\n * Implement a practical max duration for keyframe generation\n * to prevent infinite loops\n */\nconst maxDuration = 20000;\nconst requiresPregeneratedKeyframes = (valueName, options) => options.type === \"spring\" ||\n    valueName === \"backgroundColor\" ||\n    !isWaapiSupportedEasing(options.ease);\nfunction createAcceleratedAnimation(value, valueName, { onUpdate, onComplete, ...options }) {\n    const canAccelerateAnimation = supportsWaapi() &&\n        acceleratedValues.has(valueName) &&\n        !options.repeatDelay &&\n        options.repeatType !== \"mirror\" &&\n        options.damping !== 0 &&\n        options.type !== \"inertia\";\n    if (!canAccelerateAnimation)\n        return false;\n    /**\n     * TODO: Unify with js/index\n     */\n    let hasStopped = false;\n    let resolveFinishedPromise;\n    let currentFinishedPromise;\n    /**\n     * Resolve the current Promise every time we enter the\n     * finished state. This is WAAPI-compatible behaviour.\n     */\n    const updateFinishedPromise = () => {\n        currentFinishedPromise = new Promise((resolve) => {\n            resolveFinishedPromise = resolve;\n        });\n    };\n    // Create the first finished promise\n    updateFinishedPromise();\n    let { keyframes, duration = 300, ease, times } = options;\n    /**\n     * If this animation needs pre-generated keyframes then generate.\n     */\n    if (requiresPregeneratedKeyframes(valueName, options)) {\n        const sampleAnimation = animateValue({\n            ...options,\n            repeat: 0,\n            delay: 0,\n        });\n        let state = { done: false, value: keyframes[0] };\n        const pregeneratedKeyframes = [];\n        /**\n         * Bail after 20 seconds of pre-generated keyframes as it's likely\n         * we're heading for an infinite loop.\n         */\n        let t = 0;\n        while (!state.done && t < maxDuration) {\n            state = sampleAnimation.sample(t);\n            pregeneratedKeyframes.push(state.value);\n            t += sampleDelta;\n        }\n        times = undefined;\n        keyframes = pregeneratedKeyframes;\n        duration = t - sampleDelta;\n        ease = \"linear\";\n    }\n    const animation = animateStyle(value.owner.current, valueName, keyframes, {\n        ...options,\n        duration,\n        /**\n         * This function is currently not called if ease is provided\n         * as a function so the cast is safe.\n         *\n         * However it would be possible for a future refinement to port\n         * in easing pregeneration from Motion One for browsers that\n         * support the upcoming `linear()` easing function.\n         */\n        ease: ease,\n        times,\n    });\n    const cancelAnimation = () => animation.cancel();\n    const safeCancel = () => {\n        frame.update(cancelAnimation);\n        resolveFinishedPromise();\n        updateFinishedPromise();\n    };\n    /**\n     * Prefer the `onfinish` prop as it's more widely supported than\n     * the `finished` promise.\n     *\n     * Here, we synchronously set the provided MotionValue to the end\n     * keyframe. If we didn't, when the WAAPI animation is finished it would\n     * be removed from the element which would then revert to its old styles.\n     */\n    animation.onfinish = () => {\n        value.set(getFinalKeyframe(keyframes, options));\n        onComplete && onComplete();\n        safeCancel();\n    };\n    /**\n     * Animation interrupt callback.\n     */\n    const controls = {\n        then(resolve, reject) {\n            return currentFinishedPromise.then(resolve, reject);\n        },\n        attachTimeline(timeline) {\n            animation.timeline = timeline;\n            animation.onfinish = null;\n            return noop;\n        },\n        get time() {\n            return millisecondsToSeconds(animation.currentTime || 0);\n        },\n        set time(newTime) {\n            animation.currentTime = secondsToMilliseconds(newTime);\n        },\n        get speed() {\n            return animation.playbackRate;\n        },\n        set speed(newSpeed) {\n            animation.playbackRate = newSpeed;\n        },\n        get duration() {\n            return millisecondsToSeconds(duration);\n        },\n        play: () => {\n            if (hasStopped)\n                return;\n            animation.play();\n            /**\n             * Cancel any pending cancel tasks\n             */\n            cancelFrame(cancelAnimation);\n        },\n        pause: () => animation.pause(),\n        stop: () => {\n            hasStopped = true;\n            if (animation.playState === \"idle\")\n                return;\n            /**\n             * WAAPI doesn't natively have any interruption capabilities.\n             *\n             * Rather than read commited styles back out of the DOM, we can\n             * create a renderless JS animation and sample it twice to calculate\n             * its current value, \"previous\" value, and therefore allow\n             * Motion to calculate velocity for any subsequent animation.\n             */\n            const { currentTime } = animation;\n            if (currentTime) {\n                const sampleAnimation = animateValue({\n                    ...options,\n                    autoplay: false,\n                });\n                value.setWithVelocity(sampleAnimation.sample(currentTime - sampleDelta).value, sampleAnimation.sample(currentTime).value, sampleDelta);\n            }\n            safeCancel();\n        },\n        complete: () => animation.finish(),\n        cancel: safeCancel,\n    };\n    return controls;\n}\n\nexport { createAcceleratedAnimation };\n","function memo(callback) {\n    let result;\n    return () => {\n        if (result === undefined)\n            result = callback();\n        return result;\n    };\n}\n\nexport { memo };\n","import { mapEasingToNativeEasing } from './easing.mjs';\n\nfunction animateStyle(element, valueName, keyframes, { delay = 0, duration, repeat = 0, repeatType = \"loop\", ease, times, } = {}) {\n    const keyframeOptions = { [valueName]: keyframes };\n    if (times)\n        keyframeOptions.offset = times;\n    const easing = mapEasingToNativeEasing(ease);\n    /**\n     * If this is an easing array, apply to keyframes, not animation as a whole\n     */\n    if (Array.isArray(easing))\n        keyframeOptions.easing = easing;\n    return element.animate(keyframeOptions, {\n        delay,\n        duration,\n        easing: !Array.isArray(easing) ? easing : \"linear\",\n        fill: \"both\",\n        iterations: repeat + 1,\n        direction: repeatType === \"reverse\" ? \"alternate\" : \"normal\",\n    });\n}\n\nexport { animateStyle };\n","function getFinalKeyframe(keyframes, { repeat, repeatType = \"loop\" }) {\n    const index = repeat && repeatType !== \"loop\" && repeat % 2 === 1\n        ? 0\n        : keyframes.length - 1;\n    return keyframes[index];\n}\n\nexport { getFinalKeyframe };\n","import { transformProps } from '../../render/html/utils/transform.mjs';\n\nconst underDampedSpring = {\n    type: \"spring\",\n    stiffness: 500,\n    damping: 25,\n    restSpeed: 10,\n};\nconst criticallyDampedSpring = (target) => ({\n    type: \"spring\",\n    stiffness: 550,\n    damping: target === 0 ? 2 * Math.sqrt(550) : 30,\n    restSpeed: 10,\n});\nconst keyframesTransition = {\n    type: \"keyframes\",\n    duration: 0.8,\n};\n/**\n * Default easing curve is a slightly shallower version of\n * the default browser easing curve.\n */\nconst ease = {\n    type: \"keyframes\",\n    ease: [0.25, 0.1, 0.35, 1],\n    duration: 0.3,\n};\nconst getDefaultTransition = (valueKey, { keyframes }) => {\n    if (keyframes.length > 2) {\n        return keyframesTransition;\n    }\n    else if (transformProps.has(valueKey)) {\n        return valueKey.startsWith(\"scale\")\n            ? criticallyDampedSpring(keyframes[1])\n            : underDampedSpring;\n    }\n    return ease;\n};\n\nexport { getDefaultTransition };\n","import { complex } from '../../value/types/complex/index.mjs';\n\n/**\n * Check if a value is animatable. Examples:\n *\n * ✅: 100, \"100px\", \"#fff\"\n * ❌: \"block\", \"url(2.jpg)\"\n * @param value\n *\n * @internal\n */\nconst isAnimatable = (key, value) => {\n    // If the list of keys tat might be non-animatable grows, replace with Set\n    if (key === \"zIndex\")\n        return false;\n    // If it's a number or a keyframes array, we can animate it. We might at some point\n    // need to do a deep isAnimatable check of keyframes, or let Popmotion handle this,\n    // but for now lets leave it like this for performance reasons\n    if (typeof value === \"number\" || Array.isArray(value))\n        return true;\n    if (typeof value === \"string\" && // It's animatable if we have a string\n        (complex.test(value) || value === \"0\") && // And it contains numbers and/or colors\n        !value.startsWith(\"url(\") // Unless it starts with \"url(\"\n    ) {\n        return true;\n    }\n    return false;\n};\n\nexport { isAnimatable };\n","import { isZeroValueString } from '../../utils/is-zero-value-string.mjs';\n\nfunction isNone(value) {\n    if (typeof value === \"number\") {\n        return value === 0;\n    }\n    else if (value !== null) {\n        return value === \"none\" || value === \"0\" || isZeroValueString(value);\n    }\n}\n\nexport { isNone };\n","import { warning } from '../../utils/errors.mjs';\nimport { secondsToMilliseconds } from '../../utils/time-conversion.mjs';\nimport { instantAnimationState } from '../../utils/use-instant-transition-state.mjs';\nimport { createAcceleratedAnimation } from '../animators/waapi/create-accelerated-animation.mjs';\nimport { createInstantAnimation } from '../animators/instant.mjs';\nimport { getDefaultTransition } from '../utils/default-transitions.mjs';\nimport { isAnimatable } from '../utils/is-animatable.mjs';\nimport { getKeyframes } from '../utils/keyframes.mjs';\nimport { getValueTransition, isTransitionDefined } from '../utils/transitions.mjs';\nimport { animateValue } from '../animators/js/index.mjs';\n\nconst animateMotionValue = (valueName, value, target, transition = {}) => {\n    return (onComplete) => {\n        const valueTransition = getValueTransition(transition, valueName) || {};\n        /**\n         * Most transition values are currently completely overwritten by value-specific\n         * transitions. In the future it'd be nicer to blend these transitions. But for now\n         * delay actually does inherit from the root transition if not value-specific.\n         */\n        const delay = valueTransition.delay || transition.delay || 0;\n        /**\n         * Elapsed isn't a public transition option but can be passed through from\n         * optimized appear effects in milliseconds.\n         */\n        let { elapsed = 0 } = transition;\n        elapsed = elapsed - secondsToMilliseconds(delay);\n        const keyframes = getKeyframes(value, valueName, target, valueTransition);\n        /**\n         * Check if we're able to animate between the start and end keyframes,\n         * and throw a warning if we're attempting to animate between one that's\n         * animatable and another that isn't.\n         */\n        const originKeyframe = keyframes[0];\n        const targetKeyframe = keyframes[keyframes.length - 1];\n        const isOriginAnimatable = isAnimatable(valueName, originKeyframe);\n        const isTargetAnimatable = isAnimatable(valueName, targetKeyframe);\n        warning(isOriginAnimatable === isTargetAnimatable, `You are trying to animate ${valueName} from \"${originKeyframe}\" to \"${targetKeyframe}\". ${originKeyframe} is not an animatable value - to enable this animation set ${originKeyframe} to a value animatable to ${targetKeyframe} via the \\`style\\` property.`);\n        let options = {\n            keyframes,\n            velocity: value.getVelocity(),\n            ease: \"easeOut\",\n            ...valueTransition,\n            delay: -elapsed,\n            onUpdate: (v) => {\n                value.set(v);\n                valueTransition.onUpdate && valueTransition.onUpdate(v);\n            },\n            onComplete: () => {\n                onComplete();\n                valueTransition.onComplete && valueTransition.onComplete();\n            },\n        };\n        /**\n         * If there's no transition defined for this value, we can generate\n         * unqiue transition settings for this value.\n         */\n        if (!isTransitionDefined(valueTransition)) {\n            options = {\n                ...options,\n                ...getDefaultTransition(valueName, options),\n            };\n        }\n        /**\n         * Both WAAPI and our internal animation functions use durations\n         * as defined by milliseconds, while our external API defines them\n         * as seconds.\n         */\n        if (options.duration) {\n            options.duration = secondsToMilliseconds(options.duration);\n        }\n        if (options.repeatDelay) {\n            options.repeatDelay = secondsToMilliseconds(options.repeatDelay);\n        }\n        if (!isOriginAnimatable ||\n            !isTargetAnimatable ||\n            instantAnimationState.current ||\n            valueTransition.type === false) {\n            /**\n             * If we can't animate this value, or the global instant animation flag is set,\n             * or this is simply defined as an instant transition, return an instant transition.\n             */\n            return createInstantAnimation(instantAnimationState.current\n                ? { ...options, delay: 0 }\n                : options);\n        }\n        /**\n         * Animate via WAAPI if possible.\n         */\n        if (\n        /**\n         * If this is a handoff animation, the optimised animation will be running via\n         * WAAPI. Therefore, this animation must be JS to ensure it runs \"under\" the\n         * optimised animation.\n         */\n        !transition.isHandoff &&\n            value.owner &&\n            value.owner.current instanceof HTMLElement &&\n            /**\n             * If we're outputting values to onUpdate then we can't use WAAPI as there's\n             * no way to read the value from WAAPI every frame.\n             */\n            !value.owner.getProps().onUpdate) {\n            const acceleratedAnimation = createAcceleratedAnimation(value, valueName, options);\n            if (acceleratedAnimation)\n                return acceleratedAnimation;\n        }\n        /**\n         * If we didn't create an accelerated animation, create a JS animation\n         */\n        return animateValue(options);\n    };\n};\n\nexport { animateMotionValue };\n","import { getAnimatableNone } from '../../render/dom/value-types/animatable-none.mjs';\nimport { isAnimatable } from './is-animatable.mjs';\nimport { isNone } from './is-none.mjs';\n\nfunction getKeyframes(value, valueName, target, transition) {\n    const isTargetAnimatable = isAnimatable(valueName, target);\n    let keyframes;\n    if (Array.isArray(target)) {\n        keyframes = [...target];\n    }\n    else {\n        keyframes = [null, target];\n    }\n    const defaultOrigin = transition.from !== undefined ? transition.from : value.get();\n    let animatableTemplateValue = undefined;\n    const noneKeyframeIndexes = [];\n    for (let i = 0; i < keyframes.length; i++) {\n        /**\n         * Fill null/wildcard keyframes\n         */\n        if (keyframes[i] === null) {\n            keyframes[i] = i === 0 ? defaultOrigin : keyframes[i - 1];\n        }\n        if (isNone(keyframes[i])) {\n            noneKeyframeIndexes.push(i);\n        }\n        // TODO: Clean this conditional, it works for now\n        if (typeof keyframes[i] === \"string\" &&\n            keyframes[i] !== \"none\" &&\n            keyframes[i] !== \"0\") {\n            animatableTemplateValue = keyframes[i];\n        }\n    }\n    if (isTargetAnimatable &&\n        noneKeyframeIndexes.length &&\n        animatableTemplateValue) {\n        for (let i = 0; i < noneKeyframeIndexes.length; i++) {\n            const index = noneKeyframeIndexes[i];\n            keyframes[index] = getAnimatableNone(valueName, animatableTemplateValue);\n        }\n    }\n    return keyframes;\n}\n\nexport { getKeyframes };\n","import { animateValue } from './js/index.mjs';\nimport { noop } from '../../utils/noop.mjs';\n\nfunction createInstantAnimation({ keyframes, delay, onUpdate, onComplete, }) {\n    const setValue = () => {\n        onUpdate && onUpdate(keyframes[keyframes.length - 1]);\n        onComplete && onComplete();\n        /**\n         * TODO: As this API grows it could make sense to always return\n         * animateValue. This will be a bigger project as animateValue\n         * is frame-locked whereas this function resolves instantly.\n         * This is a behavioural change and also has ramifications regarding\n         * assumptions within tests.\n         */\n        return {\n            time: 0,\n            speed: 1,\n            duration: 0,\n            play: (noop),\n            pause: (noop),\n            stop: (noop),\n            then: (resolve) => {\n                resolve();\n                return Promise.resolve();\n            },\n            cancel: (noop),\n            complete: (noop),\n        };\n    };\n    return delay\n        ? animateValue({\n            keyframes: [0, 1],\n            duration: 0,\n            delay,\n            onComplete: setValue,\n        })\n        : setValue();\n}\n\nexport { createInstantAnimation };\n","import { transformProps } from '../../render/html/utils/transform.mjs';\nimport { optimizedAppearDataAttribute } from '../optimized-appear/data-id.mjs';\nimport { animateMotionValue } from './motion-value.mjs';\nimport { isWillChangeMotionValue } from '../../value/use-will-change/is.mjs';\nimport { setTarget } from '../../render/utils/setters.mjs';\nimport { getValueTransition } from '../utils/transitions.mjs';\nimport { frame } from '../../frameloop/frame.mjs';\n\n/**\n * Decide whether we should block this animation. Previously, we achieved this\n * just by checking whether the key was listed in protectedKeys, but this\n * posed problems if an animation was triggered by afterChildren and protectedKeys\n * had been set to true in the meantime.\n */\nfunction shouldBlockAnimation({ protectedKeys, needsAnimating }, key) {\n    const shouldBlock = protectedKeys.hasOwnProperty(key) && needsAnimating[key] !== true;\n    needsAnimating[key] = false;\n    return shouldBlock;\n}\nfunction hasKeyframesChanged(value, target) {\n    const current = value.get();\n    if (Array.isArray(target)) {\n        for (let i = 0; i < target.length; i++) {\n            if (target[i] !== current)\n                return true;\n        }\n    }\n    else {\n        return current !== target;\n    }\n}\nfunction animateTarget(visualElement, definition, { delay = 0, transitionOverride, type } = {}) {\n    let { transition = visualElement.getDefaultTransition(), transitionEnd, ...target } = visualElement.makeTargetAnimatable(definition);\n    const willChange = visualElement.getValue(\"willChange\");\n    if (transitionOverride)\n        transition = transitionOverride;\n    const animations = [];\n    const animationTypeState = type &&\n        visualElement.animationState &&\n        visualElement.animationState.getState()[type];\n    for (const key in target) {\n        const value = visualElement.getValue(key);\n        const valueTarget = target[key];\n        if (!value ||\n            valueTarget === undefined ||\n            (animationTypeState &&\n                shouldBlockAnimation(animationTypeState, key))) {\n            continue;\n        }\n        const valueTransition = {\n            delay,\n            elapsed: 0,\n            ...getValueTransition(transition || {}, key),\n        };\n        /**\n         * If this is the first time a value is being animated, check\n         * to see if we're handling off from an existing animation.\n         */\n        if (window.HandoffAppearAnimations) {\n            const appearId = visualElement.getProps()[optimizedAppearDataAttribute];\n            if (appearId) {\n                const elapsed = window.HandoffAppearAnimations(appearId, key, value, frame);\n                if (elapsed !== null) {\n                    valueTransition.elapsed = elapsed;\n                    valueTransition.isHandoff = true;\n                }\n            }\n        }\n        let canSkip = !valueTransition.isHandoff &&\n            !hasKeyframesChanged(value, valueTarget);\n        if (valueTransition.type === \"spring\" &&\n            (value.getVelocity() || valueTransition.velocity)) {\n            canSkip = false;\n        }\n        /**\n         * Temporarily disable skipping animations if there's an animation in\n         * progress. Better would be to track the current target of a value\n         * and compare that against valueTarget.\n         */\n        if (value.animation) {\n            canSkip = false;\n        }\n        if (canSkip)\n            continue;\n        value.start(animateMotionValue(key, value, valueTarget, visualElement.shouldReduceMotion && transformProps.has(key)\n            ? { type: false }\n            : valueTransition));\n        const animation = value.animation;\n        if (isWillChangeMotionValue(willChange)) {\n            willChange.add(key);\n            animation.then(() => willChange.remove(key));\n        }\n        animations.push(animation);\n    }\n    if (transitionEnd) {\n        Promise.all(animations).then(() => {\n            transitionEnd && setTarget(visualElement, transitionEnd);\n        });\n    }\n    return animations;\n}\n\nexport { animateTarget };\n","import { resolveVariant } from '../../render/utils/resolve-dynamic-variants.mjs';\nimport { animateTarget } from './visual-element-target.mjs';\n\nfunction animateVariant(visualElement, variant, options = {}) {\n    const resolved = resolveVariant(visualElement, variant, options.custom);\n    let { transition = visualElement.getDefaultTransition() || {} } = resolved || {};\n    if (options.transitionOverride) {\n        transition = options.transitionOverride;\n    }\n    /**\n     * If we have a variant, create a callback that runs it as an animation.\n     * Otherwise, we resolve a Promise immediately for a composable no-op.\n     */\n    const getAnimation = resolved\n        ? () => Promise.all(animateTarget(visualElement, resolved, options))\n        : () => Promise.resolve();\n    /**\n     * If we have children, create a callback that runs all their animations.\n     * Otherwise, we resolve a Promise immediately for a composable no-op.\n     */\n    const getChildAnimations = visualElement.variantChildren && visualElement.variantChildren.size\n        ? (forwardDelay = 0) => {\n            const { delayChildren = 0, staggerChildren, staggerDirection, } = transition;\n            return animateChildren(visualElement, variant, delayChildren + forwardDelay, staggerChildren, staggerDirection, options);\n        }\n        : () => Promise.resolve();\n    /**\n     * If the transition explicitly defines a \"when\" option, we need to resolve either\n     * this animation or all children animations before playing the other.\n     */\n    const { when } = transition;\n    if (when) {\n        const [first, last] = when === \"beforeChildren\"\n            ? [getAnimation, getChildAnimations]\n            : [getChildAnimations, getAnimation];\n        return first().then(() => last());\n    }\n    else {\n        return Promise.all([getAnimation(), getChildAnimations(options.delay)]);\n    }\n}\nfunction animateChildren(visualElement, variant, delayChildren = 0, staggerChildren = 0, staggerDirection = 1, options) {\n    const animations = [];\n    const maxStaggerDuration = (visualElement.variantChildren.size - 1) * staggerChildren;\n    const generateStaggerDuration = staggerDirection === 1\n        ? (i = 0) => i * staggerChildren\n        : (i = 0) => maxStaggerDuration - i * staggerChildren;\n    Array.from(visualElement.variantChildren)\n        .sort(sortByTreeOrder)\n        .forEach((child, i) => {\n        child.notify(\"AnimationStart\", variant);\n        animations.push(animateVariant(child, variant, {\n            ...options,\n            delay: delayChildren + generateStaggerDuration(i),\n        }).then(() => child.notify(\"AnimationComplete\", variant)));\n    });\n    return Promise.all(animations);\n}\nfunction sortByTreeOrder(a, b) {\n    return a.sortNodePosition(b);\n}\n\nexport { animateVariant, sortByTreeOrder };\n","import { resolveVariant } from '../../render/utils/resolve-dynamic-variants.mjs';\nimport { animateTarget } from './visual-element-target.mjs';\nimport { animateVariant } from './visual-element-variant.mjs';\n\nfunction animateVisualElement(visualElement, definition, options = {}) {\n    visualElement.notify(\"AnimationStart\", definition);\n    let animation;\n    if (Array.isArray(definition)) {\n        const animations = definition.map((variant) => animateVariant(visualElement, variant, options));\n        animation = Promise.all(animations);\n    }\n    else if (typeof definition === \"string\") {\n        animation = animateVariant(visualElement, definition, options);\n    }\n    else {\n        const resolvedDefinition = typeof definition === \"function\"\n            ? resolveVariant(visualElement, definition, options.custom)\n            : definition;\n        animation = Promise.all(animateTarget(visualElement, resolvedDefinition, options));\n    }\n    return animation.then(() => visualElement.notify(\"AnimationComplete\", definition));\n}\n\nexport { animateVisualElement };\n","import { camelToDash } from '../../render/dom/utils/camel-to-dash.mjs';\n\nconst optimizedAppearDataId = \"framerAppearId\";\nconst optimizedAppearDataAttribute = \"data-\" + camelToDash(optimizedAppearDataId);\n\nexport { optimizedAppearDataAttribute, optimizedAppearDataId };\n","const isKeyframesTarget = (v) => {\n    return Array.isArray(v);\n};\n\nexport { isKeyframesTarget };\n","/**\n * Decide whether a transition is defined on a given Transition.\n * This filters out orchestration options and returns true\n * if any options are left.\n */\nfunction isTransitionDefined({ when, delay: _delay, delayChildren, staggerChildren, staggerDirection, repeat, repeatType, repeatDelay, from, elapsed, ...transition }) {\n    return !!Object.keys(transition).length;\n}\nfunction getValueTransition(transition, key) {\n    return transition[key] || transition[\"default\"] || transition;\n}\n\nexport { getValueTransition, isTransitionDefined };\n","import { mirrorEasing } from './modifiers/mirror.mjs';\nimport { reverseEasing } from './modifiers/reverse.mjs';\n\nconst circIn = (p) => 1 - Math.sin(Math.acos(p));\nconst circOut = reverseEasing(circIn);\nconst circInOut = mirrorEasing(circIn);\n\nexport { circIn, circInOut, circOut };\n","// Accepts an easing function and returns a new one that outputs mirrored values for\n// the second half of the animation. Turns easeIn into easeInOut.\nconst mirrorEasing = (easing) => (p) => p <= 0.5 ? easing(2 * p) / 2 : (2 - easing(2 * (1 - p))) / 2;\n\nexport { mirrorEasing };\n","// Accepts an easing function and returns a new one that outputs reversed values.\n// Turns easeIn into easeOut.\nconst reverseEasing = (easing) => (p) => 1 - easing(1 - p);\n\nexport { reverseEasing };\n","import { createContext } from 'react';\n\n/**\n * @public\n */\nconst MotionConfigContext = createContext({\n    transformPagePoint: (p) => p,\n    isStatic: false,\n    reducedMotion: \"never\",\n});\n\nexport { MotionConfigContext };\n","import { createContext } from 'react';\n\nconst MotionContext = createContext({});\n\nexport { MotionContext };\n","import { createContext } from 'react';\n\nconst LazyContext = createContext({ strict: false });\n\nexport { LazyContext };\n","function isRefObject(ref) {\n    return (typeof ref === \"object\" &&\n        Object.prototype.hasOwnProperty.call(ref, \"current\"));\n}\n\nexport { isRefObject };\n","/**\n * Decides if the supplied variable is variant label\n */\nfunction isVariantLabel(v) {\n    return typeof v === \"string\" || Array.isArray(v);\n}\n\nexport { isVariantLabel };\n","function isAnimationControls(v) {\n    return typeof v === \"object\" && typeof v.start === \"function\";\n}\n\nexport { isAnimationControls };\n","const variantPriorityOrder = [\n    \"animate\",\n    \"whileInView\",\n    \"whileFocus\",\n    \"whileHover\",\n    \"whileTap\",\n    \"whileDrag\",\n    \"exit\",\n];\nconst variantProps = [\"initial\", ...variantPriorityOrder];\n\nexport { variantPriorityOrder, variantProps };\n","import { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { isVariantLabel } from './is-variant-label.mjs';\nimport { variantProps } from './variant-props.mjs';\n\nfunction isControllingVariants(props) {\n    return (isAnimationControls(props.animate) ||\n        variantProps.some((name) => isVariantLabel(props[name])));\n}\nfunction isVariantNode(props) {\n    return Boolean(isControllingVariants(props) || props.variants);\n}\n\nexport { isControllingVariants, isVariantNode };\n","import { useContext, useMemo } from 'react';\nimport { MotionContext } from './index.mjs';\nimport { getCurrentTreeVariants } from './utils.mjs';\n\nfunction useCreateMotionContext(props) {\n    const { initial, animate } = getCurrentTreeVariants(props, useContext(MotionContext));\n    return useMemo(() => ({ initial, animate }), [variantLabelsAsDependency(initial), variantLabelsAsDependency(animate)]);\n}\nfunction variantLabelsAsDependency(prop) {\n    return Array.isArray(prop) ? prop.join(\" \") : prop;\n}\n\nexport { useCreateMotionContext };\n","import { isVariantLabel } from '../../render/utils/is-variant-label.mjs';\nimport { isControllingVariants } from '../../render/utils/is-controlling-variants.mjs';\n\nfunction getCurrentTreeVariants(props, context) {\n    if (isControllingVariants(props)) {\n        const { initial, animate } = props;\n        return {\n            initial: initial === false || isVariantLabel(initial)\n                ? initial\n                : undefined,\n            animate: isVariantLabel(animate) ? animate : undefined,\n        };\n    }\n    return props.inherit !== false ? context : {};\n}\n\nexport { getCurrentTreeVariants };\n","const featureProps = {\n    animation: [\n        \"animate\",\n        \"variants\",\n        \"whileHover\",\n        \"whileTap\",\n        \"exit\",\n        \"whileInView\",\n        \"whileFocus\",\n        \"whileDrag\",\n    ],\n    exit: [\"exit\"],\n    drag: [\"drag\", \"dragControls\"],\n    focus: [\"whileFocus\"],\n    hover: [\"whileHover\", \"onHoverStart\", \"onHoverEnd\"],\n    tap: [\"whileTap\", \"onTap\", \"onTapStart\", \"onTapCancel\"],\n    pan: [\"onPan\", \"onPanStart\", \"onPanSessionStart\", \"onPanEnd\"],\n    inView: [\"whileInView\", \"onViewportEnter\", \"onViewportLeave\"],\n    layout: [\"layout\", \"layoutId\"],\n};\nconst featureDefinitions = {};\nfor (const key in featureProps) {\n    featureDefinitions[key] = {\n        isEnabled: (props) => featureProps[key].some((name) => !!props[name]),\n    };\n}\n\nexport { featureDefinitions };\n","import { createContext } from 'react';\n\n/**\n * Internal, exported only for usage in Framer\n */\nconst SwitchLayoutGroupContext = createContext({});\n\nexport { SwitchLayoutGroupContext };\n","const motionComponentSymbol = Symbol.for(\"motionComponentSymbol\");\n\nexport { motionComponentSymbol };\n","import * as React from 'react';\nimport { forwardRef, useContext } from 'react';\nimport { MotionConfigContext } from '../context/MotionConfigContext.mjs';\nimport { MotionContext } from '../context/MotionContext/index.mjs';\nimport { useVisualElement } from './utils/use-visual-element.mjs';\nimport { useMotionRef } from './utils/use-motion-ref.mjs';\nimport { useCreateMotionContext } from '../context/MotionContext/create.mjs';\nimport { loadFeatures } from './features/load-features.mjs';\nimport { isBrowser } from '../utils/is-browser.mjs';\nimport { LayoutGroupContext } from '../context/LayoutGroupContext.mjs';\nimport { LazyContext } from '../context/LazyContext.mjs';\nimport { SwitchLayoutGroupContext } from '../context/SwitchLayoutGroupContext.mjs';\nimport { motionComponentSymbol } from './utils/symbol.mjs';\n\n/**\n * Create a `motion` component.\n *\n * This function accepts a Component argument, which can be either a string (ie \"div\"\n * for `motion.div`), or an actual React component.\n *\n * Alongside this is a config option which provides a way of rendering the provided\n * component \"offline\", or outside the React render cycle.\n */\nfunction createMotionComponent({ preloadedFeatures, createVisualElement, useRender, useVisualState, Component, }) {\n    preloadedFeatures && loadFeatures(preloadedFeatures);\n    function MotionComponent(props, externalRef) {\n        /**\n         * If we need to measure the element we load this functionality in a\n         * separate class component in order to gain access to getSnapshotBeforeUpdate.\n         */\n        let MeasureLayout;\n        const configAndProps = {\n            ...useContext(MotionConfigContext),\n            ...props,\n            layoutId: useLayoutId(props),\n        };\n        const { isStatic } = configAndProps;\n        const context = useCreateMotionContext(props);\n        const visualState = useVisualState(props, isStatic);\n        if (!isStatic && isBrowser) {\n            /**\n             * Create a VisualElement for this component. A VisualElement provides a common\n             * interface to renderer-specific APIs (ie DOM/Three.js etc) as well as\n             * providing a way of rendering to these APIs outside of the React render loop\n             * for more performant animations and interactions\n             */\n            context.visualElement = useVisualElement(Component, visualState, configAndProps, createVisualElement);\n            /**\n             * Load Motion gesture and animation features. These are rendered as renderless\n             * components so each feature can optionally make use of React lifecycle methods.\n             */\n            const initialLayoutGroupConfig = useContext(SwitchLayoutGroupContext);\n            const isStrict = useContext(LazyContext).strict;\n            if (context.visualElement) {\n                MeasureLayout = context.visualElement.loadFeatures(\n                // Note: Pass the full new combined props to correctly re-render dynamic feature components.\n                configAndProps, isStrict, preloadedFeatures, initialLayoutGroupConfig);\n            }\n        }\n        /**\n         * The mount order and hierarchy is specific to ensure our element ref\n         * is hydrated by the time features fire their effects.\n         */\n        return (React.createElement(MotionContext.Provider, { value: context },\n            MeasureLayout && context.visualElement ? (React.createElement(MeasureLayout, { visualElement: context.visualElement, ...configAndProps })) : null,\n            useRender(Component, props, useMotionRef(visualState, context.visualElement, externalRef), visualState, isStatic, context.visualElement)));\n    }\n    const ForwardRefComponent = forwardRef(MotionComponent);\n    ForwardRefComponent[motionComponentSymbol] = Component;\n    return ForwardRefComponent;\n}\nfunction useLayoutId({ layoutId }) {\n    const layoutGroupId = useContext(LayoutGroupContext).id;\n    return layoutGroupId && layoutId !== undefined\n        ? layoutGroupId + \"-\" + layoutId\n        : layoutId;\n}\n\nexport { createMotionComponent };\n","import { featureDefinitions } from './definitions.mjs';\n\nfunction loadFeatures(features) {\n    for (const key in features) {\n        featureDefinitions[key] = {\n            ...featureDefinitions[key],\n            ...features[key],\n        };\n    }\n}\n\nexport { loadFeatures };\n","import { useContext, useRef, useInsertionEffect, useEffect } from 'react';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\nimport { MotionContext } from '../../context/MotionContext/index.mjs';\nimport { useIsomorphicLayoutEffect } from '../../utils/use-isomorphic-effect.mjs';\nimport { LazyContext } from '../../context/LazyContext.mjs';\nimport { MotionConfigContext } from '../../context/MotionConfigContext.mjs';\nimport { optimizedAppearDataAttribute } from '../../animation/optimized-appear/data-id.mjs';\n\nfunction useVisualElement(Component, visualState, props, createVisualElement) {\n    const { visualElement: parent } = useContext(MotionContext);\n    const lazyContext = useContext(LazyContext);\n    const presenceContext = useContext(PresenceContext);\n    const reducedMotionConfig = useContext(MotionConfigContext).reducedMotion;\n    const visualElementRef = useRef();\n    /**\n     * If we haven't preloaded a renderer, check to see if we have one lazy-loaded\n     */\n    createVisualElement = createVisualElement || lazyContext.renderer;\n    if (!visualElementRef.current && createVisualElement) {\n        visualElementRef.current = createVisualElement(Component, {\n            visualState,\n            parent,\n            props,\n            presenceContext,\n            blockInitialAnimation: presenceContext\n                ? presenceContext.initial === false\n                : false,\n            reducedMotionConfig,\n        });\n    }\n    const visualElement = visualElementRef.current;\n    useInsertionEffect(() => {\n        visualElement && visualElement.update(props, presenceContext);\n    });\n    /**\n     * Cache this value as we want to know whether HandoffAppearAnimations\n     * was present on initial render - it will be deleted after this.\n     */\n    const wantsHandoff = useRef(Boolean(props[optimizedAppearDataAttribute] && !window.HandoffComplete));\n    useIsomorphicLayoutEffect(() => {\n        if (!visualElement)\n            return;\n        visualElement.render();\n        /**\n         * Ideally this function would always run in a useEffect.\n         *\n         * However, if we have optimised appear animations to handoff from,\n         * it needs to happen synchronously to ensure there's no flash of\n         * incorrect styles in the event of a hydration error.\n         *\n         * So if we detect a situtation where optimised appear animations\n         * are running, we use useLayoutEffect to trigger animations.\n         */\n        if (wantsHandoff.current && visualElement.animationState) {\n            visualElement.animationState.animateChanges();\n        }\n    });\n    useEffect(() => {\n        if (!visualElement)\n            return;\n        visualElement.updateFeatures();\n        if (!wantsHandoff.current && visualElement.animationState) {\n            visualElement.animationState.animateChanges();\n        }\n        if (wantsHandoff.current) {\n            wantsHandoff.current = false;\n            // This ensures all future calls to animateChanges() will run in useEffect\n            window.HandoffComplete = true;\n        }\n    });\n    return visualElement;\n}\n\nexport { useVisualElement };\n","import { useCallback } from 'react';\nimport { isRefObject } from '../../utils/is-ref-object.mjs';\n\n/**\n * Creates a ref function that, when called, hydrates the provided\n * external ref and VisualElement.\n */\nfunction useMotionRef(visualState, visualElement, externalRef) {\n    return useCallback((instance) => {\n        instance && visualState.mount && visualState.mount(instance);\n        if (visualElement) {\n            instance\n                ? visualElement.mount(instance)\n                : visualElement.unmount();\n        }\n        if (externalRef) {\n            if (typeof externalRef === \"function\") {\n                externalRef(instance);\n            }\n            else if (isRefObject(externalRef)) {\n                externalRef.current = instance;\n            }\n        }\n    }, \n    /**\n     * Only pass a new ref callback to React if we've received a visual element\n     * factory. Otherwise we'll be mounting/remounting every time externalRef\n     * or other dependencies change.\n     */\n    [visualElement]);\n}\n\nexport { useMotionRef };\n","import { createMotionComponent } from '../../motion/index.mjs';\n\n/**\n * Convert any React component into a `motion` component. The provided component\n * **must** use `React.forwardRef` to the underlying DOM component you want to animate.\n *\n * ```jsx\n * const Component = React.forwardRef((props, ref) => {\n *   return <div ref={ref} />\n * })\n *\n * const MotionComponent = motion(Component)\n * ```\n *\n * @public\n */\nfunction createMotionProxy(createConfig) {\n    function custom(Component, customMotionComponentConfig = {}) {\n        return createMotionComponent(createConfig(Component, customMotionComponentConfig));\n    }\n    if (typeof Proxy === \"undefined\") {\n        return custom;\n    }\n    /**\n     * A cache of generated `motion` components, e.g `motion.div`, `motion.input` etc.\n     * Rather than generating them anew every render.\n     */\n    const componentCache = new Map();\n    return new Proxy(custom, {\n        /**\n         * Called when `motion` is referenced with a prop: `motion.div`, `motion.input` etc.\n         * The prop name is passed through as `key` and we can use that to generate a `motion`\n         * DOM component with that name.\n         */\n        get: (_target, key) => {\n            /**\n             * If this element doesn't exist in the component cache, create it and cache.\n             */\n            if (!componentCache.has(key)) {\n                componentCache.set(key, custom(key));\n            }\n            return componentCache.get(key);\n        },\n    });\n}\n\nexport { createMotionProxy };\n","/**\n * We keep these listed seperately as we use the lowercase tag names as part\n * of the runtime bundle to detect SVG components\n */\nconst lowercaseSVGElements = [\n    \"animate\",\n    \"circle\",\n    \"defs\",\n    \"desc\",\n    \"ellipse\",\n    \"g\",\n    \"image\",\n    \"line\",\n    \"filter\",\n    \"marker\",\n    \"mask\",\n    \"metadata\",\n    \"path\",\n    \"pattern\",\n    \"polygon\",\n    \"polyline\",\n    \"rect\",\n    \"stop\",\n    \"switch\",\n    \"symbol\",\n    \"svg\",\n    \"text\",\n    \"tspan\",\n    \"use\",\n    \"view\",\n];\n\nexport { lowercaseSVGElements };\n","import { lowercaseSVGElements } from '../../svg/lowercase-elements.mjs';\n\nfunction isSVGComponent(Component) {\n    if (\n    /**\n     * If it's not a string, it's a custom React component. Currently we only support\n     * HTML custom React components.\n     */\n    typeof Component !== \"string\" ||\n        /**\n         * If it contains a dash, the element is a custom HTML webcomponent.\n         */\n        Component.includes(\"-\")) {\n        return false;\n    }\n    else if (\n    /**\n     * If it's in our list of lowercase SVG tags, it's an SVG component\n     */\n    lowercaseSVGElements.indexOf(Component) > -1 ||\n        /**\n         * If it contains a capital letter, it's an SVG component\n         */\n        /[A-Z]/.test(Component)) {\n        return true;\n    }\n    return false;\n}\n\nexport { isSVGComponent };\n","const scaleCorrectors = {};\nfunction addScaleCorrector(correctors) {\n    Object.assign(scaleCorrectors, correctors);\n}\n\nexport { addScaleCorrector, scaleCorrectors };\n","import { scaleCorrectors } from '../../projection/styles/scale-correction.mjs';\nimport { transformProps } from '../../render/html/utils/transform.mjs';\n\nfunction isForcedMotionValue(key, { layout, layoutId }) {\n    return (transformProps.has(key) ||\n        key.startsWith(\"origin\") ||\n        ((layout || layoutId !== undefined) &&\n            (!!scaleCorrectors[key] || key === \"opacity\")));\n}\n\nexport { isForcedMotionValue };\n","import { transformPropOrder } from './transform.mjs';\n\nconst translateAlias = {\n    x: \"translateX\",\n    y: \"translateY\",\n    z: \"translateZ\",\n    transformPerspective: \"perspective\",\n};\nconst numTransforms = transformPropOrder.length;\n/**\n * Build a CSS transform style from individual x/y/scale etc properties.\n *\n * This outputs with a default order of transforms/scales/rotations, this can be customised by\n * providing a transformTemplate function.\n */\nfunction buildTransform(transform, { enableHardwareAcceleration = true, allowTransformNone = true, }, transformIsDefault, transformTemplate) {\n    // The transform string we're going to build into.\n    let transformString = \"\";\n    /**\n     * Loop over all possible transforms in order, adding the ones that\n     * are present to the transform string.\n     */\n    for (let i = 0; i < numTransforms; i++) {\n        const key = transformPropOrder[i];\n        if (transform[key] !== undefined) {\n            const transformName = translateAlias[key] || key;\n            transformString += `${transformName}(${transform[key]}) `;\n        }\n    }\n    if (enableHardwareAcceleration && !transform.z) {\n        transformString += \"translateZ(0)\";\n    }\n    transformString = transformString.trim();\n    // If we have a custom `transform` template, pass our transform values and\n    // generated transformString to that before returning\n    if (transformTemplate) {\n        transformString = transformTemplate(transform, transformIsDefault ? \"\" : transformString);\n    }\n    else if (allowTransformNone && transformIsDefault) {\n        transformString = \"none\";\n    }\n    return transformString;\n}\n\nexport { buildTransform };\n","/**\n * Provided a value and a ValueType, returns the value as that value type.\n */\nconst getValueAsType = (value, type) => {\n    return type && typeof value === \"number\"\n        ? type.transform(value)\n        : value;\n};\n\nexport { getValueAsType };\n","import { buildTransform } from './build-transform.mjs';\nimport { isCSSVariableName } from '../../dom/utils/is-css-variable.mjs';\nimport { transformProps } from './transform.mjs';\nimport { getValueAsType } from '../../dom/value-types/get-as-type.mjs';\nimport { numberValueTypes } from '../../dom/value-types/number.mjs';\n\nfunction buildHTMLStyles(state, latestValues, options, transformTemplate) {\n    const { style, vars, transform, transformOrigin } = state;\n    // Track whether we encounter any transform or transformOrigin values.\n    let hasTransform = false;\n    let hasTransformOrigin = false;\n    // Does the calculated transform essentially equal \"none\"?\n    let transformIsNone = true;\n    /**\n     * Loop over all our latest animated values and decide whether to handle them\n     * as a style or CSS variable.\n     *\n     * Transforms and transform origins are kept seperately for further processing.\n     */\n    for (const key in latestValues) {\n        const value = latestValues[key];\n        /**\n         * If this is a CSS variable we don't do any further processing.\n         */\n        if (isCSSVariableName(key)) {\n            vars[key] = value;\n            continue;\n        }\n        // Convert the value to its default value type, ie 0 -> \"0px\"\n        const valueType = numberValueTypes[key];\n        const valueAsType = getValueAsType(value, valueType);\n        if (transformProps.has(key)) {\n            // If this is a transform, flag to enable further transform processing\n            hasTransform = true;\n            transform[key] = valueAsType;\n            // If we already know we have a non-default transform, early return\n            if (!transformIsNone)\n                continue;\n            // Otherwise check to see if this is a default transform\n            if (value !== (valueType.default || 0))\n                transformIsNone = false;\n        }\n        else if (key.startsWith(\"origin\")) {\n            // If this is a transform origin, flag and enable further transform-origin processing\n            hasTransformOrigin = true;\n            transformOrigin[key] = valueAsType;\n        }\n        else {\n            style[key] = valueAsType;\n        }\n    }\n    if (!latestValues.transform) {\n        if (hasTransform || transformTemplate) {\n            style.transform = buildTransform(state.transform, options, transformIsNone, transformTemplate);\n        }\n        else if (style.transform) {\n            /**\n             * If we have previously created a transform but currently don't have any,\n             * reset transform style to none.\n             */\n            style.transform = \"none\";\n        }\n    }\n    /**\n     * Build a transformOrigin style. Uses the same defaults as the browser for\n     * undefined origins.\n     */\n    if (hasTransformOrigin) {\n        const { originX = \"50%\", originY = \"50%\", originZ = 0, } = transformOrigin;\n        style.transformOrigin = `${originX} ${originY} ${originZ}`;\n    }\n}\n\nexport { buildHTMLStyles };\n","const createHtmlRenderState = () => ({\n    style: {},\n    transform: {},\n    transformOrigin: {},\n    vars: {},\n});\n\nexport { createHtmlRenderState };\n","import { useMemo } from 'react';\nimport { isForcedMotionValue } from '../../motion/utils/is-forced-motion-value.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\nimport { buildHTMLStyles } from './utils/build-styles.mjs';\nimport { createHtmlRenderState } from './utils/create-render-state.mjs';\n\nfunction copyRawValuesOnly(target, source, props) {\n    for (const key in source) {\n        if (!isMotionValue(source[key]) && !isForcedMotionValue(key, props)) {\n            target[key] = source[key];\n        }\n    }\n}\nfunction useInitialMotionValues({ transformTemplate }, visualState, isStatic) {\n    return useMemo(() => {\n        const state = createHtmlRenderState();\n        buildHTMLStyles(state, visualState, { enableHardwareAcceleration: !isStatic }, transformTemplate);\n        return Object.assign({}, state.vars, state.style);\n    }, [visualState]);\n}\nfunction useStyle(props, visualState, isStatic) {\n    const styleProp = props.style || {};\n    const style = {};\n    /**\n     * Copy non-Motion Values straight into style\n     */\n    copyRawValuesOnly(style, styleProp, props);\n    Object.assign(style, useInitialMotionValues(props, visualState, isStatic));\n    return props.transformValues ? props.transformValues(style) : style;\n}\nfunction useHTMLProps(props, visualState, isStatic) {\n    // The `any` isn't ideal but it is the type of createElement props argument\n    const htmlProps = {};\n    const style = useStyle(props, visualState, isStatic);\n    if (props.drag && props.dragListener !== false) {\n        // Disable the ghost element when a user drags\n        htmlProps.draggable = false;\n        // Disable text selection\n        style.userSelect =\n            style.WebkitUserSelect =\n                style.WebkitTouchCallout =\n                    \"none\";\n        // Disable scrolling on the draggable direction\n        style.touchAction =\n            props.drag === true\n                ? \"none\"\n                : `pan-${props.drag === \"x\" ? \"y\" : \"x\"}`;\n    }\n    if (props.tabIndex === undefined &&\n        (props.onTap || props.onTapStart || props.whileTap)) {\n        htmlProps.tabIndex = 0;\n    }\n    htmlProps.style = style;\n    return htmlProps;\n}\n\nexport { copyRawValuesOnly, useHTMLProps };\n","/**\n * A list of all valid MotionProps.\n *\n * @privateRemarks\n * This doesn't throw if a `MotionProp` name is missing - it should.\n */\nconst validMotionProps = new Set([\n    \"animate\",\n    \"exit\",\n    \"variants\",\n    \"initial\",\n    \"style\",\n    \"values\",\n    \"variants\",\n    \"transition\",\n    \"transformTemplate\",\n    \"transformValues\",\n    \"custom\",\n    \"inherit\",\n    \"onLayoutAnimationStart\",\n    \"onLayoutAnimationComplete\",\n    \"onLayoutMeasure\",\n    \"onBeforeLayoutMeasure\",\n    \"onAnimationStart\",\n    \"onAnimationComplete\",\n    \"onUpdate\",\n    \"onDragStart\",\n    \"onDrag\",\n    \"onDragEnd\",\n    \"onMeasureDragConstraints\",\n    \"onDirectionLock\",\n    \"onDragTransitionEnd\",\n    \"_dragX\",\n    \"_dragY\",\n    \"onHoverStart\",\n    \"onHoverEnd\",\n    \"onViewportEnter\",\n    \"onViewportLeave\",\n    \"ignoreStrict\",\n    \"viewport\",\n]);\n/**\n * Check whether a prop name is a valid `MotionProp` key.\n *\n * @param key - Name of the property to check\n * @returns `true` is key is a valid `MotionProp`.\n *\n * @public\n */\nfunction isValidMotionProp(key) {\n    return (key.startsWith(\"while\") ||\n        (key.startsWith(\"drag\") && key !== \"draggable\") ||\n        key.startsWith(\"layout\") ||\n        key.startsWith(\"onTap\") ||\n        key.startsWith(\"onPan\") ||\n        validMotionProps.has(key));\n}\n\nexport { isValidMotionProp };\n","import { isValidMotionProp } from '../../../motion/utils/valid-prop.mjs';\n\nlet shouldForward = (key) => !isValidMotionProp(key);\nfunction loadExternalIsValidProp(isValidProp) {\n    if (!isValidProp)\n        return;\n    // Explicitly filter our events\n    shouldForward = (key) => key.startsWith(\"on\") ? !isValidMotionProp(key) : isValidProp(key);\n}\n/**\n * Emotion and Styled Components both allow users to pass through arbitrary props to their components\n * to dynamically generate CSS. They both use the `@emotion/is-prop-valid` package to determine which\n * of these should be passed to the underlying DOM node.\n *\n * However, when styling a Motion component `styled(motion.div)`, both packages pass through *all* props\n * as it's seen as an arbitrary component rather than a DOM node. Motion only allows arbitrary props\n * passed through the `custom` prop so it doesn't *need* the payload or computational overhead of\n * `@emotion/is-prop-valid`, however to fix this problem we need to use it.\n *\n * By making it an optionalDependency we can offer this functionality only in the situations where it's\n * actually required.\n */\ntry {\n    /**\n     * We attempt to import this package but require won't be defined in esm environments, in that case\n     * isPropValid will have to be provided via `MotionContext`. In a 6.0.0 this should probably be removed\n     * in favour of explicit injection.\n     */\n    loadExternalIsValidProp(require(\"@emotion/is-prop-valid\").default);\n}\ncatch (_a) {\n    // We don't need to actually do anything here - the fallback is the existing `isPropValid`.\n}\nfunction filterProps(props, isDom, forwardMotionProps) {\n    const filteredProps = {};\n    for (const key in props) {\n        /**\n         * values is considered a valid prop by Emotion, so if it's present\n         * this will be rendered out to the DOM unless explicitly filtered.\n         *\n         * We check the type as it could be used with the `feColorMatrix`\n         * element, which we support.\n         */\n        if (key === \"values\" && typeof props.values === \"object\")\n            continue;\n        if (shouldForward(key) ||\n            (forwardMotionProps === true && isValidMotionProp(key)) ||\n            (!isDom && !isValidMotionProp(key)) ||\n            // If trying to use native HTML drag events, forward drag listeners\n            (props[\"draggable\"] && key.startsWith(\"onDrag\"))) {\n            filteredProps[key] = props[key];\n        }\n    }\n    return filteredProps;\n}\n\nexport { filterProps, loadExternalIsValidProp };\n","import { px } from '../../../value/types/numbers/units.mjs';\n\nfunction calcOrigin(origin, offset, size) {\n    return typeof origin === \"string\"\n        ? origin\n        : px.transform(offset + size * origin);\n}\n/**\n * The SVG transform origin defaults are different to CSS and is less intuitive,\n * so we use the measured dimensions of the SVG to reconcile these.\n */\nfunction calcSVGTransformOrigin(dimensions, originX, originY) {\n    const pxOriginX = calcOrigin(originX, dimensions.x, dimensions.width);\n    const pxOriginY = calcOrigin(originY, dimensions.y, dimensions.height);\n    return `${pxOriginX} ${pxOriginY}`;\n}\n\nexport { calcSVGTransformOrigin };\n","import { px } from '../../../value/types/numbers/units.mjs';\n\nconst dashKeys = {\n    offset: \"stroke-dashoffset\",\n    array: \"stroke-dasharray\",\n};\nconst camelKeys = {\n    offset: \"strokeDashoffset\",\n    array: \"strokeDasharray\",\n};\n/**\n * Build SVG path properties. Uses the path's measured length to convert\n * our custom pathLength, pathSpacing and pathOffset into stroke-dashoffset\n * and stroke-dasharray attributes.\n *\n * This function is mutative to reduce per-frame GC.\n */\nfunction buildSVGPath(attrs, length, spacing = 1, offset = 0, useDashCase = true) {\n    // Normalise path length by setting SVG attribute pathLength to 1\n    attrs.pathLength = 1;\n    // We use dash case when setting attributes directly to the DOM node and camel case\n    // when defining props on a React component.\n    const keys = useDashCase ? dashKeys : camelKeys;\n    // Build the dash offset\n    attrs[keys.offset] = px.transform(-offset);\n    // Build the dash array\n    const pathLength = px.transform(length);\n    const pathSpacing = px.transform(spacing);\n    attrs[keys.array] = `${pathLength} ${pathSpacing}`;\n}\n\nexport { buildSVGPath };\n","import { buildHTMLStyles } from '../../html/utils/build-styles.mjs';\nimport { calcSVGTransformOrigin } from './transform-origin.mjs';\nimport { buildSVGPath } from './path.mjs';\n\n/**\n * Build SVG visual attrbutes, like cx and style.transform\n */\nfunction buildSVGAttrs(state, { attrX, attrY, attrScale, originX, originY, pathLength, pathSpacing = 1, pathOffset = 0, \n// This is object creation, which we try to avoid per-frame.\n...latest }, options, isSVGTag, transformTemplate) {\n    buildHTMLStyles(state, latest, options, transformTemplate);\n    /**\n     * For svg tags we just want to make sure viewBox is animatable and treat all the styles\n     * as normal HTML tags.\n     */\n    if (isSVGTag) {\n        if (state.style.viewBox) {\n            state.attrs.viewBox = state.style.viewBox;\n        }\n        return;\n    }\n    state.attrs = state.style;\n    state.style = {};\n    const { attrs, style, dimensions } = state;\n    /**\n     * However, we apply transforms as CSS transforms. So if we detect a transform we take it from attrs\n     * and copy it into style.\n     */\n    if (attrs.transform) {\n        if (dimensions)\n            style.transform = attrs.transform;\n        delete attrs.transform;\n    }\n    // Parse transformOrigin\n    if (dimensions &&\n        (originX !== undefined || originY !== undefined || style.transform)) {\n        style.transformOrigin = calcSVGTransformOrigin(dimensions, originX !== undefined ? originX : 0.5, originY !== undefined ? originY : 0.5);\n    }\n    // Render attrX/attrY/attrScale as attributes\n    if (attrX !== undefined)\n        attrs.x = attrX;\n    if (attrY !== undefined)\n        attrs.y = attrY;\n    if (attrScale !== undefined)\n        attrs.scale = attrScale;\n    // Build SVG path if one has been defined\n    if (pathLength !== undefined) {\n        buildSVGPath(attrs, pathLength, pathSpacing, pathOffset, false);\n    }\n}\n\nexport { buildSVGAttrs };\n","import { createHtmlRenderState } from '../../html/utils/create-render-state.mjs';\n\nconst createSvgRenderState = () => ({\n    ...createHtmlRenderState(),\n    attrs: {},\n});\n\nexport { createSvgRenderState };\n","const isSVGTag = (tag) => typeof tag === \"string\" && tag.toLowerCase() === \"svg\";\n\nexport { isSVGTag };\n","import { useMemo } from 'react';\nimport { copyRawValuesOnly } from '../html/use-props.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { createSvgRenderState } from './utils/create-render-state.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\n\nfunction useSVGProps(props, visualState, _isStatic, Component) {\n    const visualProps = useMemo(() => {\n        const state = createSvgRenderState();\n        buildSVGAttrs(state, visualState, { enableHardwareAcceleration: false }, isSVGTag(Component), props.transformTemplate);\n        return {\n            ...state.attrs,\n            style: { ...state.style },\n        };\n    }, [visualState]);\n    if (props.style) {\n        const rawStyles = {};\n        copyRawValuesOnly(rawStyles, props.style, props);\n        visualProps.style = { ...rawStyles, ...visualProps.style };\n    }\n    return visualProps;\n}\n\nexport { useSVGProps };\n","import { useMemo, createElement } from 'react';\nimport { useHTMLProps } from '../html/use-props.mjs';\nimport { filterProps } from './utils/filter-props.mjs';\nimport { isSVGComponent } from './utils/is-svg-component.mjs';\nimport { useSVGProps } from '../svg/use-props.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction createUseRender(forwardMotionProps = false) {\n    const useRender = (Component, props, ref, { latestValues }, isStatic) => {\n        const useVisualProps = isSVGComponent(Component)\n            ? useSVGProps\n            : useHTMLProps;\n        const visualProps = useVisualProps(props, latestValues, isStatic, Component);\n        const filteredProps = filterProps(props, typeof Component === \"string\", forwardMotionProps);\n        const elementProps = {\n            ...filteredProps,\n            ...visualProps,\n            ref,\n        };\n        /**\n         * If component has been handed a motion value as its child,\n         * memoise its initial value and render that. Subsequent updates\n         * will be handled by the onChange handler\n         */\n        const { children } = props;\n        const renderedChildren = useMemo(() => (isMotionValue(children) ? children.get() : children), [children]);\n        return createElement(Component, {\n            ...elementProps,\n            children: renderedChildren,\n        });\n    };\n    return useRender;\n}\n\nexport { createUseRender };\n","function renderHTML(element, { style, vars }, styleProp, projection) {\n    Object.assign(element.style, style, projection && projection.getProjectionStyles(styleProp));\n    // Loop over any CSS variables and assign those.\n    for (const key in vars) {\n        element.style.setProperty(key, vars[key]);\n    }\n}\n\nexport { renderHTML };\n","/**\n * A set of attribute names that are always read/written as camel case.\n */\nconst camelCaseAttributes = new Set([\n    \"baseFrequency\",\n    \"diffuseConstant\",\n    \"kernelMatrix\",\n    \"kernelUnitLength\",\n    \"keySplines\",\n    \"keyTimes\",\n    \"limitingConeAngle\",\n    \"markerHeight\",\n    \"markerWidth\",\n    \"numOctaves\",\n    \"targetX\",\n    \"targetY\",\n    \"surfaceScale\",\n    \"specularConstant\",\n    \"specularExponent\",\n    \"stdDeviation\",\n    \"tableValues\",\n    \"viewBox\",\n    \"gradientTransform\",\n    \"pathLength\",\n    \"startOffset\",\n    \"textLength\",\n    \"lengthAdjust\",\n]);\n\nexport { camelCaseAttributes };\n","import { camelToDash } from '../../dom/utils/camel-to-dash.mjs';\nimport { renderHTML } from '../../html/utils/render.mjs';\nimport { camelCaseAttributes } from './camel-case-attrs.mjs';\n\nfunction renderSVG(element, renderState, _styleProp, projection) {\n    renderHTML(element, renderState, undefined, projection);\n    for (const key in renderState.attrs) {\n        element.setAttribute(!camelCaseAttributes.has(key) ? camelToDash(key) : key, renderState.attrs[key]);\n    }\n}\n\nexport { renderSVG };\n","import { isForcedMotionValue } from '../../../motion/utils/is-forced-motion-value.mjs';\nimport { isMotionValue } from '../../../value/utils/is-motion-value.mjs';\n\nfunction scrapeMotionValuesFromProps(props, prevProps) {\n    const { style } = props;\n    const newValues = {};\n    for (const key in style) {\n        if (isMotionValue(style[key]) ||\n            (prevProps.style && isMotionValue(prevProps.style[key])) ||\n            isForcedMotionValue(key, props)) {\n            newValues[key] = style[key];\n        }\n    }\n    return newValues;\n}\n\nexport { scrapeMotionValuesFromProps };\n","import { isMotionValue } from '../../../value/utils/is-motion-value.mjs';\nimport { scrapeMotionValuesFromProps as scrapeMotionValuesFromProps$1 } from '../../html/utils/scrape-motion-values.mjs';\nimport { transformPropOrder } from '../../html/utils/transform.mjs';\n\nfunction scrapeMotionValuesFromProps(props, prevProps) {\n    const newValues = scrapeMotionValuesFromProps$1(props, prevProps);\n    for (const key in props) {\n        if (isMotionValue(props[key]) || isMotionValue(prevProps[key])) {\n            const targetKey = transformPropOrder.indexOf(key) !== -1\n                ? \"attr\" + key.charAt(0).toUpperCase() + key.substring(1)\n                : key;\n            newValues[targetKey] = props[key];\n        }\n    }\n    return newValues;\n}\n\nexport { scrapeMotionValuesFromProps };\n","import { isCustomValue } from '../../utils/resolve-value.mjs';\nimport { isMotionValue } from './is-motion-value.mjs';\n\n/**\n * If the provided value is a MotionValue, this returns the actual value, otherwise just the value itself\n *\n * TODO: Remove and move to library\n */\nfunction resolveMotionValue(value) {\n    const unwrappedValue = isMotionValue(value) ? value.get() : value;\n    return isCustomValue(unwrappedValue)\n        ? unwrappedValue.toValue()\n        : unwrappedValue;\n}\n\nexport { resolveMotionValue };\n","import { useContext } from 'react';\nimport { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\nimport { resolveVariantFromProps } from '../../render/utils/resolve-variants.mjs';\nimport { useConstant } from '../../utils/use-constant.mjs';\nimport { resolveMotionValue } from '../../value/utils/resolve-motion-value.mjs';\nimport { MotionContext } from '../../context/MotionContext/index.mjs';\nimport { isControllingVariants, isVariantNode } from '../../render/utils/is-controlling-variants.mjs';\n\nfunction makeState({ scrapeMotionValuesFromProps, createRenderState, onMount, }, props, context, presenceContext) {\n    const state = {\n        latestValues: makeLatestValues(props, context, presenceContext, scrapeMotionValuesFromProps),\n        renderState: createRenderState(),\n    };\n    if (onMount) {\n        state.mount = (instance) => onMount(props, instance, state);\n    }\n    return state;\n}\nconst makeUseVisualState = (config) => (props, isStatic) => {\n    const context = useContext(MotionContext);\n    const presenceContext = useContext(PresenceContext);\n    const make = () => makeState(config, props, context, presenceContext);\n    return isStatic ? make() : useConstant(make);\n};\nfunction makeLatestValues(props, context, presenceContext, scrapeMotionValues) {\n    const values = {};\n    const motionValues = scrapeMotionValues(props, {});\n    for (const key in motionValues) {\n        values[key] = resolveMotionValue(motionValues[key]);\n    }\n    let { initial, animate } = props;\n    const isControllingVariants$1 = isControllingVariants(props);\n    const isVariantNode$1 = isVariantNode(props);\n    if (context &&\n        isVariantNode$1 &&\n        !isControllingVariants$1 &&\n        props.inherit !== false) {\n        if (initial === undefined)\n            initial = context.initial;\n        if (animate === undefined)\n            animate = context.animate;\n    }\n    let isInitialAnimationBlocked = presenceContext\n        ? presenceContext.initial === false\n        : false;\n    isInitialAnimationBlocked = isInitialAnimationBlocked || initial === false;\n    const variantToSet = isInitialAnimationBlocked ? animate : initial;\n    if (variantToSet &&\n        typeof variantToSet !== \"boolean\" &&\n        !isAnimationControls(variantToSet)) {\n        const list = Array.isArray(variantToSet) ? variantToSet : [variantToSet];\n        list.forEach((definition) => {\n            const resolved = resolveVariantFromProps(props, definition);\n            if (!resolved)\n                return;\n            const { transitionEnd, transition, ...target } = resolved;\n            for (const key in target) {\n                let valueTarget = target[key];\n                if (Array.isArray(valueTarget)) {\n                    /**\n                     * Take final keyframe if the initial animation is blocked because\n                     * we want to initialise at the end of that blocked animation.\n                     */\n                    const index = isInitialAnimationBlocked\n                        ? valueTarget.length - 1\n                        : 0;\n                    valueTarget = valueTarget[index];\n                }\n                if (valueTarget !== null) {\n                    values[key] = valueTarget;\n                }\n            }\n            for (const key in transitionEnd)\n                values[key] = transitionEnd[key];\n        });\n    }\n    return values;\n}\n\nexport { makeUseVisualState };\n","import { renderSVG } from './utils/render.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { makeUseVisualState } from '../../motion/utils/use-visual-state.mjs';\nimport { createSvgRenderState } from './utils/create-render-state.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\nimport { frame } from '../../frameloop/frame.mjs';\n\nconst svgMotionConfig = {\n    useVisualState: makeUseVisualState({\n        scrapeMotionValuesFromProps: scrapeMotionValuesFromProps,\n        createRenderState: createSvgRenderState,\n        onMount: (props, instance, { renderState, latestValues }) => {\n            frame.read(() => {\n                try {\n                    renderState.dimensions =\n                        typeof instance.getBBox ===\n                            \"function\"\n                            ? instance.getBBox()\n                            : instance.getBoundingClientRect();\n                }\n                catch (e) {\n                    // Most likely trying to measure an unrendered element under Firefox\n                    renderState.dimensions = {\n                        x: 0,\n                        y: 0,\n                        width: 0,\n                        height: 0,\n                    };\n                }\n            });\n            frame.render(() => {\n                buildSVGAttrs(renderState, latestValues, { enableHardwareAcceleration: false }, isSVGTag(instance.tagName), props.transformTemplate);\n                renderSVG(instance, renderState);\n            });\n        },\n    }),\n};\n\nexport { svgMotionConfig };\n","import { makeUseVisualState } from '../../motion/utils/use-visual-state.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { createHtmlRenderState } from './utils/create-render-state.mjs';\n\nconst htmlMotionConfig = {\n    useVisualState: makeUseVisualState({\n        scrapeMotionValuesFromProps,\n        createRenderState: createHtmlRenderState,\n    }),\n};\n\nexport { htmlMotionConfig };\n","function addDomEvent(target, eventName, handler, options = { passive: true }) {\n    target.addEventListener(eventName, handler, options);\n    return () => target.removeEventListener(eventName, handler);\n}\n\nexport { addDomEvent };\n","const isPrimaryPointer = (event) => {\n    if (event.pointerType === \"mouse\") {\n        return typeof event.button !== \"number\" || event.button <= 0;\n    }\n    else {\n        /**\n         * isPrimary is true for all mice buttons, whereas every touch point\n         * is regarded as its own input. So subsequent concurrent touch points\n         * will be false.\n         *\n         * Specifically match against false here as incomplete versions of\n         * PointerEvents in very old browser might have it set as undefined.\n         */\n        return event.isPrimary !== false;\n    }\n};\n\nexport { isPrimaryPointer };\n","import { isPrimaryPointer } from './utils/is-primary-pointer.mjs';\n\nfunction extractEventInfo(event, pointType = \"page\") {\n    return {\n        point: {\n            x: event[pointType + \"X\"],\n            y: event[pointType + \"Y\"],\n        },\n    };\n}\nconst addPointerInfo = (handler) => {\n    return (event) => isPrimaryPointer(event) && handler(event, extractEventInfo(event));\n};\n\nexport { addPointerInfo, extractEventInfo };\n","import { addDomEvent } from './add-dom-event.mjs';\nimport { addPointerInfo } from './event-info.mjs';\n\nfunction addPointerEvent(target, eventName, handler, options) {\n    return addDomEvent(target, eventName, addPointerInfo(handler), options);\n}\n\nexport { addPointerEvent };\n","function createLock(name) {\n    let lock = null;\n    return () => {\n        const openLock = () => {\n            lock = null;\n        };\n        if (lock === null) {\n            lock = name;\n            return openLock;\n        }\n        return false;\n    };\n}\nconst globalHorizontalLock = createLock(\"dragHorizontal\");\nconst globalVerticalLock = createLock(\"dragVertical\");\nfunction getGlobalLock(drag) {\n    let lock = false;\n    if (drag === \"y\") {\n        lock = globalVerticalLock();\n    }\n    else if (drag === \"x\") {\n        lock = globalHorizontalLock();\n    }\n    else {\n        const openHorizontal = globalHorizontalLock();\n        const openVertical = globalVerticalLock();\n        if (openHorizontal && openVertical) {\n            lock = () => {\n                openHorizontal();\n                openVertical();\n            };\n        }\n        else {\n            // Release the locks because we don't use them\n            if (openHorizontal)\n                openHorizontal();\n            if (openVertical)\n                openVertical();\n        }\n    }\n    return lock;\n}\nfunction isDragActive() {\n    // Check the gesture lock - if we get it, it means no drag gesture is active\n    // and we can safely fire the tap gesture.\n    const openGestureLock = getGlobalLock(true);\n    if (!openGestureLock)\n        return true;\n    openGestureLock();\n    return false;\n}\n\nexport { createLock, getGlobalLock, isDragActive };\n","class Feature {\n    constructor(node) {\n        this.isMounted = false;\n        this.node = node;\n    }\n    update() { }\n}\n\nexport { Feature };\n","import { addPointerEvent } from '../events/add-pointer-event.mjs';\nimport { pipe } from '../utils/pipe.mjs';\nimport { isDragActive } from './drag/utils/lock.mjs';\nimport { Feature } from '../motion/features/Feature.mjs';\nimport { frame } from '../frameloop/frame.mjs';\n\nfunction addHoverEvent(node, isActive) {\n    const eventName = \"pointer\" + (isActive ? \"enter\" : \"leave\");\n    const callbackName = \"onHover\" + (isActive ? \"Start\" : \"End\");\n    const handleEvent = (event, info) => {\n        if (event.type === \"touch\" || isDragActive())\n            return;\n        const props = node.getProps();\n        if (node.animationState && props.whileHover) {\n            node.animationState.setActive(\"whileHover\", isActive);\n        }\n        if (props[callbackName]) {\n            frame.update(() => props[callbackName](event, info));\n        }\n    };\n    return addPointerEvent(node.current, eventName, handleEvent, {\n        passive: !node.getProps()[callbackName],\n    });\n}\nclass HoverGesture extends Feature {\n    mount() {\n        this.unmount = pipe(addHoverEvent(this.node, true), addHoverEvent(this.node, false));\n    }\n    unmount() { }\n}\n\nexport { HoverGesture };\n","/**\n * Recursively traverse up the tree to check whether the provided child node\n * is the parent or a descendant of it.\n *\n * @param parent - Element to find\n * @param child - Element to test against parent\n */\nconst isNodeOrChild = (parent, child) => {\n    if (!child) {\n        return false;\n    }\n    else if (parent === child) {\n        return true;\n    }\n    else {\n        return isNodeOrChild(parent, child.parentElement);\n    }\n};\n\nexport { isNodeOrChild };\n","import { extractEventInfo } from '../events/event-info.mjs';\nimport { addDomEvent } from '../events/add-dom-event.mjs';\nimport { addPointerEvent } from '../events/add-pointer-event.mjs';\nimport { Feature } from '../motion/features/Feature.mjs';\nimport { pipe } from '../utils/pipe.mjs';\nimport { isDragActive } from './drag/utils/lock.mjs';\nimport { isNodeOrChild } from './utils/is-node-or-child.mjs';\nimport { noop } from '../utils/noop.mjs';\nimport { frame } from '../frameloop/frame.mjs';\n\nfunction fireSyntheticPointerEvent(name, handler) {\n    if (!handler)\n        return;\n    const syntheticPointerEvent = new PointerEvent(\"pointer\" + name);\n    handler(syntheticPointerEvent, extractEventInfo(syntheticPointerEvent));\n}\nclass PressGesture extends Feature {\n    constructor() {\n        super(...arguments);\n        this.removeStartListeners = noop;\n        this.removeEndListeners = noop;\n        this.removeAccessibleListeners = noop;\n        this.startPointerPress = (startEvent, startInfo) => {\n            this.removeEndListeners();\n            if (this.isPressing)\n                return;\n            const props = this.node.getProps();\n            const endPointerPress = (endEvent, endInfo) => {\n                if (!this.checkPressEnd())\n                    return;\n                const { onTap, onTapCancel } = this.node.getProps();\n                frame.update(() => {\n                    /**\n                     * We only count this as a tap gesture if the event.target is the same\n                     * as, or a child of, this component's element\n                     */\n                    !isNodeOrChild(this.node.current, endEvent.target)\n                        ? onTapCancel && onTapCancel(endEvent, endInfo)\n                        : onTap && onTap(endEvent, endInfo);\n                });\n            };\n            const removePointerUpListener = addPointerEvent(window, \"pointerup\", endPointerPress, { passive: !(props.onTap || props[\"onPointerUp\"]) });\n            const removePointerCancelListener = addPointerEvent(window, \"pointercancel\", (cancelEvent, cancelInfo) => this.cancelPress(cancelEvent, cancelInfo), { passive: !(props.onTapCancel || props[\"onPointerCancel\"]) });\n            this.removeEndListeners = pipe(removePointerUpListener, removePointerCancelListener);\n            this.startPress(startEvent, startInfo);\n        };\n        this.startAccessiblePress = () => {\n            const handleKeydown = (keydownEvent) => {\n                if (keydownEvent.key !== \"Enter\" || this.isPressing)\n                    return;\n                const handleKeyup = (keyupEvent) => {\n                    if (keyupEvent.key !== \"Enter\" || !this.checkPressEnd())\n                        return;\n                    fireSyntheticPointerEvent(\"up\", (event, info) => {\n                        const { onTap } = this.node.getProps();\n                        if (onTap) {\n                            frame.update(() => onTap(event, info));\n                        }\n                    });\n                };\n                this.removeEndListeners();\n                this.removeEndListeners = addDomEvent(this.node.current, \"keyup\", handleKeyup);\n                fireSyntheticPointerEvent(\"down\", (event, info) => {\n                    this.startPress(event, info);\n                });\n            };\n            const removeKeydownListener = addDomEvent(this.node.current, \"keydown\", handleKeydown);\n            const handleBlur = () => {\n                if (!this.isPressing)\n                    return;\n                fireSyntheticPointerEvent(\"cancel\", (cancelEvent, cancelInfo) => this.cancelPress(cancelEvent, cancelInfo));\n            };\n            const removeBlurListener = addDomEvent(this.node.current, \"blur\", handleBlur);\n            this.removeAccessibleListeners = pipe(removeKeydownListener, removeBlurListener);\n        };\n    }\n    startPress(event, info) {\n        this.isPressing = true;\n        const { onTapStart, whileTap } = this.node.getProps();\n        /**\n         * Ensure we trigger animations before firing event callback\n         */\n        if (whileTap && this.node.animationState) {\n            this.node.animationState.setActive(\"whileTap\", true);\n        }\n        if (onTapStart) {\n            frame.update(() => onTapStart(event, info));\n        }\n    }\n    checkPressEnd() {\n        this.removeEndListeners();\n        this.isPressing = false;\n        const props = this.node.getProps();\n        if (props.whileTap && this.node.animationState) {\n            this.node.animationState.setActive(\"whileTap\", false);\n        }\n        return !isDragActive();\n    }\n    cancelPress(event, info) {\n        if (!this.checkPressEnd())\n            return;\n        const { onTapCancel } = this.node.getProps();\n        if (onTapCancel) {\n            frame.update(() => onTapCancel(event, info));\n        }\n    }\n    mount() {\n        const props = this.node.getProps();\n        const removePointerListener = addPointerEvent(this.node.current, \"pointerdown\", this.startPointerPress, { passive: !(props.onTapStart || props[\"onPointerStart\"]) });\n        const removeFocusListener = addDomEvent(this.node.current, \"focus\", this.startAccessiblePress);\n        this.removeStartListeners = pipe(removePointerListener, removeFocusListener);\n    }\n    unmount() {\n        this.removeStartListeners();\n        this.removeEndListeners();\n        this.removeAccessibleListeners();\n    }\n}\n\nexport { PressGesture };\n","/**\n * Map an IntersectionHandler callback to an element. We only ever make one handler for one\n * element, so even though these handlers might all be triggered by different\n * observers, we can keep them in the same map.\n */\nconst observerCallbacks = new WeakMap();\n/**\n * Multiple observers can be created for multiple element/document roots. Each with\n * different settings. So here we store dictionaries of observers to each root,\n * using serialised settings (threshold/margin) as lookup keys.\n */\nconst observers = new WeakMap();\nconst fireObserverCallback = (entry) => {\n    const callback = observerCallbacks.get(entry.target);\n    callback && callback(entry);\n};\nconst fireAllObserverCallbacks = (entries) => {\n    entries.forEach(fireObserverCallback);\n};\nfunction initIntersectionObserver({ root, ...options }) {\n    const lookupRoot = root || document;\n    /**\n     * If we don't have an observer lookup map for this root, create one.\n     */\n    if (!observers.has(lookupRoot)) {\n        observers.set(lookupRoot, {});\n    }\n    const rootObservers = observers.get(lookupRoot);\n    const key = JSON.stringify(options);\n    /**\n     * If we don't have an observer for this combination of root and settings,\n     * create one.\n     */\n    if (!rootObservers[key]) {\n        rootObservers[key] = new IntersectionObserver(fireAllObserverCallbacks, { root, ...options });\n    }\n    return rootObservers[key];\n}\nfunction observeIntersection(element, options, callback) {\n    const rootInteresectionObserver = initIntersectionObserver(options);\n    observerCallbacks.set(element, callback);\n    rootInteresectionObserver.observe(element);\n    return () => {\n        observerCallbacks.delete(element);\n        rootInteresectionObserver.unobserve(element);\n    };\n}\n\nexport { observeIntersection };\n","import { Feature } from '../Feature.mjs';\nimport { observeIntersection } from './observers.mjs';\n\nconst thresholdNames = {\n    some: 0,\n    all: 1,\n};\nclass InViewFeature extends Feature {\n    constructor() {\n        super(...arguments);\n        this.hasEnteredView = false;\n        this.isInView = false;\n    }\n    startObserver() {\n        this.unmount();\n        const { viewport = {} } = this.node.getProps();\n        const { root, margin: rootMargin, amount = \"some\", once } = viewport;\n        const options = {\n            root: root ? root.current : undefined,\n            rootMargin,\n            threshold: typeof amount === \"number\" ? amount : thresholdNames[amount],\n        };\n        const onIntersectionUpdate = (entry) => {\n            const { isIntersecting } = entry;\n            /**\n             * If there's been no change in the viewport state, early return.\n             */\n            if (this.isInView === isIntersecting)\n                return;\n            this.isInView = isIntersecting;\n            /**\n             * Handle hasEnteredView. If this is only meant to run once, and\n             * element isn't visible, early return. Otherwise set hasEnteredView to true.\n             */\n            if (once && !isIntersecting && this.hasEnteredView) {\n                return;\n            }\n            else if (isIntersecting) {\n                this.hasEnteredView = true;\n            }\n            if (this.node.animationState) {\n                this.node.animationState.setActive(\"whileInView\", isIntersecting);\n            }\n            /**\n             * Use the latest committed props rather than the ones in scope\n             * when this observer is created\n             */\n            const { onViewportEnter, onViewportLeave } = this.node.getProps();\n            const callback = isIntersecting ? onViewportEnter : onViewportLeave;\n            callback && callback(entry);\n        };\n        return observeIntersection(this.node.current, options, onIntersectionUpdate);\n    }\n    mount() {\n        this.startObserver();\n    }\n    update() {\n        if (typeof IntersectionObserver === \"undefined\")\n            return;\n        const { props, prevProps } = this.node;\n        const hasOptionsChanged = [\"amount\", \"margin\", \"root\"].some(hasViewportOptionChanged(props, prevProps));\n        if (hasOptionsChanged) {\n            this.startObserver();\n        }\n    }\n    unmount() { }\n}\nfunction hasViewportOptionChanged({ viewport = {} }, { viewport: prevViewport = {} } = {}) {\n    return (name) => viewport[name] !== prevViewport[name];\n}\n\nexport { InViewFeature };\n","import { HoverGesture } from '../../gestures/hover.mjs';\nimport { FocusGesture } from '../../gestures/focus.mjs';\nimport { PressGesture } from '../../gestures/press.mjs';\nimport { InViewFeature } from './viewport/index.mjs';\n\nconst gestureAnimations = {\n    inView: {\n        Feature: InViewFeature,\n    },\n    tap: {\n        Feature: PressGesture,\n    },\n    focus: {\n        Feature: FocusGesture,\n    },\n    hover: {\n        Feature: HoverGesture,\n    },\n};\n\nexport { gestureAnimations };\n","import { addDomEvent } from '../events/add-dom-event.mjs';\nimport { Feature } from '../motion/features/Feature.mjs';\nimport { pipe } from '../utils/pipe.mjs';\n\nclass FocusGesture extends Feature {\n    constructor() {\n        super(...arguments);\n        this.isActive = false;\n    }\n    onFocus() {\n        let isFocusVisible = false;\n        /**\n         * If this element doesn't match focus-visible then don't\n         * apply whileHover. But, if matches throws that focus-visible\n         * is not a valid selector then in that browser outline styles will be applied\n         * to the element by default and we want to match that behaviour with whileFocus.\n         */\n        try {\n            isFocusVisible = this.node.current.matches(\":focus-visible\");\n        }\n        catch (e) {\n            isFocusVisible = true;\n        }\n        if (!isFocusVisible || !this.node.animationState)\n            return;\n        this.node.animationState.setActive(\"whileFocus\", true);\n        this.isActive = true;\n    }\n    onBlur() {\n        if (!this.isActive || !this.node.animationState)\n            return;\n        this.node.animationState.setActive(\"whileFocus\", false);\n        this.isActive = false;\n    }\n    mount() {\n        this.unmount = pipe(addDomEvent(this.node.current, \"focus\", () => this.onFocus()), addDomEvent(this.node.current, \"blur\", () => this.onBlur()));\n    }\n    unmount() { }\n}\n\nexport { FocusGesture };\n","function shallowCompare(next, prev) {\n    if (!Array.isArray(prev))\n        return false;\n    const prevLength = prev.length;\n    if (prevLength !== next.length)\n        return false;\n    for (let i = 0; i < prevLength; i++) {\n        if (prev[i] !== next[i])\n            return false;\n    }\n    return true;\n}\n\nexport { shallowCompare };\n","import { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { isKeyframesTarget } from '../../animation/utils/is-keyframes-target.mjs';\nimport { shallowCompare } from '../../utils/shallow-compare.mjs';\nimport { isVariantLabel } from './is-variant-label.mjs';\nimport { resolveVariant } from './resolve-dynamic-variants.mjs';\nimport { variantPriorityOrder } from './variant-props.mjs';\nimport { animateVisualElement } from '../../animation/interfaces/visual-element.mjs';\n\nconst reversePriorityOrder = [...variantPriorityOrder].reverse();\nconst numAnimationTypes = variantPriorityOrder.length;\nfunction animateList(visualElement) {\n    return (animations) => Promise.all(animations.map(({ animation, options }) => animateVisualElement(visualElement, animation, options)));\n}\nfunction createAnimationState(visualElement) {\n    let animate = animateList(visualElement);\n    const state = createState();\n    let isInitialRender = true;\n    /**\n     * This function will be used to reduce the animation definitions for\n     * each active animation type into an object of resolved values for it.\n     */\n    const buildResolvedTypeValues = (acc, definition) => {\n        const resolved = resolveVariant(visualElement, definition);\n        if (resolved) {\n            const { transition, transitionEnd, ...target } = resolved;\n            acc = { ...acc, ...target, ...transitionEnd };\n        }\n        return acc;\n    };\n    /**\n     * This just allows us to inject mocked animation functions\n     * @internal\n     */\n    function setAnimateFunction(makeAnimator) {\n        animate = makeAnimator(visualElement);\n    }\n    /**\n     * When we receive new props, we need to:\n     * 1. Create a list of protected keys for each type. This is a directory of\n     *    value keys that are currently being \"handled\" by types of a higher priority\n     *    so that whenever an animation is played of a given type, these values are\n     *    protected from being animated.\n     * 2. Determine if an animation type needs animating.\n     * 3. Determine if any values have been removed from a type and figure out\n     *    what to animate those to.\n     */\n    function animateChanges(options, changedActiveType) {\n        const props = visualElement.getProps();\n        const context = visualElement.getVariantContext(true) || {};\n        /**\n         * A list of animations that we'll build into as we iterate through the animation\n         * types. This will get executed at the end of the function.\n         */\n        const animations = [];\n        /**\n         * Keep track of which values have been removed. Then, as we hit lower priority\n         * animation types, we can check if they contain removed values and animate to that.\n         */\n        const removedKeys = new Set();\n        /**\n         * A dictionary of all encountered keys. This is an object to let us build into and\n         * copy it without iteration. Each time we hit an animation type we set its protected\n         * keys - the keys its not allowed to animate - to the latest version of this object.\n         */\n        let encounteredKeys = {};\n        /**\n         * If a variant has been removed at a given index, and this component is controlling\n         * variant animations, we want to ensure lower-priority variants are forced to animate.\n         */\n        let removedVariantIndex = Infinity;\n        /**\n         * Iterate through all animation types in reverse priority order. For each, we want to\n         * detect which values it's handling and whether or not they've changed (and therefore\n         * need to be animated). If any values have been removed, we want to detect those in\n         * lower priority props and flag for animation.\n         */\n        for (let i = 0; i < numAnimationTypes; i++) {\n            const type = reversePriorityOrder[i];\n            const typeState = state[type];\n            const prop = props[type] !== undefined ? props[type] : context[type];\n            const propIsVariant = isVariantLabel(prop);\n            /**\n             * If this type has *just* changed isActive status, set activeDelta\n             * to that status. Otherwise set to null.\n             */\n            const activeDelta = type === changedActiveType ? typeState.isActive : null;\n            if (activeDelta === false)\n                removedVariantIndex = i;\n            /**\n             * If this prop is an inherited variant, rather than been set directly on the\n             * component itself, we want to make sure we allow the parent to trigger animations.\n             *\n             * TODO: Can probably change this to a !isControllingVariants check\n             */\n            let isInherited = prop === context[type] && prop !== props[type] && propIsVariant;\n            /**\n             *\n             */\n            if (isInherited &&\n                isInitialRender &&\n                visualElement.manuallyAnimateOnMount) {\n                isInherited = false;\n            }\n            /**\n             * Set all encountered keys so far as the protected keys for this type. This will\n             * be any key that has been animated or otherwise handled by active, higher-priortiy types.\n             */\n            typeState.protectedKeys = { ...encounteredKeys };\n            // Check if we can skip analysing this prop early\n            if (\n            // If it isn't active and hasn't *just* been set as inactive\n            (!typeState.isActive && activeDelta === null) ||\n                // If we didn't and don't have any defined prop for this animation type\n                (!prop && !typeState.prevProp) ||\n                // Or if the prop doesn't define an animation\n                isAnimationControls(prop) ||\n                typeof prop === \"boolean\") {\n                continue;\n            }\n            /**\n             * As we go look through the values defined on this type, if we detect\n             * a changed value or a value that was removed in a higher priority, we set\n             * this to true and add this prop to the animation list.\n             */\n            const variantDidChange = checkVariantsDidChange(typeState.prevProp, prop);\n            let shouldAnimateType = variantDidChange ||\n                // If we're making this variant active, we want to always make it active\n                (type === changedActiveType &&\n                    typeState.isActive &&\n                    !isInherited &&\n                    propIsVariant) ||\n                // If we removed a higher-priority variant (i is in reverse order)\n                (i > removedVariantIndex && propIsVariant);\n            /**\n             * As animations can be set as variant lists, variants or target objects, we\n             * coerce everything to an array if it isn't one already\n             */\n            const definitionList = Array.isArray(prop) ? prop : [prop];\n            /**\n             * Build an object of all the resolved values. We'll use this in the subsequent\n             * animateChanges calls to determine whether a value has changed.\n             */\n            let resolvedValues = definitionList.reduce(buildResolvedTypeValues, {});\n            if (activeDelta === false)\n                resolvedValues = {};\n            /**\n             * Now we need to loop through all the keys in the prev prop and this prop,\n             * and decide:\n             * 1. If the value has changed, and needs animating\n             * 2. If it has been removed, and needs adding to the removedKeys set\n             * 3. If it has been removed in a higher priority type and needs animating\n             * 4. If it hasn't been removed in a higher priority but hasn't changed, and\n             *    needs adding to the type's protectedKeys list.\n             */\n            const { prevResolvedValues = {} } = typeState;\n            const allKeys = {\n                ...prevResolvedValues,\n                ...resolvedValues,\n            };\n            const markToAnimate = (key) => {\n                shouldAnimateType = true;\n                removedKeys.delete(key);\n                typeState.needsAnimating[key] = true;\n            };\n            for (const key in allKeys) {\n                const next = resolvedValues[key];\n                const prev = prevResolvedValues[key];\n                // If we've already handled this we can just skip ahead\n                if (encounteredKeys.hasOwnProperty(key))\n                    continue;\n                /**\n                 * If the value has changed, we probably want to animate it.\n                 */\n                if (next !== prev) {\n                    /**\n                     * If both values are keyframes, we need to shallow compare them to\n                     * detect whether any value has changed. If it has, we animate it.\n                     */\n                    if (isKeyframesTarget(next) && isKeyframesTarget(prev)) {\n                        if (!shallowCompare(next, prev) || variantDidChange) {\n                            markToAnimate(key);\n                        }\n                        else {\n                            /**\n                             * If it hasn't changed, we want to ensure it doesn't animate by\n                             * adding it to the list of protected keys.\n                             */\n                            typeState.protectedKeys[key] = true;\n                        }\n                    }\n                    else if (next !== undefined) {\n                        // If next is defined and doesn't equal prev, it needs animating\n                        markToAnimate(key);\n                    }\n                    else {\n                        // If it's undefined, it's been removed.\n                        removedKeys.add(key);\n                    }\n                }\n                else if (next !== undefined && removedKeys.has(key)) {\n                    /**\n                     * If next hasn't changed and it isn't undefined, we want to check if it's\n                     * been removed by a higher priority\n                     */\n                    markToAnimate(key);\n                }\n                else {\n                    /**\n                     * If it hasn't changed, we add it to the list of protected values\n                     * to ensure it doesn't get animated.\n                     */\n                    typeState.protectedKeys[key] = true;\n                }\n            }\n            /**\n             * Update the typeState so next time animateChanges is called we can compare the\n             * latest prop and resolvedValues to these.\n             */\n            typeState.prevProp = prop;\n            typeState.prevResolvedValues = resolvedValues;\n            /**\n             *\n             */\n            if (typeState.isActive) {\n                encounteredKeys = { ...encounteredKeys, ...resolvedValues };\n            }\n            if (isInitialRender && visualElement.blockInitialAnimation) {\n                shouldAnimateType = false;\n            }\n            /**\n             * If this is an inherited prop we want to hard-block animations\n             * TODO: Test as this should probably still handle animations triggered\n             * by removed values?\n             */\n            if (shouldAnimateType && !isInherited) {\n                animations.push(...definitionList.map((animation) => ({\n                    animation: animation,\n                    options: { type, ...options },\n                })));\n            }\n        }\n        /**\n         * If there are some removed value that haven't been dealt with,\n         * we need to create a new animation that falls back either to the value\n         * defined in the style prop, or the last read value.\n         */\n        if (removedKeys.size) {\n            const fallbackAnimation = {};\n            removedKeys.forEach((key) => {\n                const fallbackTarget = visualElement.getBaseTarget(key);\n                if (fallbackTarget !== undefined) {\n                    fallbackAnimation[key] = fallbackTarget;\n                }\n            });\n            animations.push({ animation: fallbackAnimation });\n        }\n        let shouldAnimate = Boolean(animations.length);\n        if (isInitialRender &&\n            (props.initial === false || props.initial === props.animate) &&\n            !visualElement.manuallyAnimateOnMount) {\n            shouldAnimate = false;\n        }\n        isInitialRender = false;\n        return shouldAnimate ? animate(animations) : Promise.resolve();\n    }\n    /**\n     * Change whether a certain animation type is active.\n     */\n    function setActive(type, isActive, options) {\n        var _a;\n        // If the active state hasn't changed, we can safely do nothing here\n        if (state[type].isActive === isActive)\n            return Promise.resolve();\n        // Propagate active change to children\n        (_a = visualElement.variantChildren) === null || _a === void 0 ? void 0 : _a.forEach((child) => { var _a; return (_a = child.animationState) === null || _a === void 0 ? void 0 : _a.setActive(type, isActive); });\n        state[type].isActive = isActive;\n        const animations = animateChanges(options, type);\n        for (const key in state) {\n            state[key].protectedKeys = {};\n        }\n        return animations;\n    }\n    return {\n        animateChanges,\n        setActive,\n        setAnimateFunction,\n        getState: () => state,\n    };\n}\nfunction checkVariantsDidChange(prev, next) {\n    if (typeof next === \"string\") {\n        return next !== prev;\n    }\n    else if (Array.isArray(next)) {\n        return !shallowCompare(next, prev);\n    }\n    return false;\n}\nfunction createTypeState(isActive = false) {\n    return {\n        isActive,\n        protectedKeys: {},\n        needsAnimating: {},\n        prevResolvedValues: {},\n    };\n}\nfunction createState() {\n    return {\n        animate: createTypeState(true),\n        whileInView: createTypeState(),\n        whileHover: createTypeState(),\n        whileTap: createTypeState(),\n        whileDrag: createTypeState(),\n        whileFocus: createTypeState(),\n        exit: createTypeState(),\n    };\n}\n\nexport { checkVariantsDidChange, createAnimationState };\n","import { Feature } from '../Feature.mjs';\n\nlet id = 0;\nclass ExitAnimationFeature extends Feature {\n    constructor() {\n        super(...arguments);\n        this.id = id++;\n    }\n    update() {\n        if (!this.node.presenceContext)\n            return;\n        const { isPresent, onExitComplete, custom } = this.node.presenceContext;\n        const { isPresent: prevIsPresent } = this.node.prevPresenceContext || {};\n        if (!this.node.animationState || isPresent === prevIsPresent) {\n            return;\n        }\n        const exitAnimation = this.node.animationState.setActive(\"exit\", !isPresent, { custom: custom !== null && custom !== void 0 ? custom : this.node.getProps().custom });\n        if (onExitComplete && !isPresent) {\n            exitAnimation.then(() => onExitComplete(this.id));\n        }\n    }\n    mount() {\n        const { register } = this.node.presenceContext || {};\n        if (register) {\n            this.unmount = register(this.id);\n        }\n    }\n    unmount() { }\n}\n\nexport { ExitAnimationFeature };\n","import { AnimationFeature } from './animation/index.mjs';\nimport { ExitAnimationFeature } from './animation/exit.mjs';\n\nconst animations = {\n    animation: {\n        Feature: AnimationFeature,\n    },\n    exit: {\n        Feature: ExitAnimationFeature,\n    },\n};\n\nexport { animations };\n","import { isAnimationControls } from '../../../animation/utils/is-animation-controls.mjs';\nimport { createAnimationState } from '../../../render/utils/animation-state.mjs';\nimport { Feature } from '../Feature.mjs';\n\nclass AnimationFeature extends Feature {\n    /**\n     * We dynamically generate the AnimationState manager as it contains a reference\n     * to the underlying animation library. We only want to load that if we load this,\n     * so people can optionally code split it out using the `m` component.\n     */\n    constructor(node) {\n        super(node);\n        node.animationState || (node.animationState = createAnimationState(node));\n    }\n    updateAnimationControlsSubscription() {\n        const { animate } = this.node.getProps();\n        this.unmount();\n        if (isAnimationControls(animate)) {\n            this.unmount = animate.subscribe(this.node);\n        }\n    }\n    /**\n     * Subscribe any provided AnimationControls to the component's VisualElement\n     */\n    mount() {\n        this.updateAnimationControlsSubscription();\n    }\n    update() {\n        const { animate } = this.node.getProps();\n        const { animate: prevAnimate } = this.node.prevProps || {};\n        if (animate !== prevAnimate) {\n            this.updateAnimationControlsSubscription();\n        }\n    }\n    unmount() { }\n}\n\nexport { AnimationFeature };\n","const distance = (a, b) => Math.abs(a - b);\nfunction distance2D(a, b) {\n    // Multi-dimensional\n    const xDelta = distance(a.x, b.x);\n    const yDelta = distance(a.y, b.y);\n    return Math.sqrt(xDelta ** 2 + yDelta ** 2);\n}\n\nexport { distance, distance2D };\n","import { extractEventInfo } from '../../events/event-info.mjs';\nimport { secondsToMilliseconds, millisecondsToSeconds } from '../../utils/time-conversion.mjs';\nimport { addPointerEvent } from '../../events/add-pointer-event.mjs';\nimport { pipe } from '../../utils/pipe.mjs';\nimport { distance2D } from '../../utils/distance.mjs';\nimport { isPrimaryPointer } from '../../events/utils/is-primary-pointer.mjs';\nimport { frame, cancelFrame, frameData } from '../../frameloop/frame.mjs';\n\n/**\n * @internal\n */\nclass PanSession {\n    constructor(event, handlers, { transformPagePoint, contextWindow } = {}) {\n        /**\n         * @internal\n         */\n        this.startEvent = null;\n        /**\n         * @internal\n         */\n        this.lastMoveEvent = null;\n        /**\n         * @internal\n         */\n        this.lastMoveEventInfo = null;\n        /**\n         * @internal\n         */\n        this.handlers = {};\n        /**\n         * @internal\n         */\n        this.contextWindow = window;\n        this.updatePoint = () => {\n            if (!(this.lastMoveEvent && this.lastMoveEventInfo))\n                return;\n            const info = getPanInfo(this.lastMoveEventInfo, this.history);\n            const isPanStarted = this.startEvent !== null;\n            // Only start panning if the offset is larger than 3 pixels. If we make it\n            // any larger than this we'll want to reset the pointer history\n            // on the first update to avoid visual snapping to the cursoe.\n            const isDistancePastThreshold = distance2D(info.offset, { x: 0, y: 0 }) >= 3;\n            if (!isPanStarted && !isDistancePastThreshold)\n                return;\n            const { point } = info;\n            const { timestamp } = frameData;\n            this.history.push({ ...point, timestamp });\n            const { onStart, onMove } = this.handlers;\n            if (!isPanStarted) {\n                onStart && onStart(this.lastMoveEvent, info);\n                this.startEvent = this.lastMoveEvent;\n            }\n            onMove && onMove(this.lastMoveEvent, info);\n        };\n        this.handlePointerMove = (event, info) => {\n            this.lastMoveEvent = event;\n            this.lastMoveEventInfo = transformPoint(info, this.transformPagePoint);\n            // Throttle mouse move event to once per frame\n            frame.update(this.updatePoint, true);\n        };\n        this.handlePointerUp = (event, info) => {\n            this.end();\n            if (!(this.lastMoveEvent && this.lastMoveEventInfo))\n                return;\n            const { onEnd, onSessionEnd } = this.handlers;\n            const panInfo = getPanInfo(event.type === \"pointercancel\"\n                ? this.lastMoveEventInfo\n                : transformPoint(info, this.transformPagePoint), this.history);\n            if (this.startEvent && onEnd) {\n                onEnd(event, panInfo);\n            }\n            onSessionEnd && onSessionEnd(event, panInfo);\n        };\n        // If we have more than one touch, don't start detecting this gesture\n        if (!isPrimaryPointer(event))\n            return;\n        this.handlers = handlers;\n        this.transformPagePoint = transformPagePoint;\n        this.contextWindow = contextWindow || window;\n        const info = extractEventInfo(event);\n        const initialInfo = transformPoint(info, this.transformPagePoint);\n        const { point } = initialInfo;\n        const { timestamp } = frameData;\n        this.history = [{ ...point, timestamp }];\n        const { onSessionStart } = handlers;\n        onSessionStart &&\n            onSessionStart(event, getPanInfo(initialInfo, this.history));\n        this.removeListeners = pipe(addPointerEvent(this.contextWindow, \"pointermove\", this.handlePointerMove), addPointerEvent(this.contextWindow, \"pointerup\", this.handlePointerUp), addPointerEvent(this.contextWindow, \"pointercancel\", this.handlePointerUp));\n    }\n    updateHandlers(handlers) {\n        this.handlers = handlers;\n    }\n    end() {\n        this.removeListeners && this.removeListeners();\n        cancelFrame(this.updatePoint);\n    }\n}\nfunction transformPoint(info, transformPagePoint) {\n    return transformPagePoint ? { point: transformPagePoint(info.point) } : info;\n}\nfunction subtractPoint(a, b) {\n    return { x: a.x - b.x, y: a.y - b.y };\n}\nfunction getPanInfo({ point }, history) {\n    return {\n        point,\n        delta: subtractPoint(point, lastDevicePoint(history)),\n        offset: subtractPoint(point, startDevicePoint(history)),\n        velocity: getVelocity(history, 0.1),\n    };\n}\nfunction startDevicePoint(history) {\n    return history[0];\n}\nfunction lastDevicePoint(history) {\n    return history[history.length - 1];\n}\nfunction getVelocity(history, timeDelta) {\n    if (history.length < 2) {\n        return { x: 0, y: 0 };\n    }\n    let i = history.length - 1;\n    let timestampedPoint = null;\n    const lastPoint = lastDevicePoint(history);\n    while (i >= 0) {\n        timestampedPoint = history[i];\n        if (lastPoint.timestamp - timestampedPoint.timestamp >\n            secondsToMilliseconds(timeDelta)) {\n            break;\n        }\n        i--;\n    }\n    if (!timestampedPoint) {\n        return { x: 0, y: 0 };\n    }\n    const time = millisecondsToSeconds(lastPoint.timestamp - timestampedPoint.timestamp);\n    if (time === 0) {\n        return { x: 0, y: 0 };\n    }\n    const currentVelocity = {\n        x: (lastPoint.x - timestampedPoint.x) / time,\n        y: (lastPoint.y - timestampedPoint.y) / time,\n    };\n    if (currentVelocity.x === Infinity) {\n        currentVelocity.x = 0;\n    }\n    if (currentVelocity.y === Infinity) {\n        currentVelocity.y = 0;\n    }\n    return currentVelocity;\n}\n\nexport { PanSession };\n","import { mix } from '../../utils/mix.mjs';\n\nfunction calcLength(axis) {\n    return axis.max - axis.min;\n}\nfunction isNear(value, target = 0, maxDistance = 0.01) {\n    return Math.abs(value - target) <= maxDistance;\n}\nfunction calcAxisDelta(delta, source, target, origin = 0.5) {\n    delta.origin = origin;\n    delta.originPoint = mix(source.min, source.max, delta.origin);\n    delta.scale = calcLength(target) / calcLength(source);\n    if (isNear(delta.scale, 1, 0.0001) || isNaN(delta.scale))\n        delta.scale = 1;\n    delta.translate =\n        mix(target.min, target.max, delta.origin) - delta.originPoint;\n    if (isNear(delta.translate) || isNaN(delta.translate))\n        delta.translate = 0;\n}\nfunction calcBoxDelta(delta, source, target, origin) {\n    calcAxisDelta(delta.x, source.x, target.x, origin ? origin.originX : undefined);\n    calcAxisDelta(delta.y, source.y, target.y, origin ? origin.originY : undefined);\n}\nfunction calcRelativeAxis(target, relative, parent) {\n    target.min = parent.min + relative.min;\n    target.max = target.min + calcLength(relative);\n}\nfunction calcRelativeBox(target, relative, parent) {\n    calcRelativeAxis(target.x, relative.x, parent.x);\n    calcRelativeAxis(target.y, relative.y, parent.y);\n}\nfunction calcRelativeAxisPosition(target, layout, parent) {\n    target.min = layout.min - parent.min;\n    target.max = target.min + calcLength(layout);\n}\nfunction calcRelativePosition(target, layout, parent) {\n    calcRelativeAxisPosition(target.x, layout.x, parent.x);\n    calcRelativeAxisPosition(target.y, layout.y, parent.y);\n}\n\nexport { calcAxisDelta, calcBoxDelta, calcLength, calcRelativeAxis, calcRelativeAxisPosition, calcRelativeBox, calcRelativePosition, isNear };\n","import { progress } from '../../../utils/progress.mjs';\nimport { calcLength } from '../../../projection/geometry/delta-calc.mjs';\nimport { clamp } from '../../../utils/clamp.mjs';\nimport { mix } from '../../../utils/mix.mjs';\n\n/**\n * Apply constraints to a point. These constraints are both physical along an\n * axis, and an elastic factor that determines how much to constrain the point\n * by if it does lie outside the defined parameters.\n */\nfunction applyConstraints(point, { min, max }, elastic) {\n    if (min !== undefined && point < min) {\n        // If we have a min point defined, and this is outside of that, constrain\n        point = elastic ? mix(min, point, elastic.min) : Math.max(point, min);\n    }\n    else if (max !== undefined && point > max) {\n        // If we have a max point defined, and this is outside of that, constrain\n        point = elastic ? mix(max, point, elastic.max) : Math.min(point, max);\n    }\n    return point;\n}\n/**\n * Calculate constraints in terms of the viewport when defined relatively to the\n * measured axis. This is measured from the nearest edge, so a max constraint of 200\n * on an axis with a max value of 300 would return a constraint of 500 - axis length\n */\nfunction calcRelativeAxisConstraints(axis, min, max) {\n    return {\n        min: min !== undefined ? axis.min + min : undefined,\n        max: max !== undefined\n            ? axis.max + max - (axis.max - axis.min)\n            : undefined,\n    };\n}\n/**\n * Calculate constraints in terms of the viewport when\n * defined relatively to the measured bounding box.\n */\nfunction calcRelativeConstraints(layoutBox, { top, left, bottom, right }) {\n    return {\n        x: calcRelativeAxisConstraints(layoutBox.x, left, right),\n        y: calcRelativeAxisConstraints(layoutBox.y, top, bottom),\n    };\n}\n/**\n * Calculate viewport constraints when defined as another viewport-relative axis\n */\nfunction calcViewportAxisConstraints(layoutAxis, constraintsAxis) {\n    let min = constraintsAxis.min - layoutAxis.min;\n    let max = constraintsAxis.max - layoutAxis.max;\n    // If the constraints axis is actually smaller than the layout axis then we can\n    // flip the constraints\n    if (constraintsAxis.max - constraintsAxis.min <\n        layoutAxis.max - layoutAxis.min) {\n        [min, max] = [max, min];\n    }\n    return { min, max };\n}\n/**\n * Calculate viewport constraints when defined as another viewport-relative box\n */\nfunction calcViewportConstraints(layoutBox, constraintsBox) {\n    return {\n        x: calcViewportAxisConstraints(layoutBox.x, constraintsBox.x),\n        y: calcViewportAxisConstraints(layoutBox.y, constraintsBox.y),\n    };\n}\n/**\n * Calculate a transform origin relative to the source axis, between 0-1, that results\n * in an asthetically pleasing scale/transform needed to project from source to target.\n */\nfunction calcOrigin(source, target) {\n    let origin = 0.5;\n    const sourceLength = calcLength(source);\n    const targetLength = calcLength(target);\n    if (targetLength > sourceLength) {\n        origin = progress(target.min, target.max - sourceLength, source.min);\n    }\n    else if (sourceLength > targetLength) {\n        origin = progress(source.min, source.max - targetLength, target.min);\n    }\n    return clamp(0, 1, origin);\n}\n/**\n * Rebase the calculated viewport constraints relative to the layout.min point.\n */\nfunction rebaseAxisConstraints(layout, constraints) {\n    const relativeConstraints = {};\n    if (constraints.min !== undefined) {\n        relativeConstraints.min = constraints.min - layout.min;\n    }\n    if (constraints.max !== undefined) {\n        relativeConstraints.max = constraints.max - layout.min;\n    }\n    return relativeConstraints;\n}\nconst defaultElastic = 0.35;\n/**\n * Accepts a dragElastic prop and returns resolved elastic values for each axis.\n */\nfunction resolveDragElastic(dragElastic = defaultElastic) {\n    if (dragElastic === false) {\n        dragElastic = 0;\n    }\n    else if (dragElastic === true) {\n        dragElastic = defaultElastic;\n    }\n    return {\n        x: resolveAxisElastic(dragElastic, \"left\", \"right\"),\n        y: resolveAxisElastic(dragElastic, \"top\", \"bottom\"),\n    };\n}\nfunction resolveAxisElastic(dragElastic, minLabel, maxLabel) {\n    return {\n        min: resolvePointElastic(dragElastic, minLabel),\n        max: resolvePointElastic(dragElastic, maxLabel),\n    };\n}\nfunction resolvePointElastic(dragElastic, label) {\n    return typeof dragElastic === \"number\"\n        ? dragElastic\n        : dragElastic[label] || 0;\n}\n\nexport { applyConstraints, calcOrigin, calcRelativeAxisConstraints, calcRelativeConstraints, calcViewportAxisConstraints, calcViewportConstraints, defaultElastic, rebaseAxisConstraints, resolveAxisElastic, resolveDragElastic, resolvePointElastic };\n","const createAxisDelta = () => ({\n    translate: 0,\n    scale: 1,\n    origin: 0,\n    originPoint: 0,\n});\nconst createDelta = () => ({\n    x: createAxisDelta(),\n    y: createAxisDelta(),\n});\nconst createAxis = () => ({ min: 0, max: 0 });\nconst createBox = () => ({\n    x: createAxis(),\n    y: createAxis(),\n});\n\nexport { createAxis, createAxisDelta, createBox, createDelta };\n","function eachAxis(callback) {\n    return [callback(\"x\"), callback(\"y\")];\n}\n\nexport { eachAxis };\n","/**\n * Bounding boxes tend to be defined as top, left, right, bottom. For various operations\n * it's easier to consider each axis individually. This function returns a bounding box\n * as a map of single-axis min/max values.\n */\nfunction convertBoundingBoxToBox({ top, left, right, bottom, }) {\n    return {\n        x: { min: left, max: right },\n        y: { min: top, max: bottom },\n    };\n}\nfunction convertBoxToBoundingBox({ x, y }) {\n    return { top: y.min, right: x.max, bottom: y.max, left: x.min };\n}\n/**\n * Applies a TransformPoint function to a bounding box. TransformPoint is usually a function\n * provided by Framer to allow measured points to be corrected for device scaling. This is used\n * when measuring DOM elements and DOM event points.\n */\nfunction transformBoxPoints(point, transformPoint) {\n    if (!transformPoint)\n        return point;\n    const topLeft = transformPoint({ x: point.left, y: point.top });\n    const bottomRight = transformPoint({ x: point.right, y: point.bottom });\n    return {\n        top: topLeft.y,\n        left: topLeft.x,\n        bottom: bottomRight.y,\n        right: bottomRight.x,\n    };\n}\n\nexport { convertBoundingBoxToBox, convertBoxToBoundingBox, transformBoxPoints };\n","function isIdentityScale(scale) {\n    return scale === undefined || scale === 1;\n}\nfunction hasScale({ scale, scaleX, scaleY }) {\n    return (!isIdentityScale(scale) ||\n        !isIdentityScale(scaleX) ||\n        !isIdentityScale(scaleY));\n}\nfunction hasTransform(values) {\n    return (hasScale(values) ||\n        has2DTranslate(values) ||\n        values.z ||\n        values.rotate ||\n        values.rotateX ||\n        values.rotateY);\n}\nfunction has2DTranslate(values) {\n    return is2DTranslate(values.x) || is2DTranslate(values.y);\n}\nfunction is2DTranslate(value) {\n    return value && value !== \"0%\";\n}\n\nexport { has2DTranslate, hasScale, hasTransform };\n","import { mix } from '../../utils/mix.mjs';\nimport { hasTransform } from '../utils/has-transform.mjs';\n\n/**\n * Scales a point based on a factor and an originPoint\n */\nfunction scalePoint(point, scale, originPoint) {\n    const distanceFromOrigin = point - originPoint;\n    const scaled = scale * distanceFromOrigin;\n    return originPoint + scaled;\n}\n/**\n * Applies a translate/scale delta to a point\n */\nfunction applyPointDelta(point, translate, scale, originPoint, boxScale) {\n    if (boxScale !== undefined) {\n        point = scalePoint(point, boxScale, originPoint);\n    }\n    return scalePoint(point, scale, originPoint) + translate;\n}\n/**\n * Applies a translate/scale delta to an axis\n */\nfunction applyAxisDelta(axis, translate = 0, scale = 1, originPoint, boxScale) {\n    axis.min = applyPointDelta(axis.min, translate, scale, originPoint, boxScale);\n    axis.max = applyPointDelta(axis.max, translate, scale, originPoint, boxScale);\n}\n/**\n * Applies a translate/scale delta to a box\n */\nfunction applyBoxDelta(box, { x, y }) {\n    applyAxisDelta(box.x, x.translate, x.scale, x.originPoint);\n    applyAxisDelta(box.y, y.translate, y.scale, y.originPoint);\n}\n/**\n * Apply a tree of deltas to a box. We do this to calculate the effect of all the transforms\n * in a tree upon our box before then calculating how to project it into our desired viewport-relative box\n *\n * This is the final nested loop within updateLayoutDelta for future refactoring\n */\nfunction applyTreeDeltas(box, treeScale, treePath, isSharedTransition = false) {\n    const treeLength = treePath.length;\n    if (!treeLength)\n        return;\n    // Reset the treeScale\n    treeScale.x = treeScale.y = 1;\n    let node;\n    let delta;\n    for (let i = 0; i < treeLength; i++) {\n        node = treePath[i];\n        delta = node.projectionDelta;\n        /**\n         * TODO: Prefer to remove this, but currently we have motion components with\n         * display: contents in Framer.\n         */\n        const instance = node.instance;\n        if (instance &&\n            instance.style &&\n            instance.style.display === \"contents\") {\n            continue;\n        }\n        if (isSharedTransition &&\n            node.options.layoutScroll &&\n            node.scroll &&\n            node !== node.root) {\n            transformBox(box, {\n                x: -node.scroll.offset.x,\n                y: -node.scroll.offset.y,\n            });\n        }\n        if (delta) {\n            // Incoporate each ancestor's scale into a culmulative treeScale for this component\n            treeScale.x *= delta.x.scale;\n            treeScale.y *= delta.y.scale;\n            // Apply each ancestor's calculated delta into this component's recorded layout box\n            applyBoxDelta(box, delta);\n        }\n        if (isSharedTransition && hasTransform(node.latestValues)) {\n            transformBox(box, node.latestValues);\n        }\n    }\n    /**\n     * Snap tree scale back to 1 if it's within a non-perceivable threshold.\n     * This will help reduce useless scales getting rendered.\n     */\n    treeScale.x = snapToDefault(treeScale.x);\n    treeScale.y = snapToDefault(treeScale.y);\n}\nfunction snapToDefault(scale) {\n    if (Number.isInteger(scale))\n        return scale;\n    return scale > 1.0000000000001 || scale < 0.999999999999 ? scale : 1;\n}\nfunction translateAxis(axis, distance) {\n    axis.min = axis.min + distance;\n    axis.max = axis.max + distance;\n}\n/**\n * Apply a transform to an axis from the latest resolved motion values.\n * This function basically acts as a bridge between a flat motion value map\n * and applyAxisDelta\n */\nfunction transformAxis(axis, transforms, [key, scaleKey, originKey]) {\n    const axisOrigin = transforms[originKey] !== undefined ? transforms[originKey] : 0.5;\n    const originPoint = mix(axis.min, axis.max, axisOrigin);\n    // Apply the axis delta to the final axis\n    applyAxisDelta(axis, transforms[key], transforms[scaleKey], originPoint, transforms.scale);\n}\n/**\n * The names of the motion values we want to apply as translation, scale and origin.\n */\nconst xKeys = [\"x\", \"scaleX\", \"originX\"];\nconst yKeys = [\"y\", \"scaleY\", \"originY\"];\n/**\n * Apply a transform to a box from the latest resolved motion values.\n */\nfunction transformBox(box, transform) {\n    transformAxis(box.x, transform, xKeys);\n    transformAxis(box.y, transform, yKeys);\n}\n\nexport { applyAxisDelta, applyBoxDelta, applyPointDelta, applyTreeDeltas, scalePoint, transformAxis, transformBox, translateAxis };\n","import { convertBoundingBoxToBox, transformBoxPoints } from '../geometry/conversion.mjs';\nimport { translateAxis } from '../geometry/delta-apply.mjs';\n\nfunction measureViewportBox(instance, transformPoint) {\n    return convertBoundingBoxToBox(transformBoxPoints(instance.getBoundingClientRect(), transformPoint));\n}\nfunction measurePageBox(element, rootProjectionNode, transformPagePoint) {\n    const viewportBox = measureViewportBox(element, transformPagePoint);\n    const { scroll } = rootProjectionNode;\n    if (scroll) {\n        translateAxis(viewportBox.x, scroll.offset.x);\n        translateAxis(viewportBox.y, scroll.offset.y);\n    }\n    return viewportBox;\n}\n\nexport { measurePageBox, measureViewportBox };\n","// Fixes https://github.com/framer/motion/issues/2270\nconst getContextWindow = ({ current }) => {\n    return current ? current.ownerDocument.defaultView : null;\n};\n\nexport { getContextWindow };\n","import { invariant } from '../../utils/errors.mjs';\nimport { PanSession } from '../pan/PanSession.mjs';\nimport { getGlobalLock } from './utils/lock.mjs';\nimport { isRefObject } from '../../utils/is-ref-object.mjs';\nimport { addPointerEvent } from '../../events/add-pointer-event.mjs';\nimport { applyConstraints, calcRelativeConstraints, resolveDragElastic, calcViewportConstraints, defaultElastic, rebaseAxisConstraints, calcOrigin } from './utils/constraints.mjs';\nimport { createBox } from '../../projection/geometry/models.mjs';\nimport { eachAxis } from '../../projection/utils/each-axis.mjs';\nimport { measurePageBox } from '../../projection/utils/measure.mjs';\nimport { extractEventInfo } from '../../events/event-info.mjs';\nimport { convertBoxToBoundingBox, convertBoundingBoxToBox } from '../../projection/geometry/conversion.mjs';\nimport { addDomEvent } from '../../events/add-dom-event.mjs';\nimport { calcLength } from '../../projection/geometry/delta-calc.mjs';\nimport { mix } from '../../utils/mix.mjs';\nimport { percent } from '../../value/types/numbers/units.mjs';\nimport { animateMotionValue } from '../../animation/interfaces/motion-value.mjs';\nimport { getContextWindow } from '../../utils/get-context-window.mjs';\nimport { frame } from '../../frameloop/frame.mjs';\n\nconst elementDragControls = new WeakMap();\n/**\n *\n */\n// let latestPointerEvent: PointerEvent\nclass VisualElementDragControls {\n    constructor(visualElement) {\n        // This is a reference to the global drag gesture lock, ensuring only one component\n        // can \"capture\" the drag of one or both axes.\n        // TODO: Look into moving this into pansession?\n        this.openGlobalLock = null;\n        this.isDragging = false;\n        this.currentDirection = null;\n        this.originPoint = { x: 0, y: 0 };\n        /**\n         * The permitted boundaries of travel, in pixels.\n         */\n        this.constraints = false;\n        this.hasMutatedConstraints = false;\n        /**\n         * The per-axis resolved elastic values.\n         */\n        this.elastic = createBox();\n        this.visualElement = visualElement;\n    }\n    start(originEvent, { snapToCursor = false } = {}) {\n        /**\n         * Don't start dragging if this component is exiting\n         */\n        const { presenceContext } = this.visualElement;\n        if (presenceContext && presenceContext.isPresent === false)\n            return;\n        const onSessionStart = (event) => {\n            // Stop any animations on both axis values immediately. This allows the user to throw and catch\n            // the component.\n            this.stopAnimation();\n            if (snapToCursor) {\n                this.snapToCursor(extractEventInfo(event, \"page\").point);\n            }\n        };\n        const onStart = (event, info) => {\n            // Attempt to grab the global drag gesture lock - maybe make this part of PanSession\n            const { drag, dragPropagation, onDragStart } = this.getProps();\n            if (drag && !dragPropagation) {\n                if (this.openGlobalLock)\n                    this.openGlobalLock();\n                this.openGlobalLock = getGlobalLock(drag);\n                // If we don 't have the lock, don't start dragging\n                if (!this.openGlobalLock)\n                    return;\n            }\n            this.isDragging = true;\n            this.currentDirection = null;\n            this.resolveConstraints();\n            if (this.visualElement.projection) {\n                this.visualElement.projection.isAnimationBlocked = true;\n                this.visualElement.projection.target = undefined;\n            }\n            /**\n             * Record gesture origin\n             */\n            eachAxis((axis) => {\n                let current = this.getAxisMotionValue(axis).get() || 0;\n                /**\n                 * If the MotionValue is a percentage value convert to px\n                 */\n                if (percent.test(current)) {\n                    const { projection } = this.visualElement;\n                    if (projection && projection.layout) {\n                        const measuredAxis = projection.layout.layoutBox[axis];\n                        if (measuredAxis) {\n                            const length = calcLength(measuredAxis);\n                            current = length * (parseFloat(current) / 100);\n                        }\n                    }\n                }\n                this.originPoint[axis] = current;\n            });\n            // Fire onDragStart event\n            if (onDragStart) {\n                frame.update(() => onDragStart(event, info), false, true);\n            }\n            const { animationState } = this.visualElement;\n            animationState && animationState.setActive(\"whileDrag\", true);\n        };\n        const onMove = (event, info) => {\n            // latestPointerEvent = event\n            const { dragPropagation, dragDirectionLock, onDirectionLock, onDrag, } = this.getProps();\n            // If we didn't successfully receive the gesture lock, early return.\n            if (!dragPropagation && !this.openGlobalLock)\n                return;\n            const { offset } = info;\n            // Attempt to detect drag direction if directionLock is true\n            if (dragDirectionLock && this.currentDirection === null) {\n                this.currentDirection = getCurrentDirection(offset);\n                // If we've successfully set a direction, notify listener\n                if (this.currentDirection !== null) {\n                    onDirectionLock && onDirectionLock(this.currentDirection);\n                }\n                return;\n            }\n            // Update each point with the latest position\n            this.updateAxis(\"x\", info.point, offset);\n            this.updateAxis(\"y\", info.point, offset);\n            /**\n             * Ideally we would leave the renderer to fire naturally at the end of\n             * this frame but if the element is about to change layout as the result\n             * of a re-render we want to ensure the browser can read the latest\n             * bounding box to ensure the pointer and element don't fall out of sync.\n             */\n            this.visualElement.render();\n            /**\n             * This must fire after the render call as it might trigger a state\n             * change which itself might trigger a layout update.\n             */\n            onDrag && onDrag(event, info);\n        };\n        const onSessionEnd = (event, info) => this.stop(event, info);\n        this.panSession = new PanSession(originEvent, {\n            onSessionStart,\n            onStart,\n            onMove,\n            onSessionEnd,\n        }, {\n            transformPagePoint: this.visualElement.getTransformPagePoint(),\n            contextWindow: getContextWindow(this.visualElement),\n        });\n    }\n    stop(event, info) {\n        const isDragging = this.isDragging;\n        this.cancel();\n        if (!isDragging)\n            return;\n        const { velocity } = info;\n        this.startAnimation(velocity);\n        const { onDragEnd } = this.getProps();\n        if (onDragEnd) {\n            frame.update(() => onDragEnd(event, info));\n        }\n    }\n    cancel() {\n        this.isDragging = false;\n        const { projection, animationState } = this.visualElement;\n        if (projection) {\n            projection.isAnimationBlocked = false;\n        }\n        this.panSession && this.panSession.end();\n        this.panSession = undefined;\n        const { dragPropagation } = this.getProps();\n        if (!dragPropagation && this.openGlobalLock) {\n            this.openGlobalLock();\n            this.openGlobalLock = null;\n        }\n        animationState && animationState.setActive(\"whileDrag\", false);\n    }\n    updateAxis(axis, _point, offset) {\n        const { drag } = this.getProps();\n        // If we're not dragging this axis, do an early return.\n        if (!offset || !shouldDrag(axis, drag, this.currentDirection))\n            return;\n        const axisValue = this.getAxisMotionValue(axis);\n        let next = this.originPoint[axis] + offset[axis];\n        // Apply constraints\n        if (this.constraints && this.constraints[axis]) {\n            next = applyConstraints(next, this.constraints[axis], this.elastic[axis]);\n        }\n        axisValue.set(next);\n    }\n    resolveConstraints() {\n        var _a;\n        const { dragConstraints, dragElastic } = this.getProps();\n        const layout = this.visualElement.projection &&\n            !this.visualElement.projection.layout\n            ? this.visualElement.projection.measure(false)\n            : (_a = this.visualElement.projection) === null || _a === void 0 ? void 0 : _a.layout;\n        const prevConstraints = this.constraints;\n        if (dragConstraints && isRefObject(dragConstraints)) {\n            if (!this.constraints) {\n                this.constraints = this.resolveRefConstraints();\n            }\n        }\n        else {\n            if (dragConstraints && layout) {\n                this.constraints = calcRelativeConstraints(layout.layoutBox, dragConstraints);\n            }\n            else {\n                this.constraints = false;\n            }\n        }\n        this.elastic = resolveDragElastic(dragElastic);\n        /**\n         * If we're outputting to external MotionValues, we want to rebase the measured constraints\n         * from viewport-relative to component-relative.\n         */\n        if (prevConstraints !== this.constraints &&\n            layout &&\n            this.constraints &&\n            !this.hasMutatedConstraints) {\n            eachAxis((axis) => {\n                if (this.getAxisMotionValue(axis)) {\n                    this.constraints[axis] = rebaseAxisConstraints(layout.layoutBox[axis], this.constraints[axis]);\n                }\n            });\n        }\n    }\n    resolveRefConstraints() {\n        const { dragConstraints: constraints, onMeasureDragConstraints } = this.getProps();\n        if (!constraints || !isRefObject(constraints))\n            return false;\n        const constraintsElement = constraints.current;\n        invariant(constraintsElement !== null, \"If `dragConstraints` is set as a React ref, that ref must be passed to another component's `ref` prop.\");\n        const { projection } = this.visualElement;\n        // TODO\n        if (!projection || !projection.layout)\n            return false;\n        const constraintsBox = measurePageBox(constraintsElement, projection.root, this.visualElement.getTransformPagePoint());\n        let measuredConstraints = calcViewportConstraints(projection.layout.layoutBox, constraintsBox);\n        /**\n         * If there's an onMeasureDragConstraints listener we call it and\n         * if different constraints are returned, set constraints to that\n         */\n        if (onMeasureDragConstraints) {\n            const userConstraints = onMeasureDragConstraints(convertBoxToBoundingBox(measuredConstraints));\n            this.hasMutatedConstraints = !!userConstraints;\n            if (userConstraints) {\n                measuredConstraints = convertBoundingBoxToBox(userConstraints);\n            }\n        }\n        return measuredConstraints;\n    }\n    startAnimation(velocity) {\n        const { drag, dragMomentum, dragElastic, dragTransition, dragSnapToOrigin, onDragTransitionEnd, } = this.getProps();\n        const constraints = this.constraints || {};\n        const momentumAnimations = eachAxis((axis) => {\n            if (!shouldDrag(axis, drag, this.currentDirection)) {\n                return;\n            }\n            let transition = (constraints && constraints[axis]) || {};\n            if (dragSnapToOrigin)\n                transition = { min: 0, max: 0 };\n            /**\n             * Overdamp the boundary spring if `dragElastic` is disabled. There's still a frame\n             * of spring animations so we should look into adding a disable spring option to `inertia`.\n             * We could do something here where we affect the `bounceStiffness` and `bounceDamping`\n             * using the value of `dragElastic`.\n             */\n            const bounceStiffness = dragElastic ? 200 : 1000000;\n            const bounceDamping = dragElastic ? 40 : 10000000;\n            const inertia = {\n                type: \"inertia\",\n                velocity: dragMomentum ? velocity[axis] : 0,\n                bounceStiffness,\n                bounceDamping,\n                timeConstant: 750,\n                restDelta: 1,\n                restSpeed: 10,\n                ...dragTransition,\n                ...transition,\n            };\n            // If we're not animating on an externally-provided `MotionValue` we can use the\n            // component's animation controls which will handle interactions with whileHover (etc),\n            // otherwise we just have to animate the `MotionValue` itself.\n            return this.startAxisValueAnimation(axis, inertia);\n        });\n        // Run all animations and then resolve the new drag constraints.\n        return Promise.all(momentumAnimations).then(onDragTransitionEnd);\n    }\n    startAxisValueAnimation(axis, transition) {\n        const axisValue = this.getAxisMotionValue(axis);\n        return axisValue.start(animateMotionValue(axis, axisValue, 0, transition));\n    }\n    stopAnimation() {\n        eachAxis((axis) => this.getAxisMotionValue(axis).stop());\n    }\n    /**\n     * Drag works differently depending on which props are provided.\n     *\n     * - If _dragX and _dragY are provided, we output the gesture delta directly to those motion values.\n     * - Otherwise, we apply the delta to the x/y motion values.\n     */\n    getAxisMotionValue(axis) {\n        const dragKey = \"_drag\" + axis.toUpperCase();\n        const props = this.visualElement.getProps();\n        const externalMotionValue = props[dragKey];\n        return externalMotionValue\n            ? externalMotionValue\n            : this.visualElement.getValue(axis, (props.initial ? props.initial[axis] : undefined) || 0);\n    }\n    snapToCursor(point) {\n        eachAxis((axis) => {\n            const { drag } = this.getProps();\n            // If we're not dragging this axis, do an early return.\n            if (!shouldDrag(axis, drag, this.currentDirection))\n                return;\n            const { projection } = this.visualElement;\n            const axisValue = this.getAxisMotionValue(axis);\n            if (projection && projection.layout) {\n                const { min, max } = projection.layout.layoutBox[axis];\n                axisValue.set(point[axis] - mix(min, max, 0.5));\n            }\n        });\n    }\n    /**\n     * When the viewport resizes we want to check if the measured constraints\n     * have changed and, if so, reposition the element within those new constraints\n     * relative to where it was before the resize.\n     */\n    scalePositionWithinConstraints() {\n        if (!this.visualElement.current)\n            return;\n        const { drag, dragConstraints } = this.getProps();\n        const { projection } = this.visualElement;\n        if (!isRefObject(dragConstraints) || !projection || !this.constraints)\n            return;\n        /**\n         * Stop current animations as there can be visual glitching if we try to do\n         * this mid-animation\n         */\n        this.stopAnimation();\n        /**\n         * Record the relative position of the dragged element relative to the\n         * constraints box and save as a progress value.\n         */\n        const boxProgress = { x: 0, y: 0 };\n        eachAxis((axis) => {\n            const axisValue = this.getAxisMotionValue(axis);\n            if (axisValue) {\n                const latest = axisValue.get();\n                boxProgress[axis] = calcOrigin({ min: latest, max: latest }, this.constraints[axis]);\n            }\n        });\n        /**\n         * Update the layout of this element and resolve the latest drag constraints\n         */\n        const { transformTemplate } = this.visualElement.getProps();\n        this.visualElement.current.style.transform = transformTemplate\n            ? transformTemplate({}, \"\")\n            : \"none\";\n        projection.root && projection.root.updateScroll();\n        projection.updateLayout();\n        this.resolveConstraints();\n        /**\n         * For each axis, calculate the current progress of the layout axis\n         * within the new constraints.\n         */\n        eachAxis((axis) => {\n            if (!shouldDrag(axis, drag, null))\n                return;\n            /**\n             * Calculate a new transform based on the previous box progress\n             */\n            const axisValue = this.getAxisMotionValue(axis);\n            const { min, max } = this.constraints[axis];\n            axisValue.set(mix(min, max, boxProgress[axis]));\n        });\n    }\n    addListeners() {\n        if (!this.visualElement.current)\n            return;\n        elementDragControls.set(this.visualElement, this);\n        const element = this.visualElement.current;\n        /**\n         * Attach a pointerdown event listener on this DOM element to initiate drag tracking.\n         */\n        const stopPointerListener = addPointerEvent(element, \"pointerdown\", (event) => {\n            const { drag, dragListener = true } = this.getProps();\n            drag && dragListener && this.start(event);\n        });\n        const measureDragConstraints = () => {\n            const { dragConstraints } = this.getProps();\n            if (isRefObject(dragConstraints)) {\n                this.constraints = this.resolveRefConstraints();\n            }\n        };\n        const { projection } = this.visualElement;\n        const stopMeasureLayoutListener = projection.addEventListener(\"measure\", measureDragConstraints);\n        if (projection && !projection.layout) {\n            projection.root && projection.root.updateScroll();\n            projection.updateLayout();\n        }\n        measureDragConstraints();\n        /**\n         * Attach a window resize listener to scale the draggable target within its defined\n         * constraints as the window resizes.\n         */\n        const stopResizeListener = addDomEvent(window, \"resize\", () => this.scalePositionWithinConstraints());\n        /**\n         * If the element's layout changes, calculate the delta and apply that to\n         * the drag gesture's origin point.\n         */\n        const stopLayoutUpdateListener = projection.addEventListener(\"didUpdate\", (({ delta, hasLayoutChanged }) => {\n            if (this.isDragging && hasLayoutChanged) {\n                eachAxis((axis) => {\n                    const motionValue = this.getAxisMotionValue(axis);\n                    if (!motionValue)\n                        return;\n                    this.originPoint[axis] += delta[axis].translate;\n                    motionValue.set(motionValue.get() + delta[axis].translate);\n                });\n                this.visualElement.render();\n            }\n        }));\n        return () => {\n            stopResizeListener();\n            stopPointerListener();\n            stopMeasureLayoutListener();\n            stopLayoutUpdateListener && stopLayoutUpdateListener();\n        };\n    }\n    getProps() {\n        const props = this.visualElement.getProps();\n        const { drag = false, dragDirectionLock = false, dragPropagation = false, dragConstraints = false, dragElastic = defaultElastic, dragMomentum = true, } = props;\n        return {\n            ...props,\n            drag,\n            dragDirectionLock,\n            dragPropagation,\n            dragConstraints,\n            dragElastic,\n            dragMomentum,\n        };\n    }\n}\nfunction shouldDrag(direction, drag, currentDirection) {\n    return ((drag === true || drag === direction) &&\n        (currentDirection === null || currentDirection === direction));\n}\n/**\n * Based on an x/y offset determine the current drag direction. If both axis' offsets are lower\n * than the provided threshold, return `null`.\n *\n * @param offset - The x/y offset from origin.\n * @param lockThreshold - (Optional) - the minimum absolute offset before we can determine a drag direction.\n */\nfunction getCurrentDirection(offset, lockThreshold = 10) {\n    let direction = null;\n    if (Math.abs(offset.y) > lockThreshold) {\n        direction = \"y\";\n    }\n    else if (Math.abs(offset.x) > lockThreshold) {\n        direction = \"x\";\n    }\n    return direction;\n}\n\nexport { VisualElementDragControls, elementDragControls };\n","import { PanSession } from './PanSession.mjs';\nimport { addPointerEvent } from '../../events/add-pointer-event.mjs';\nimport { Feature } from '../../motion/features/Feature.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { getContextWindow } from '../../utils/get-context-window.mjs';\nimport { frame } from '../../frameloop/frame.mjs';\n\nconst asyncHandler = (handler) => (event, info) => {\n    if (handler) {\n        frame.update(() => handler(event, info));\n    }\n};\nclass PanGesture extends Feature {\n    constructor() {\n        super(...arguments);\n        this.removePointerDownListener = noop;\n    }\n    onPointerDown(pointerDownEvent) {\n        this.session = new PanSession(pointerDownEvent, this.createPanHandlers(), {\n            transformPagePoint: this.node.getTransformPagePoint(),\n            contextWindow: getContextWindow(this.node),\n        });\n    }\n    createPanHandlers() {\n        const { onPanSessionStart, onPanStart, onPan, onPanEnd } = this.node.getProps();\n        return {\n            onSessionStart: asyncHandler(onPanSessionStart),\n            onStart: asyncHandler(onPanStart),\n            onMove: onPan,\n            onEnd: (event, info) => {\n                delete this.session;\n                if (onPanEnd) {\n                    frame.update(() => onPanEnd(event, info));\n                }\n            },\n        };\n    }\n    mount() {\n        this.removePointerDownListener = addPointerEvent(this.node.current, \"pointerdown\", (event) => this.onPointerDown(event));\n    }\n    update() {\n        this.session && this.session.updateHandlers(this.createPanHandlers());\n    }\n    unmount() {\n        this.removePointerDownListener();\n        this.session && this.session.end();\n    }\n}\n\nexport { PanGesture };\n","/**\n * This should only ever be modified on the client otherwise it'll\n * persist through server requests. If we need instanced states we\n * could lazy-init via root.\n */\nconst globalProjectionState = {\n    /**\n     * Global flag as to whether the tree has animated since the last time\n     * we resized the window\n     */\n    hasAnimatedSinceResize: true,\n    /**\n     * We set this to true once, on the first update. Any nodes added to the tree beyond that\n     * update will be given a `data-projection-id` attribute.\n     */\n    hasEverUpdated: false,\n};\n\nexport { globalProjectionState };\n","import { px } from '../../value/types/numbers/units.mjs';\n\nfunction pixelsToPercent(pixels, axis) {\n    if (axis.max === axis.min)\n        return 0;\n    return (pixels / (axis.max - axis.min)) * 100;\n}\n/**\n * We always correct borderRadius as a percentage rather than pixels to reduce paints.\n * For example, if you are projecting a box that is 100px wide with a 10px borderRadius\n * into a box that is 200px wide with a 20px borderRadius, that is actually a 10%\n * borderRadius in both states. If we animate between the two in pixels that will trigger\n * a paint each time. If we animate between the two in percentage we'll avoid a paint.\n */\nconst correctBorderRadius = {\n    correct: (latest, node) => {\n        if (!node.target)\n            return latest;\n        /**\n         * If latest is a string, if it's a percentage we can return immediately as it's\n         * going to be stretched appropriately. Otherwise, if it's a pixel, convert it to a number.\n         */\n        if (typeof latest === \"string\") {\n            if (px.test(latest)) {\n                latest = parseFloat(latest);\n            }\n            else {\n                return latest;\n            }\n        }\n        /**\n         * If latest is a number, it's a pixel value. We use the current viewportBox to calculate that\n         * pixel value as a percentage of each axis\n         */\n        const x = pixelsToPercent(latest, node.target.x);\n        const y = pixelsToPercent(latest, node.target.y);\n        return `${x}% ${y}%`;\n    },\n};\n\nexport { correctBorderRadius, pixelsToPercent };\n","import { mix } from '../../utils/mix.mjs';\nimport { complex } from '../../value/types/complex/index.mjs';\n\nconst correctBoxShadow = {\n    correct: (latest, { treeScale, projectionDelta }) => {\n        const original = latest;\n        const shadow = complex.parse(latest);\n        // TODO: Doesn't support multiple shadows\n        if (shadow.length > 5)\n            return original;\n        const template = complex.createTransformer(latest);\n        const offset = typeof shadow[0] !== \"number\" ? 1 : 0;\n        // Calculate the overall context scale\n        const xScale = projectionDelta.x.scale * treeScale.x;\n        const yScale = projectionDelta.y.scale * treeScale.y;\n        shadow[0 + offset] /= xScale;\n        shadow[1 + offset] /= yScale;\n        /**\n         * Ideally we'd correct x and y scales individually, but because blur and\n         * spread apply to both we have to take a scale average and apply that instead.\n         * We could potentially improve the outcome of this by incorporating the ratio between\n         * the two scales.\n         */\n        const averageScale = mix(xScale, yScale, 0.5);\n        // Blur\n        if (typeof shadow[2 + offset] === \"number\")\n            shadow[2 + offset] /= averageScale;\n        // Spread\n        if (typeof shadow[3 + offset] === \"number\")\n            shadow[3 + offset] /= averageScale;\n        return template(shadow);\n    },\n};\n\nexport { correctBoxShadow };\n","import React__default, { useContext } from 'react';\nimport { usePresence } from '../../../components/AnimatePresence/use-presence.mjs';\nimport { LayoutGroupContext } from '../../../context/LayoutGroupContext.mjs';\nimport { SwitchLayoutGroupContext } from '../../../context/SwitchLayoutGroupContext.mjs';\nimport { globalProjectionState } from '../../../projection/node/state.mjs';\nimport { correctBorderRadius } from '../../../projection/styles/scale-border-radius.mjs';\nimport { correctBoxShadow } from '../../../projection/styles/scale-box-shadow.mjs';\nimport { addScaleCorrector } from '../../../projection/styles/scale-correction.mjs';\nimport { frame } from '../../../frameloop/frame.mjs';\n\nclass MeasureLayoutWithContext extends React__default.Component {\n    /**\n     * This only mounts projection nodes for components that\n     * need measuring, we might want to do it for all components\n     * in order to incorporate transforms\n     */\n    componentDidMount() {\n        const { visualElement, layoutGroup, switchLayoutGroup, layoutId } = this.props;\n        const { projection } = visualElement;\n        addScaleCorrector(defaultScaleCorrectors);\n        if (projection) {\n            if (layoutGroup.group)\n                layoutGroup.group.add(projection);\n            if (switchLayoutGroup && switchLayoutGroup.register && layoutId) {\n                switchLayoutGroup.register(projection);\n            }\n            projection.root.didUpdate();\n            projection.addEventListener(\"animationComplete\", () => {\n                this.safeToRemove();\n            });\n            projection.setOptions({\n                ...projection.options,\n                onExitComplete: () => this.safeToRemove(),\n            });\n        }\n        globalProjectionState.hasEverUpdated = true;\n    }\n    getSnapshotBeforeUpdate(prevProps) {\n        const { layoutDependency, visualElement, drag, isPresent } = this.props;\n        const projection = visualElement.projection;\n        if (!projection)\n            return null;\n        /**\n         * TODO: We use this data in relegate to determine whether to\n         * promote a previous element. There's no guarantee its presence data\n         * will have updated by this point - if a bug like this arises it will\n         * have to be that we markForRelegation and then find a new lead some other way,\n         * perhaps in didUpdate\n         */\n        projection.isPresent = isPresent;\n        if (drag ||\n            prevProps.layoutDependency !== layoutDependency ||\n            layoutDependency === undefined) {\n            projection.willUpdate();\n        }\n        else {\n            this.safeToRemove();\n        }\n        if (prevProps.isPresent !== isPresent) {\n            if (isPresent) {\n                projection.promote();\n            }\n            else if (!projection.relegate()) {\n                /**\n                 * If there's another stack member taking over from this one,\n                 * it's in charge of the exit animation and therefore should\n                 * be in charge of the safe to remove. Otherwise we call it here.\n                 */\n                frame.postRender(() => {\n                    const stack = projection.getStack();\n                    if (!stack || !stack.members.length) {\n                        this.safeToRemove();\n                    }\n                });\n            }\n        }\n        return null;\n    }\n    componentDidUpdate() {\n        const { projection } = this.props.visualElement;\n        if (projection) {\n            projection.root.didUpdate();\n            queueMicrotask(() => {\n                if (!projection.currentAnimation && projection.isLead()) {\n                    this.safeToRemove();\n                }\n            });\n        }\n    }\n    componentWillUnmount() {\n        const { visualElement, layoutGroup, switchLayoutGroup: promoteContext, } = this.props;\n        const { projection } = visualElement;\n        if (projection) {\n            projection.scheduleCheckAfterUnmount();\n            if (layoutGroup && layoutGroup.group)\n                layoutGroup.group.remove(projection);\n            if (promoteContext && promoteContext.deregister)\n                promoteContext.deregister(projection);\n        }\n    }\n    safeToRemove() {\n        const { safeToRemove } = this.props;\n        safeToRemove && safeToRemove();\n    }\n    render() {\n        return null;\n    }\n}\nfunction MeasureLayout(props) {\n    const [isPresent, safeToRemove] = usePresence();\n    const layoutGroup = useContext(LayoutGroupContext);\n    return (React__default.createElement(MeasureLayoutWithContext, { ...props, layoutGroup: layoutGroup, switchLayoutGroup: useContext(SwitchLayoutGroupContext), isPresent: isPresent, safeToRemove: safeToRemove }));\n}\nconst defaultScaleCorrectors = {\n    borderRadius: {\n        ...correctBorderRadius,\n        applyTo: [\n            \"borderTopLeftRadius\",\n            \"borderTopRightRadius\",\n            \"borderBottomLeftRadius\",\n            \"borderBottomRightRadius\",\n        ],\n    },\n    borderTopLeftRadius: correctBorderRadius,\n    borderTopRightRadius: correctBorderRadius,\n    borderBottomLeftRadius: correctBorderRadius,\n    borderBottomRightRadius: correctBorderRadius,\n    boxShadow: correctBoxShadow,\n};\n\nexport { MeasureLayout };\n","import { useContext, useId, useEffect } from 'react';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\n\n/**\n * When a component is the child of `AnimatePresence`, it can use `usePresence`\n * to access information about whether it's still present in the React tree.\n *\n * ```jsx\n * import { usePresence } from \"framer-motion\"\n *\n * export const Component = () => {\n *   const [isPresent, safeToRemove] = usePresence()\n *\n *   useEffect(() => {\n *     !isPresent && setTimeout(safeToRemove, 1000)\n *   }, [isPresent])\n *\n *   return <div />\n * }\n * ```\n *\n * If `isPresent` is `false`, it means that a component has been removed the tree, but\n * `AnimatePresence` won't really remove it until `safeToRemove` has been called.\n *\n * @public\n */\nfunction usePresence() {\n    const context = useContext(PresenceContext);\n    if (context === null)\n        return [true, null];\n    const { isPresent, onExitComplete, register } = context;\n    // It's safe to call the following hooks conditionally (after an early return) because the context will always\n    // either be null or non-null for the lifespan of the component.\n    const id = useId();\n    useEffect(() => register(id), []);\n    const safeToRemove = () => onExitComplete && onExitComplete(id);\n    return !isPresent && onExitComplete ? [false, safeToRemove] : [true];\n}\n/**\n * Similar to `usePresence`, except `useIsPresent` simply returns whether or not the component is present.\n * There is no `safeToRemove` function.\n *\n * ```jsx\n * import { useIsPresent } from \"framer-motion\"\n *\n * export const Component = () => {\n *   const isPresent = useIsPresent()\n *\n *   useEffect(() => {\n *     !isPresent && console.log(\"I've been removed!\")\n *   }, [isPresent])\n *\n *   return <div />\n * }\n * ```\n *\n * @public\n */\nfunction useIsPresent() {\n    return isPresent(useContext(PresenceContext));\n}\nfunction isPresent(context) {\n    return context === null ? true : context.isPresent;\n}\n\nexport { isPresent, useIsPresent, usePresence };\n","import { circOut } from '../../easing/circ.mjs';\nimport { progress } from '../../utils/progress.mjs';\nimport { mix } from '../../utils/mix.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { percent, px } from '../../value/types/numbers/units.mjs';\n\nconst borders = [\"TopLeft\", \"TopRight\", \"BottomLeft\", \"BottomRight\"];\nconst numBorders = borders.length;\nconst asNumber = (value) => typeof value === \"string\" ? parseFloat(value) : value;\nconst isPx = (value) => typeof value === \"number\" || px.test(value);\nfunction mixValues(target, follow, lead, progress, shouldCrossfadeOpacity, isOnlyMember) {\n    if (shouldCrossfadeOpacity) {\n        target.opacity = mix(0, \n        // TODO Reinstate this if only child\n        lead.opacity !== undefined ? lead.opacity : 1, easeCrossfadeIn(progress));\n        target.opacityExit = mix(follow.opacity !== undefined ? follow.opacity : 1, 0, easeCrossfadeOut(progress));\n    }\n    else if (isOnlyMember) {\n        target.opacity = mix(follow.opacity !== undefined ? follow.opacity : 1, lead.opacity !== undefined ? lead.opacity : 1, progress);\n    }\n    /**\n     * Mix border radius\n     */\n    for (let i = 0; i < numBorders; i++) {\n        const borderLabel = `border${borders[i]}Radius`;\n        let followRadius = getRadius(follow, borderLabel);\n        let leadRadius = getRadius(lead, borderLabel);\n        if (followRadius === undefined && leadRadius === undefined)\n            continue;\n        followRadius || (followRadius = 0);\n        leadRadius || (leadRadius = 0);\n        const canMix = followRadius === 0 ||\n            leadRadius === 0 ||\n            isPx(followRadius) === isPx(leadRadius);\n        if (canMix) {\n            target[borderLabel] = Math.max(mix(asNumber(followRadius), asNumber(leadRadius), progress), 0);\n            if (percent.test(leadRadius) || percent.test(followRadius)) {\n                target[borderLabel] += \"%\";\n            }\n        }\n        else {\n            target[borderLabel] = leadRadius;\n        }\n    }\n    /**\n     * Mix rotation\n     */\n    if (follow.rotate || lead.rotate) {\n        target.rotate = mix(follow.rotate || 0, lead.rotate || 0, progress);\n    }\n}\nfunction getRadius(values, radiusName) {\n    return values[radiusName] !== undefined\n        ? values[radiusName]\n        : values.borderRadius;\n}\n// /**\n//  * We only want to mix the background color if there's a follow element\n//  * that we're not crossfading opacity between. For instance with switch\n//  * AnimateSharedLayout animations, this helps the illusion of a continuous\n//  * element being animated but also cuts down on the number of paints triggered\n//  * for elements where opacity is doing that work for us.\n//  */\n// if (\n//     !hasFollowElement &&\n//     latestLeadValues.backgroundColor &&\n//     latestFollowValues.backgroundColor\n// ) {\n//     /**\n//      * This isn't ideal performance-wise as mixColor is creating a new function every frame.\n//      * We could probably create a mixer that runs at the start of the animation but\n//      * the idea behind the crossfader is that it runs dynamically between two potentially\n//      * changing targets (ie opacity or borderRadius may be animating independently via variants)\n//      */\n//     leadState.backgroundColor = followState.backgroundColor = mixColor(\n//         latestFollowValues.backgroundColor as string,\n//         latestLeadValues.backgroundColor as string\n//     )(p)\n// }\nconst easeCrossfadeIn = compress(0, 0.5, circOut);\nconst easeCrossfadeOut = compress(0.5, 0.95, noop);\nfunction compress(min, max, easing) {\n    return (p) => {\n        // Could replace ifs with clamp\n        if (p < min)\n            return 0;\n        if (p > max)\n            return 1;\n        return easing(progress(min, max, p));\n    };\n}\n\nexport { mixValues };\n","/**\n * Reset an axis to the provided origin box.\n *\n * This is a mutative operation.\n */\nfunction copyAxisInto(axis, originAxis) {\n    axis.min = originAxis.min;\n    axis.max = originAxis.max;\n}\n/**\n * Reset a box to the provided origin box.\n *\n * This is a mutative operation.\n */\nfunction copyBoxInto(box, originBox) {\n    copyAxisInto(box.x, originBox.x);\n    copyAxisInto(box.y, originBox.y);\n}\n\nexport { copyAxisInto, copyBoxInto };\n","import { mix } from '../../utils/mix.mjs';\nimport { percent } from '../../value/types/numbers/units.mjs';\nimport { scalePoint } from './delta-apply.mjs';\n\n/**\n * Remove a delta from a point. This is essentially the steps of applyPointDelta in reverse\n */\nfunction removePointDelta(point, translate, scale, originPoint, boxScale) {\n    point -= translate;\n    point = scalePoint(point, 1 / scale, originPoint);\n    if (boxScale !== undefined) {\n        point = scalePoint(point, 1 / boxScale, originPoint);\n    }\n    return point;\n}\n/**\n * Remove a delta from an axis. This is essentially the steps of applyAxisDelta in reverse\n */\nfunction removeAxisDelta(axis, translate = 0, scale = 1, origin = 0.5, boxScale, originAxis = axis, sourceAxis = axis) {\n    if (percent.test(translate)) {\n        translate = parseFloat(translate);\n        const relativeProgress = mix(sourceAxis.min, sourceAxis.max, translate / 100);\n        translate = relativeProgress - sourceAxis.min;\n    }\n    if (typeof translate !== \"number\")\n        return;\n    let originPoint = mix(originAxis.min, originAxis.max, origin);\n    if (axis === originAxis)\n        originPoint -= translate;\n    axis.min = removePointDelta(axis.min, translate, scale, originPoint, boxScale);\n    axis.max = removePointDelta(axis.max, translate, scale, originPoint, boxScale);\n}\n/**\n * Remove a transforms from an axis. This is essentially the steps of applyAxisTransforms in reverse\n * and acts as a bridge between motion values and removeAxisDelta\n */\nfunction removeAxisTransforms(axis, transforms, [key, scaleKey, originKey], origin, sourceAxis) {\n    removeAxisDelta(axis, transforms[key], transforms[scaleKey], transforms[originKey], transforms.scale, origin, sourceAxis);\n}\n/**\n * The names of the motion values we want to apply as translation, scale and origin.\n */\nconst xKeys = [\"x\", \"scaleX\", \"originX\"];\nconst yKeys = [\"y\", \"scaleY\", \"originY\"];\n/**\n * Remove a transforms from an box. This is essentially the steps of applyAxisBox in reverse\n * and acts as a bridge between motion values and removeAxisDelta\n */\nfunction removeBoxTransforms(box, transforms, originBox, sourceBox) {\n    removeAxisTransforms(box.x, transforms, xKeys, originBox ? originBox.x : undefined, sourceBox ? sourceBox.x : undefined);\n    removeAxisTransforms(box.y, transforms, yKeys, originBox ? originBox.y : undefined, sourceBox ? sourceBox.y : undefined);\n}\n\nexport { removeAxisDelta, removeAxisTransforms, removeBoxTransforms, removePointDelta };\n","import { calcLength } from './delta-calc.mjs';\n\nfunction isAxisDeltaZero(delta) {\n    return delta.translate === 0 && delta.scale === 1;\n}\nfunction isDeltaZero(delta) {\n    return isAxisDeltaZero(delta.x) && isAxisDeltaZero(delta.y);\n}\nfunction boxEquals(a, b) {\n    return (a.x.min === b.x.min &&\n        a.x.max === b.x.max &&\n        a.y.min === b.y.min &&\n        a.y.max === b.y.max);\n}\nfunction boxEqualsRounded(a, b) {\n    return (Math.round(a.x.min) === Math.round(b.x.min) &&\n        Math.round(a.x.max) === Math.round(b.x.max) &&\n        Math.round(a.y.min) === Math.round(b.y.min) &&\n        Math.round(a.y.max) === Math.round(b.y.max));\n}\nfunction aspectRatio(box) {\n    return calcLength(box.x) / calcLength(box.y);\n}\n\nexport { aspectRatio, boxEquals, boxEqualsRounded, isDeltaZero };\n","import { addUniqueItem, removeItem } from '../../utils/array.mjs';\n\nclass NodeStack {\n    constructor() {\n        this.members = [];\n    }\n    add(node) {\n        addUniqueItem(this.members, node);\n        node.scheduleRender();\n    }\n    remove(node) {\n        removeItem(this.members, node);\n        if (node === this.prevLead) {\n            this.prevLead = undefined;\n        }\n        if (node === this.lead) {\n            const prevLead = this.members[this.members.length - 1];\n            if (prevLead) {\n                this.promote(prevLead);\n            }\n        }\n    }\n    relegate(node) {\n        const indexOfNode = this.members.findIndex((member) => node === member);\n        if (indexOfNode === 0)\n            return false;\n        /**\n         * Find the next projection node that is present\n         */\n        let prevLead;\n        for (let i = indexOfNode; i >= 0; i--) {\n            const member = this.members[i];\n            if (member.isPresent !== false) {\n                prevLead = member;\n                break;\n            }\n        }\n        if (prevLead) {\n            this.promote(prevLead);\n            return true;\n        }\n        else {\n            return false;\n        }\n    }\n    promote(node, preserveFollowOpacity) {\n        const prevLead = this.lead;\n        if (node === prevLead)\n            return;\n        this.prevLead = prevLead;\n        this.lead = node;\n        node.show();\n        if (prevLead) {\n            prevLead.instance && prevLead.scheduleRender();\n            node.scheduleRender();\n            node.resumeFrom = prevLead;\n            if (preserveFollowOpacity) {\n                node.resumeFrom.preserveOpacity = true;\n            }\n            if (prevLead.snapshot) {\n                node.snapshot = prevLead.snapshot;\n                node.snapshot.latestValues =\n                    prevLead.animationValues || prevLead.latestValues;\n            }\n            if (node.root && node.root.isUpdating) {\n                node.isLayoutDirty = true;\n            }\n            const { crossfade } = node.options;\n            if (crossfade === false) {\n                prevLead.hide();\n            }\n            /**\n             * TODO:\n             *   - Test border radius when previous node was deleted\n             *   - boxShadow mixing\n             *   - Shared between element A in scrolled container and element B (scroll stays the same or changes)\n             *   - Shared between element A in transformed container and element B (transform stays the same or changes)\n             *   - Shared between element A in scrolled page and element B (scroll stays the same or changes)\n             * ---\n             *   - Crossfade opacity of root nodes\n             *   - layoutId changes after animation\n             *   - layoutId changes mid animation\n             */\n        }\n    }\n    exitAnimationComplete() {\n        this.members.forEach((node) => {\n            const { options, resumingFrom } = node;\n            options.onExitComplete && options.onExitComplete();\n            if (resumingFrom) {\n                resumingFrom.options.onExitComplete &&\n                    resumingFrom.options.onExitComplete();\n            }\n        });\n    }\n    scheduleRender() {\n        this.members.forEach((node) => {\n            node.instance && node.scheduleRender(false);\n        });\n    }\n    /**\n     * Clear any leads that have been removed this render to prevent them from being\n     * used in future animations and to prevent memory leaks\n     */\n    removeLeadSnapshot() {\n        if (this.lead && this.lead.snapshot) {\n            this.lead.snapshot = undefined;\n        }\n    }\n}\n\nexport { NodeStack };\n","function buildProjectionTransform(delta, treeScale, latestTransform) {\n    let transform = \"\";\n    /**\n     * The translations we use to calculate are always relative to the viewport coordinate space.\n     * But when we apply scales, we also scale the coordinate space of an element and its children.\n     * For instance if we have a treeScale (the culmination of all parent scales) of 0.5 and we need\n     * to move an element 100 pixels, we actually need to move it 200 in within that scaled space.\n     */\n    const xTranslate = delta.x.translate / treeScale.x;\n    const yTranslate = delta.y.translate / treeScale.y;\n    if (xTranslate || yTranslate) {\n        transform = `translate3d(${xTranslate}px, ${yTranslate}px, 0) `;\n    }\n    /**\n     * Apply scale correction for the tree transform.\n     * This will apply scale to the screen-orientated axes.\n     */\n    if (treeScale.x !== 1 || treeScale.y !== 1) {\n        transform += `scale(${1 / treeScale.x}, ${1 / treeScale.y}) `;\n    }\n    if (latestTransform) {\n        const { rotate, rotateX, rotateY } = latestTransform;\n        if (rotate)\n            transform += `rotate(${rotate}deg) `;\n        if (rotateX)\n            transform += `rotateX(${rotateX}deg) `;\n        if (rotateY)\n            transform += `rotateY(${rotateY}deg) `;\n    }\n    /**\n     * Apply scale to match the size of the element to the size we want it.\n     * This will apply scale to the element-orientated axes.\n     */\n    const elementScaleX = delta.x.scale * treeScale.x;\n    const elementScaleY = delta.y.scale * treeScale.y;\n    if (elementScaleX !== 1 || elementScaleY !== 1) {\n        transform += `scale(${elementScaleX}, ${elementScaleY})`;\n    }\n    return transform || \"none\";\n}\n\nexport { buildProjectionTransform };\n","const compareByDepth = (a, b) => a.depth - b.depth;\n\nexport { compareByDepth };\n","import { addUniqueItem, removeItem } from '../../utils/array.mjs';\nimport { compareByDepth } from './compare-by-depth.mjs';\n\nclass FlatTree {\n    constructor() {\n        this.children = [];\n        this.isDirty = false;\n    }\n    add(child) {\n        addUniqueItem(this.children, child);\n        this.isDirty = true;\n    }\n    remove(child) {\n        removeItem(this.children, child);\n        this.isDirty = true;\n    }\n    forEach(callback) {\n        this.isDirty && this.children.sort(compareByDepth);\n        this.isDirty = false;\n        this.children.forEach(callback);\n    }\n}\n\nexport { FlatTree };\n","import { SubscriptionManager } from '../../utils/subscription-manager.mjs';\nimport { mixValues } from '../animation/mix-values.mjs';\nimport { copyBoxInto } from '../geometry/copy.mjs';\nimport { translateAxis, transformBox, applyBoxDelta, applyTreeDeltas } from '../geometry/delta-apply.mjs';\nimport { calcRelativePosition, calcRelativeBox, calcBoxDelta, calcLength, isNear } from '../geometry/delta-calc.mjs';\nimport { removeBoxTransforms } from '../geometry/delta-remove.mjs';\nimport { createBox, createDelta } from '../geometry/models.mjs';\nimport { getValueTransition } from '../../animation/utils/transitions.mjs';\nimport { boxEqualsRounded, isDeltaZero, aspectRatio, boxEquals } from '../geometry/utils.mjs';\nimport { NodeStack } from '../shared/stack.mjs';\nimport { scaleCorrectors } from '../styles/scale-correction.mjs';\nimport { buildProjectionTransform } from '../styles/transform.mjs';\nimport { eachAxis } from '../utils/each-axis.mjs';\nimport { hasTransform, hasScale, has2DTranslate } from '../utils/has-transform.mjs';\nimport { FlatTree } from '../../render/utils/flat-tree.mjs';\nimport { resolveMotionValue } from '../../value/utils/resolve-motion-value.mjs';\nimport { globalProjectionState } from './state.mjs';\nimport { delay } from '../../utils/delay.mjs';\nimport { mix } from '../../utils/mix.mjs';\nimport { record } from '../../debug/record.mjs';\nimport { isSVGElement } from '../../render/dom/utils/is-svg-element.mjs';\nimport { animateSingleValue } from '../../animation/interfaces/single-value.mjs';\nimport { clamp } from '../../utils/clamp.mjs';\nimport { cancelFrame, frameData, steps, frame } from '../../frameloop/frame.mjs';\nimport { noop } from '../../utils/noop.mjs';\n\nconst transformAxes = [\"\", \"X\", \"Y\", \"Z\"];\nconst hiddenVisibility = { visibility: \"hidden\" };\n/**\n * We use 1000 as the animation target as 0-1000 maps better to pixels than 0-1\n * which has a noticeable difference in spring animations\n */\nconst animationTarget = 1000;\nlet id = 0;\n/**\n * Use a mutable data object for debug data so as to not create a new\n * object every frame.\n */\nconst projectionFrameData = {\n    type: \"projectionFrame\",\n    totalNodes: 0,\n    resolvedTargetDeltas: 0,\n    recalculatedProjection: 0,\n};\nfunction createProjectionNode({ attachResizeListener, defaultParent, measureScroll, checkIsScrollRoot, resetTransform, }) {\n    return class ProjectionNode {\n        constructor(latestValues = {}, parent = defaultParent === null || defaultParent === void 0 ? void 0 : defaultParent()) {\n            /**\n             * A unique ID generated for every projection node.\n             */\n            this.id = id++;\n            /**\n             * An id that represents a unique session instigated by startUpdate.\n             */\n            this.animationId = 0;\n            /**\n             * A Set containing all this component's children. This is used to iterate\n             * through the children.\n             *\n             * TODO: This could be faster to iterate as a flat array stored on the root node.\n             */\n            this.children = new Set();\n            /**\n             * Options for the node. We use this to configure what kind of layout animations\n             * we should perform (if any).\n             */\n            this.options = {};\n            /**\n             * We use this to detect when its safe to shut down part of a projection tree.\n             * We have to keep projecting children for scale correction and relative projection\n             * until all their parents stop performing layout animations.\n             */\n            this.isTreeAnimating = false;\n            this.isAnimationBlocked = false;\n            /**\n             * Flag to true if we think this layout has been changed. We can't always know this,\n             * currently we set it to true every time a component renders, or if it has a layoutDependency\n             * if that has changed between renders. Additionally, components can be grouped by LayoutGroup\n             * and if one node is dirtied, they all are.\n             */\n            this.isLayoutDirty = false;\n            /**\n             * Flag to true if we think the projection calculations for this node needs\n             * recalculating as a result of an updated transform or layout animation.\n             */\n            this.isProjectionDirty = false;\n            /**\n             * Flag to true if the layout *or* transform has changed. This then gets propagated\n             * throughout the projection tree, forcing any element below to recalculate on the next frame.\n             */\n            this.isSharedProjectionDirty = false;\n            /**\n             * Flag transform dirty. This gets propagated throughout the whole tree but is only\n             * respected by shared nodes.\n             */\n            this.isTransformDirty = false;\n            /**\n             * Block layout updates for instant layout transitions throughout the tree.\n             */\n            this.updateManuallyBlocked = false;\n            this.updateBlockedByResize = false;\n            /**\n             * Set to true between the start of the first `willUpdate` call and the end of the `didUpdate`\n             * call.\n             */\n            this.isUpdating = false;\n            /**\n             * If this is an SVG element we currently disable projection transforms\n             */\n            this.isSVG = false;\n            /**\n             * Flag to true (during promotion) if a node doing an instant layout transition needs to reset\n             * its projection styles.\n             */\n            this.needsReset = false;\n            /**\n             * Flags whether this node should have its transform reset prior to measuring.\n             */\n            this.shouldResetTransform = false;\n            /**\n             * An object representing the calculated contextual/accumulated/tree scale.\n             * This will be used to scale calculcated projection transforms, as these are\n             * calculated in screen-space but need to be scaled for elements to layoutly\n             * make it to their calculated destinations.\n             *\n             * TODO: Lazy-init\n             */\n            this.treeScale = { x: 1, y: 1 };\n            /**\n             *\n             */\n            this.eventHandlers = new Map();\n            this.hasTreeAnimated = false;\n            // Note: Currently only running on root node\n            this.updateScheduled = false;\n            this.projectionUpdateScheduled = false;\n            this.checkUpdateFailed = () => {\n                if (this.isUpdating) {\n                    this.isUpdating = false;\n                    this.clearAllSnapshots();\n                }\n            };\n            /**\n             * This is a multi-step process as shared nodes might be of different depths. Nodes\n             * are sorted by depth order, so we need to resolve the entire tree before moving to\n             * the next step.\n             */\n            this.updateProjection = () => {\n                this.projectionUpdateScheduled = false;\n                /**\n                 * Reset debug counts. Manually resetting rather than creating a new\n                 * object each frame.\n                 */\n                projectionFrameData.totalNodes =\n                    projectionFrameData.resolvedTargetDeltas =\n                        projectionFrameData.recalculatedProjection =\n                            0;\n                this.nodes.forEach(propagateDirtyNodes);\n                this.nodes.forEach(resolveTargetDelta);\n                this.nodes.forEach(calcProjection);\n                this.nodes.forEach(cleanDirtyNodes);\n                record(projectionFrameData);\n            };\n            this.hasProjected = false;\n            this.isVisible = true;\n            this.animationProgress = 0;\n            /**\n             * Shared layout\n             */\n            // TODO Only running on root node\n            this.sharedNodes = new Map();\n            this.latestValues = latestValues;\n            this.root = parent ? parent.root || parent : this;\n            this.path = parent ? [...parent.path, parent] : [];\n            this.parent = parent;\n            this.depth = parent ? parent.depth + 1 : 0;\n            for (let i = 0; i < this.path.length; i++) {\n                this.path[i].shouldResetTransform = true;\n            }\n            if (this.root === this)\n                this.nodes = new FlatTree();\n        }\n        addEventListener(name, handler) {\n            if (!this.eventHandlers.has(name)) {\n                this.eventHandlers.set(name, new SubscriptionManager());\n            }\n            return this.eventHandlers.get(name).add(handler);\n        }\n        notifyListeners(name, ...args) {\n            const subscriptionManager = this.eventHandlers.get(name);\n            subscriptionManager && subscriptionManager.notify(...args);\n        }\n        hasListeners(name) {\n            return this.eventHandlers.has(name);\n        }\n        /**\n         * Lifecycles\n         */\n        mount(instance, isLayoutDirty = this.root.hasTreeAnimated) {\n            if (this.instance)\n                return;\n            this.isSVG = isSVGElement(instance);\n            this.instance = instance;\n            const { layoutId, layout, visualElement } = this.options;\n            if (visualElement && !visualElement.current) {\n                visualElement.mount(instance);\n            }\n            this.root.nodes.add(this);\n            this.parent && this.parent.children.add(this);\n            if (isLayoutDirty && (layout || layoutId)) {\n                this.isLayoutDirty = true;\n            }\n            if (attachResizeListener) {\n                let cancelDelay;\n                const resizeUnblockUpdate = () => (this.root.updateBlockedByResize = false);\n                attachResizeListener(instance, () => {\n                    this.root.updateBlockedByResize = true;\n                    cancelDelay && cancelDelay();\n                    cancelDelay = delay(resizeUnblockUpdate, 250);\n                    if (globalProjectionState.hasAnimatedSinceResize) {\n                        globalProjectionState.hasAnimatedSinceResize = false;\n                        this.nodes.forEach(finishAnimation);\n                    }\n                });\n            }\n            if (layoutId) {\n                this.root.registerSharedNode(layoutId, this);\n            }\n            // Only register the handler if it requires layout animation\n            if (this.options.animate !== false &&\n                visualElement &&\n                (layoutId || layout)) {\n                this.addEventListener(\"didUpdate\", ({ delta, hasLayoutChanged, hasRelativeTargetChanged, layout: newLayout, }) => {\n                    if (this.isTreeAnimationBlocked()) {\n                        this.target = undefined;\n                        this.relativeTarget = undefined;\n                        return;\n                    }\n                    // TODO: Check here if an animation exists\n                    const layoutTransition = this.options.transition ||\n                        visualElement.getDefaultTransition() ||\n                        defaultLayoutTransition;\n                    const { onLayoutAnimationStart, onLayoutAnimationComplete, } = visualElement.getProps();\n                    /**\n                     * The target layout of the element might stay the same,\n                     * but its position relative to its parent has changed.\n                     */\n                    const targetChanged = !this.targetLayout ||\n                        !boxEqualsRounded(this.targetLayout, newLayout) ||\n                        hasRelativeTargetChanged;\n                    /**\n                     * If the layout hasn't seemed to have changed, it might be that the\n                     * element is visually in the same place in the document but its position\n                     * relative to its parent has indeed changed. So here we check for that.\n                     */\n                    const hasOnlyRelativeTargetChanged = !hasLayoutChanged && hasRelativeTargetChanged;\n                    if (this.options.layoutRoot ||\n                        (this.resumeFrom && this.resumeFrom.instance) ||\n                        hasOnlyRelativeTargetChanged ||\n                        (hasLayoutChanged &&\n                            (targetChanged || !this.currentAnimation))) {\n                        if (this.resumeFrom) {\n                            this.resumingFrom = this.resumeFrom;\n                            this.resumingFrom.resumingFrom = undefined;\n                        }\n                        this.setAnimationOrigin(delta, hasOnlyRelativeTargetChanged);\n                        const animationOptions = {\n                            ...getValueTransition(layoutTransition, \"layout\"),\n                            onPlay: onLayoutAnimationStart,\n                            onComplete: onLayoutAnimationComplete,\n                        };\n                        if (visualElement.shouldReduceMotion ||\n                            this.options.layoutRoot) {\n                            animationOptions.delay = 0;\n                            animationOptions.type = false;\n                        }\n                        this.startAnimation(animationOptions);\n                    }\n                    else {\n                        /**\n                         * If the layout hasn't changed and we have an animation that hasn't started yet,\n                         * finish it immediately. Otherwise it will be animating from a location\n                         * that was probably never commited to screen and look like a jumpy box.\n                         */\n                        if (!hasLayoutChanged) {\n                            finishAnimation(this);\n                        }\n                        if (this.isLead() && this.options.onExitComplete) {\n                            this.options.onExitComplete();\n                        }\n                    }\n                    this.targetLayout = newLayout;\n                });\n            }\n        }\n        unmount() {\n            this.options.layoutId && this.willUpdate();\n            this.root.nodes.remove(this);\n            const stack = this.getStack();\n            stack && stack.remove(this);\n            this.parent && this.parent.children.delete(this);\n            this.instance = undefined;\n            cancelFrame(this.updateProjection);\n        }\n        // only on the root\n        blockUpdate() {\n            this.updateManuallyBlocked = true;\n        }\n        unblockUpdate() {\n            this.updateManuallyBlocked = false;\n        }\n        isUpdateBlocked() {\n            return this.updateManuallyBlocked || this.updateBlockedByResize;\n        }\n        isTreeAnimationBlocked() {\n            return (this.isAnimationBlocked ||\n                (this.parent && this.parent.isTreeAnimationBlocked()) ||\n                false);\n        }\n        // Note: currently only running on root node\n        startUpdate() {\n            if (this.isUpdateBlocked())\n                return;\n            this.isUpdating = true;\n            this.nodes && this.nodes.forEach(resetRotation);\n            this.animationId++;\n        }\n        getTransformTemplate() {\n            const { visualElement } = this.options;\n            return visualElement && visualElement.getProps().transformTemplate;\n        }\n        willUpdate(shouldNotifyListeners = true) {\n            this.root.hasTreeAnimated = true;\n            if (this.root.isUpdateBlocked()) {\n                this.options.onExitComplete && this.options.onExitComplete();\n                return;\n            }\n            !this.root.isUpdating && this.root.startUpdate();\n            if (this.isLayoutDirty)\n                return;\n            this.isLayoutDirty = true;\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                node.shouldResetTransform = true;\n                node.updateScroll(\"snapshot\");\n                if (node.options.layoutRoot) {\n                    node.willUpdate(false);\n                }\n            }\n            const { layoutId, layout } = this.options;\n            if (layoutId === undefined && !layout)\n                return;\n            const transformTemplate = this.getTransformTemplate();\n            this.prevTransformTemplateValue = transformTemplate\n                ? transformTemplate(this.latestValues, \"\")\n                : undefined;\n            this.updateSnapshot();\n            shouldNotifyListeners && this.notifyListeners(\"willUpdate\");\n        }\n        update() {\n            this.updateScheduled = false;\n            const updateWasBlocked = this.isUpdateBlocked();\n            // When doing an instant transition, we skip the layout update,\n            // but should still clean up the measurements so that the next\n            // snapshot could be taken correctly.\n            if (updateWasBlocked) {\n                this.unblockUpdate();\n                this.clearAllSnapshots();\n                this.nodes.forEach(clearMeasurements);\n                return;\n            }\n            if (!this.isUpdating) {\n                this.nodes.forEach(clearIsLayoutDirty);\n            }\n            this.isUpdating = false;\n            /**\n             * Write\n             */\n            this.nodes.forEach(resetTransformStyle);\n            /**\n             * Read ==================\n             */\n            // Update layout measurements of updated children\n            this.nodes.forEach(updateLayout);\n            /**\n             * Write\n             */\n            // Notify listeners that the layout is updated\n            this.nodes.forEach(notifyLayoutUpdate);\n            this.clearAllSnapshots();\n            /**\n             * Manually flush any pending updates. Ideally\n             * we could leave this to the following requestAnimationFrame but this seems\n             * to leave a flash of incorrectly styled content.\n             */\n            const now = performance.now();\n            frameData.delta = clamp(0, 1000 / 60, now - frameData.timestamp);\n            frameData.timestamp = now;\n            frameData.isProcessing = true;\n            steps.update.process(frameData);\n            steps.preRender.process(frameData);\n            steps.render.process(frameData);\n            frameData.isProcessing = false;\n        }\n        didUpdate() {\n            if (!this.updateScheduled) {\n                this.updateScheduled = true;\n                queueMicrotask(() => this.update());\n            }\n        }\n        clearAllSnapshots() {\n            this.nodes.forEach(clearSnapshot);\n            this.sharedNodes.forEach(removeLeadSnapshots);\n        }\n        scheduleUpdateProjection() {\n            if (!this.projectionUpdateScheduled) {\n                this.projectionUpdateScheduled = true;\n                frame.preRender(this.updateProjection, false, true);\n            }\n        }\n        scheduleCheckAfterUnmount() {\n            /**\n             * If the unmounting node is in a layoutGroup and did trigger a willUpdate,\n             * we manually call didUpdate to give a chance to the siblings to animate.\n             * Otherwise, cleanup all snapshots to prevents future nodes from reusing them.\n             */\n            frame.postRender(() => {\n                if (this.isLayoutDirty) {\n                    this.root.didUpdate();\n                }\n                else {\n                    this.root.checkUpdateFailed();\n                }\n            });\n        }\n        /**\n         * Update measurements\n         */\n        updateSnapshot() {\n            if (this.snapshot || !this.instance)\n                return;\n            this.snapshot = this.measure();\n        }\n        updateLayout() {\n            if (!this.instance)\n                return;\n            // TODO: Incorporate into a forwarded scroll offset\n            this.updateScroll();\n            if (!(this.options.alwaysMeasureLayout && this.isLead()) &&\n                !this.isLayoutDirty) {\n                return;\n            }\n            /**\n             * When a node is mounted, it simply resumes from the prevLead's\n             * snapshot instead of taking a new one, but the ancestors scroll\n             * might have updated while the prevLead is unmounted. We need to\n             * update the scroll again to make sure the layout we measure is\n             * up to date.\n             */\n            if (this.resumeFrom && !this.resumeFrom.instance) {\n                for (let i = 0; i < this.path.length; i++) {\n                    const node = this.path[i];\n                    node.updateScroll();\n                }\n            }\n            const prevLayout = this.layout;\n            this.layout = this.measure(false);\n            this.layoutCorrected = createBox();\n            this.isLayoutDirty = false;\n            this.projectionDelta = undefined;\n            this.notifyListeners(\"measure\", this.layout.layoutBox);\n            const { visualElement } = this.options;\n            visualElement &&\n                visualElement.notify(\"LayoutMeasure\", this.layout.layoutBox, prevLayout ? prevLayout.layoutBox : undefined);\n        }\n        updateScroll(phase = \"measure\") {\n            let needsMeasurement = Boolean(this.options.layoutScroll && this.instance);\n            if (this.scroll &&\n                this.scroll.animationId === this.root.animationId &&\n                this.scroll.phase === phase) {\n                needsMeasurement = false;\n            }\n            if (needsMeasurement) {\n                this.scroll = {\n                    animationId: this.root.animationId,\n                    phase,\n                    isRoot: checkIsScrollRoot(this.instance),\n                    offset: measureScroll(this.instance),\n                };\n            }\n        }\n        resetTransform() {\n            if (!resetTransform)\n                return;\n            const isResetRequested = this.isLayoutDirty || this.shouldResetTransform;\n            const hasProjection = this.projectionDelta && !isDeltaZero(this.projectionDelta);\n            const transformTemplate = this.getTransformTemplate();\n            const transformTemplateValue = transformTemplate\n                ? transformTemplate(this.latestValues, \"\")\n                : undefined;\n            const transformTemplateHasChanged = transformTemplateValue !== this.prevTransformTemplateValue;\n            if (isResetRequested &&\n                (hasProjection ||\n                    hasTransform(this.latestValues) ||\n                    transformTemplateHasChanged)) {\n                resetTransform(this.instance, transformTemplateValue);\n                this.shouldResetTransform = false;\n                this.scheduleRender();\n            }\n        }\n        measure(removeTransform = true) {\n            const pageBox = this.measurePageBox();\n            let layoutBox = this.removeElementScroll(pageBox);\n            /**\n             * Measurements taken during the pre-render stage\n             * still have transforms applied so we remove them\n             * via calculation.\n             */\n            if (removeTransform) {\n                layoutBox = this.removeTransform(layoutBox);\n            }\n            roundBox(layoutBox);\n            return {\n                animationId: this.root.animationId,\n                measuredBox: pageBox,\n                layoutBox,\n                latestValues: {},\n                source: this.id,\n            };\n        }\n        measurePageBox() {\n            const { visualElement } = this.options;\n            if (!visualElement)\n                return createBox();\n            const box = visualElement.measureViewportBox();\n            // Remove viewport scroll to give page-relative coordinates\n            const { scroll } = this.root;\n            if (scroll) {\n                translateAxis(box.x, scroll.offset.x);\n                translateAxis(box.y, scroll.offset.y);\n            }\n            return box;\n        }\n        removeElementScroll(box) {\n            const boxWithoutScroll = createBox();\n            copyBoxInto(boxWithoutScroll, box);\n            /**\n             * Performance TODO: Keep a cumulative scroll offset down the tree\n             * rather than loop back up the path.\n             */\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                const { scroll, options } = node;\n                if (node !== this.root && scroll && options.layoutScroll) {\n                    /**\n                     * If this is a new scroll root, we want to remove all previous scrolls\n                     * from the viewport box.\n                     */\n                    if (scroll.isRoot) {\n                        copyBoxInto(boxWithoutScroll, box);\n                        const { scroll: rootScroll } = this.root;\n                        /**\n                         * Undo the application of page scroll that was originally added\n                         * to the measured bounding box.\n                         */\n                        if (rootScroll) {\n                            translateAxis(boxWithoutScroll.x, -rootScroll.offset.x);\n                            translateAxis(boxWithoutScroll.y, -rootScroll.offset.y);\n                        }\n                    }\n                    translateAxis(boxWithoutScroll.x, scroll.offset.x);\n                    translateAxis(boxWithoutScroll.y, scroll.offset.y);\n                }\n            }\n            return boxWithoutScroll;\n        }\n        applyTransform(box, transformOnly = false) {\n            const withTransforms = createBox();\n            copyBoxInto(withTransforms, box);\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                if (!transformOnly &&\n                    node.options.layoutScroll &&\n                    node.scroll &&\n                    node !== node.root) {\n                    transformBox(withTransforms, {\n                        x: -node.scroll.offset.x,\n                        y: -node.scroll.offset.y,\n                    });\n                }\n                if (!hasTransform(node.latestValues))\n                    continue;\n                transformBox(withTransforms, node.latestValues);\n            }\n            if (hasTransform(this.latestValues)) {\n                transformBox(withTransforms, this.latestValues);\n            }\n            return withTransforms;\n        }\n        removeTransform(box) {\n            const boxWithoutTransform = createBox();\n            copyBoxInto(boxWithoutTransform, box);\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                if (!node.instance)\n                    continue;\n                if (!hasTransform(node.latestValues))\n                    continue;\n                hasScale(node.latestValues) && node.updateSnapshot();\n                const sourceBox = createBox();\n                const nodeBox = node.measurePageBox();\n                copyBoxInto(sourceBox, nodeBox);\n                removeBoxTransforms(boxWithoutTransform, node.latestValues, node.snapshot ? node.snapshot.layoutBox : undefined, sourceBox);\n            }\n            if (hasTransform(this.latestValues)) {\n                removeBoxTransforms(boxWithoutTransform, this.latestValues);\n            }\n            return boxWithoutTransform;\n        }\n        setTargetDelta(delta) {\n            this.targetDelta = delta;\n            this.root.scheduleUpdateProjection();\n            this.isProjectionDirty = true;\n        }\n        setOptions(options) {\n            this.options = {\n                ...this.options,\n                ...options,\n                crossfade: options.crossfade !== undefined ? options.crossfade : true,\n            };\n        }\n        clearMeasurements() {\n            this.scroll = undefined;\n            this.layout = undefined;\n            this.snapshot = undefined;\n            this.prevTransformTemplateValue = undefined;\n            this.targetDelta = undefined;\n            this.target = undefined;\n            this.isLayoutDirty = false;\n        }\n        forceRelativeParentToResolveTarget() {\n            if (!this.relativeParent)\n                return;\n            /**\n             * If the parent target isn't up-to-date, force it to update.\n             * This is an unfortunate de-optimisation as it means any updating relative\n             * projection will cause all the relative parents to recalculate back\n             * up the tree.\n             */\n            if (this.relativeParent.resolvedRelativeTargetAt !==\n                frameData.timestamp) {\n                this.relativeParent.resolveTargetDelta(true);\n            }\n        }\n        resolveTargetDelta(forceRecalculation = false) {\n            var _a;\n            /**\n             * Once the dirty status of nodes has been spread through the tree, we also\n             * need to check if we have a shared node of a different depth that has itself\n             * been dirtied.\n             */\n            const lead = this.getLead();\n            this.isProjectionDirty || (this.isProjectionDirty = lead.isProjectionDirty);\n            this.isTransformDirty || (this.isTransformDirty = lead.isTransformDirty);\n            this.isSharedProjectionDirty || (this.isSharedProjectionDirty = lead.isSharedProjectionDirty);\n            const isShared = Boolean(this.resumingFrom) || this !== lead;\n            /**\n             * We don't use transform for this step of processing so we don't\n             * need to check whether any nodes have changed transform.\n             */\n            const canSkip = !(forceRecalculation ||\n                (isShared && this.isSharedProjectionDirty) ||\n                this.isProjectionDirty ||\n                ((_a = this.parent) === null || _a === void 0 ? void 0 : _a.isProjectionDirty) ||\n                this.attemptToResolveRelativeTarget);\n            if (canSkip)\n                return;\n            const { layout, layoutId } = this.options;\n            /**\n             * If we have no layout, we can't perform projection, so early return\n             */\n            if (!this.layout || !(layout || layoutId))\n                return;\n            this.resolvedRelativeTargetAt = frameData.timestamp;\n            /**\n             * If we don't have a targetDelta but do have a layout, we can attempt to resolve\n             * a relativeParent. This will allow a component to perform scale correction\n             * even if no animation has started.\n             */\n            // TODO If this is unsuccessful this currently happens every frame\n            if (!this.targetDelta && !this.relativeTarget) {\n                // TODO: This is a semi-repetition of further down this function, make DRY\n                const relativeParent = this.getClosestProjectingParent();\n                if (relativeParent &&\n                    relativeParent.layout &&\n                    this.animationProgress !== 1) {\n                    this.relativeParent = relativeParent;\n                    this.forceRelativeParentToResolveTarget();\n                    this.relativeTarget = createBox();\n                    this.relativeTargetOrigin = createBox();\n                    calcRelativePosition(this.relativeTargetOrigin, this.layout.layoutBox, relativeParent.layout.layoutBox);\n                    copyBoxInto(this.relativeTarget, this.relativeTargetOrigin);\n                }\n                else {\n                    this.relativeParent = this.relativeTarget = undefined;\n                }\n            }\n            /**\n             * If we have no relative target or no target delta our target isn't valid\n             * for this frame.\n             */\n            if (!this.relativeTarget && !this.targetDelta)\n                return;\n            /**\n             * Lazy-init target data structure\n             */\n            if (!this.target) {\n                this.target = createBox();\n                this.targetWithTransforms = createBox();\n            }\n            /**\n             * If we've got a relative box for this component, resolve it into a target relative to the parent.\n             */\n            if (this.relativeTarget &&\n                this.relativeTargetOrigin &&\n                this.relativeParent &&\n                this.relativeParent.target) {\n                this.forceRelativeParentToResolveTarget();\n                calcRelativeBox(this.target, this.relativeTarget, this.relativeParent.target);\n                /**\n                 * If we've only got a targetDelta, resolve it into a target\n                 */\n            }\n            else if (this.targetDelta) {\n                if (Boolean(this.resumingFrom)) {\n                    // TODO: This is creating a new object every frame\n                    this.target = this.applyTransform(this.layout.layoutBox);\n                }\n                else {\n                    copyBoxInto(this.target, this.layout.layoutBox);\n                }\n                applyBoxDelta(this.target, this.targetDelta);\n            }\n            else {\n                /**\n                 * If no target, use own layout as target\n                 */\n                copyBoxInto(this.target, this.layout.layoutBox);\n            }\n            /**\n             * If we've been told to attempt to resolve a relative target, do so.\n             */\n            if (this.attemptToResolveRelativeTarget) {\n                this.attemptToResolveRelativeTarget = false;\n                const relativeParent = this.getClosestProjectingParent();\n                if (relativeParent &&\n                    Boolean(relativeParent.resumingFrom) ===\n                        Boolean(this.resumingFrom) &&\n                    !relativeParent.options.layoutScroll &&\n                    relativeParent.target &&\n                    this.animationProgress !== 1) {\n                    this.relativeParent = relativeParent;\n                    this.forceRelativeParentToResolveTarget();\n                    this.relativeTarget = createBox();\n                    this.relativeTargetOrigin = createBox();\n                    calcRelativePosition(this.relativeTargetOrigin, this.target, relativeParent.target);\n                    copyBoxInto(this.relativeTarget, this.relativeTargetOrigin);\n                }\n                else {\n                    this.relativeParent = this.relativeTarget = undefined;\n                }\n            }\n            /**\n             * Increase debug counter for resolved target deltas\n             */\n            projectionFrameData.resolvedTargetDeltas++;\n        }\n        getClosestProjectingParent() {\n            if (!this.parent ||\n                hasScale(this.parent.latestValues) ||\n                has2DTranslate(this.parent.latestValues)) {\n                return undefined;\n            }\n            if (this.parent.isProjecting()) {\n                return this.parent;\n            }\n            else {\n                return this.parent.getClosestProjectingParent();\n            }\n        }\n        isProjecting() {\n            return Boolean((this.relativeTarget ||\n                this.targetDelta ||\n                this.options.layoutRoot) &&\n                this.layout);\n        }\n        calcProjection() {\n            var _a;\n            const lead = this.getLead();\n            const isShared = Boolean(this.resumingFrom) || this !== lead;\n            let canSkip = true;\n            /**\n             * If this is a normal layout animation and neither this node nor its nearest projecting\n             * is dirty then we can't skip.\n             */\n            if (this.isProjectionDirty || ((_a = this.parent) === null || _a === void 0 ? void 0 : _a.isProjectionDirty)) {\n                canSkip = false;\n            }\n            /**\n             * If this is a shared layout animation and this node's shared projection is dirty then\n             * we can't skip.\n             */\n            if (isShared &&\n                (this.isSharedProjectionDirty || this.isTransformDirty)) {\n                canSkip = false;\n            }\n            /**\n             * If we have resolved the target this frame we must recalculate the\n             * projection to ensure it visually represents the internal calculations.\n             */\n            if (this.resolvedRelativeTargetAt === frameData.timestamp) {\n                canSkip = false;\n            }\n            if (canSkip)\n                return;\n            const { layout, layoutId } = this.options;\n            /**\n             * If this section of the tree isn't animating we can\n             * delete our target sources for the following frame.\n             */\n            this.isTreeAnimating = Boolean((this.parent && this.parent.isTreeAnimating) ||\n                this.currentAnimation ||\n                this.pendingAnimation);\n            if (!this.isTreeAnimating) {\n                this.targetDelta = this.relativeTarget = undefined;\n            }\n            if (!this.layout || !(layout || layoutId))\n                return;\n            /**\n             * Reset the corrected box with the latest values from box, as we're then going\n             * to perform mutative operations on it.\n             */\n            copyBoxInto(this.layoutCorrected, this.layout.layoutBox);\n            /**\n             * Record previous tree scales before updating.\n             */\n            const prevTreeScaleX = this.treeScale.x;\n            const prevTreeScaleY = this.treeScale.y;\n            /**\n             * Apply all the parent deltas to this box to produce the corrected box. This\n             * is the layout box, as it will appear on screen as a result of the transforms of its parents.\n             */\n            applyTreeDeltas(this.layoutCorrected, this.treeScale, this.path, isShared);\n            /**\n             * If this layer needs to perform scale correction but doesn't have a target,\n             * use the layout as the target.\n             */\n            if (lead.layout &&\n                !lead.target &&\n                (this.treeScale.x !== 1 || this.treeScale.y !== 1)) {\n                lead.target = lead.layout.layoutBox;\n            }\n            const { target } = lead;\n            if (!target) {\n                /**\n                 * If we don't have a target to project into, but we were previously\n                 * projecting, we want to remove the stored transform and schedule\n                 * a render to ensure the elements reflect the removed transform.\n                 */\n                if (this.projectionTransform) {\n                    this.projectionDelta = createDelta();\n                    this.projectionTransform = \"none\";\n                    this.scheduleRender();\n                }\n                return;\n            }\n            if (!this.projectionDelta) {\n                this.projectionDelta = createDelta();\n                this.projectionDeltaWithTransform = createDelta();\n            }\n            const prevProjectionTransform = this.projectionTransform;\n            /**\n             * Update the delta between the corrected box and the target box before user-set transforms were applied.\n             * This will allow us to calculate the corrected borderRadius and boxShadow to compensate\n             * for our layout reprojection, but still allow them to be scaled correctly by the user.\n             * It might be that to simplify this we may want to accept that user-set scale is also corrected\n             * and we wouldn't have to keep and calc both deltas, OR we could support a user setting\n             * to allow people to choose whether these styles are corrected based on just the\n             * layout reprojection or the final bounding box.\n             */\n            calcBoxDelta(this.projectionDelta, this.layoutCorrected, target, this.latestValues);\n            this.projectionTransform = buildProjectionTransform(this.projectionDelta, this.treeScale);\n            if (this.projectionTransform !== prevProjectionTransform ||\n                this.treeScale.x !== prevTreeScaleX ||\n                this.treeScale.y !== prevTreeScaleY) {\n                this.hasProjected = true;\n                this.scheduleRender();\n                this.notifyListeners(\"projectionUpdate\", target);\n            }\n            /**\n             * Increase debug counter for recalculated projections\n             */\n            projectionFrameData.recalculatedProjection++;\n        }\n        hide() {\n            this.isVisible = false;\n            // TODO: Schedule render\n        }\n        show() {\n            this.isVisible = true;\n            // TODO: Schedule render\n        }\n        scheduleRender(notifyAll = true) {\n            this.options.scheduleRender && this.options.scheduleRender();\n            if (notifyAll) {\n                const stack = this.getStack();\n                stack && stack.scheduleRender();\n            }\n            if (this.resumingFrom && !this.resumingFrom.instance) {\n                this.resumingFrom = undefined;\n            }\n        }\n        setAnimationOrigin(delta, hasOnlyRelativeTargetChanged = false) {\n            const snapshot = this.snapshot;\n            const snapshotLatestValues = snapshot\n                ? snapshot.latestValues\n                : {};\n            const mixedValues = { ...this.latestValues };\n            const targetDelta = createDelta();\n            if (!this.relativeParent ||\n                !this.relativeParent.options.layoutRoot) {\n                this.relativeTarget = this.relativeTargetOrigin = undefined;\n            }\n            this.attemptToResolveRelativeTarget = !hasOnlyRelativeTargetChanged;\n            const relativeLayout = createBox();\n            const snapshotSource = snapshot ? snapshot.source : undefined;\n            const layoutSource = this.layout ? this.layout.source : undefined;\n            const isSharedLayoutAnimation = snapshotSource !== layoutSource;\n            const stack = this.getStack();\n            const isOnlyMember = !stack || stack.members.length <= 1;\n            const shouldCrossfadeOpacity = Boolean(isSharedLayoutAnimation &&\n                !isOnlyMember &&\n                this.options.crossfade === true &&\n                !this.path.some(hasOpacityCrossfade));\n            this.animationProgress = 0;\n            let prevRelativeTarget;\n            this.mixTargetDelta = (latest) => {\n                const progress = latest / 1000;\n                mixAxisDelta(targetDelta.x, delta.x, progress);\n                mixAxisDelta(targetDelta.y, delta.y, progress);\n                this.setTargetDelta(targetDelta);\n                if (this.relativeTarget &&\n                    this.relativeTargetOrigin &&\n                    this.layout &&\n                    this.relativeParent &&\n                    this.relativeParent.layout) {\n                    calcRelativePosition(relativeLayout, this.layout.layoutBox, this.relativeParent.layout.layoutBox);\n                    mixBox(this.relativeTarget, this.relativeTargetOrigin, relativeLayout, progress);\n                    /**\n                     * If this is an unchanged relative target we can consider the\n                     * projection not dirty.\n                     */\n                    if (prevRelativeTarget &&\n                        boxEquals(this.relativeTarget, prevRelativeTarget)) {\n                        this.isProjectionDirty = false;\n                    }\n                    if (!prevRelativeTarget)\n                        prevRelativeTarget = createBox();\n                    copyBoxInto(prevRelativeTarget, this.relativeTarget);\n                }\n                if (isSharedLayoutAnimation) {\n                    this.animationValues = mixedValues;\n                    mixValues(mixedValues, snapshotLatestValues, this.latestValues, progress, shouldCrossfadeOpacity, isOnlyMember);\n                }\n                this.root.scheduleUpdateProjection();\n                this.scheduleRender();\n                this.animationProgress = progress;\n            };\n            this.mixTargetDelta(this.options.layoutRoot ? 1000 : 0);\n        }\n        startAnimation(options) {\n            this.notifyListeners(\"animationStart\");\n            this.currentAnimation && this.currentAnimation.stop();\n            if (this.resumingFrom && this.resumingFrom.currentAnimation) {\n                this.resumingFrom.currentAnimation.stop();\n            }\n            if (this.pendingAnimation) {\n                cancelFrame(this.pendingAnimation);\n                this.pendingAnimation = undefined;\n            }\n            /**\n             * Start the animation in the next frame to have a frame with progress 0,\n             * where the target is the same as when the animation started, so we can\n             * calculate the relative positions correctly for instant transitions.\n             */\n            this.pendingAnimation = frame.update(() => {\n                globalProjectionState.hasAnimatedSinceResize = true;\n                this.currentAnimation = animateSingleValue(0, animationTarget, {\n                    ...options,\n                    onUpdate: (latest) => {\n                        this.mixTargetDelta(latest);\n                        options.onUpdate && options.onUpdate(latest);\n                    },\n                    onComplete: () => {\n                        options.onComplete && options.onComplete();\n                        this.completeAnimation();\n                    },\n                });\n                if (this.resumingFrom) {\n                    this.resumingFrom.currentAnimation = this.currentAnimation;\n                }\n                this.pendingAnimation = undefined;\n            });\n        }\n        completeAnimation() {\n            if (this.resumingFrom) {\n                this.resumingFrom.currentAnimation = undefined;\n                this.resumingFrom.preserveOpacity = undefined;\n            }\n            const stack = this.getStack();\n            stack && stack.exitAnimationComplete();\n            this.resumingFrom =\n                this.currentAnimation =\n                    this.animationValues =\n                        undefined;\n            this.notifyListeners(\"animationComplete\");\n        }\n        finishAnimation() {\n            if (this.currentAnimation) {\n                this.mixTargetDelta && this.mixTargetDelta(animationTarget);\n                this.currentAnimation.stop();\n            }\n            this.completeAnimation();\n        }\n        applyTransformsToTarget() {\n            const lead = this.getLead();\n            let { targetWithTransforms, target, layout, latestValues } = lead;\n            if (!targetWithTransforms || !target || !layout)\n                return;\n            /**\n             * If we're only animating position, and this element isn't the lead element,\n             * then instead of projecting into the lead box we instead want to calculate\n             * a new target that aligns the two boxes but maintains the layout shape.\n             */\n            if (this !== lead &&\n                this.layout &&\n                layout &&\n                shouldAnimatePositionOnly(this.options.animationType, this.layout.layoutBox, layout.layoutBox)) {\n                target = this.target || createBox();\n                const xLength = calcLength(this.layout.layoutBox.x);\n                target.x.min = lead.target.x.min;\n                target.x.max = target.x.min + xLength;\n                const yLength = calcLength(this.layout.layoutBox.y);\n                target.y.min = lead.target.y.min;\n                target.y.max = target.y.min + yLength;\n            }\n            copyBoxInto(targetWithTransforms, target);\n            /**\n             * Apply the latest user-set transforms to the targetBox to produce the targetBoxFinal.\n             * This is the final box that we will then project into by calculating a transform delta and\n             * applying it to the corrected box.\n             */\n            transformBox(targetWithTransforms, latestValues);\n            /**\n             * Update the delta between the corrected box and the final target box, after\n             * user-set transforms are applied to it. This will be used by the renderer to\n             * create a transform style that will reproject the element from its layout layout\n             * into the desired bounding box.\n             */\n            calcBoxDelta(this.projectionDeltaWithTransform, this.layoutCorrected, targetWithTransforms, latestValues);\n        }\n        registerSharedNode(layoutId, node) {\n            if (!this.sharedNodes.has(layoutId)) {\n                this.sharedNodes.set(layoutId, new NodeStack());\n            }\n            const stack = this.sharedNodes.get(layoutId);\n            stack.add(node);\n            const config = node.options.initialPromotionConfig;\n            node.promote({\n                transition: config ? config.transition : undefined,\n                preserveFollowOpacity: config && config.shouldPreserveFollowOpacity\n                    ? config.shouldPreserveFollowOpacity(node)\n                    : undefined,\n            });\n        }\n        isLead() {\n            const stack = this.getStack();\n            return stack ? stack.lead === this : true;\n        }\n        getLead() {\n            var _a;\n            const { layoutId } = this.options;\n            return layoutId ? ((_a = this.getStack()) === null || _a === void 0 ? void 0 : _a.lead) || this : this;\n        }\n        getPrevLead() {\n            var _a;\n            const { layoutId } = this.options;\n            return layoutId ? (_a = this.getStack()) === null || _a === void 0 ? void 0 : _a.prevLead : undefined;\n        }\n        getStack() {\n            const { layoutId } = this.options;\n            if (layoutId)\n                return this.root.sharedNodes.get(layoutId);\n        }\n        promote({ needsReset, transition, preserveFollowOpacity, } = {}) {\n            const stack = this.getStack();\n            if (stack)\n                stack.promote(this, preserveFollowOpacity);\n            if (needsReset) {\n                this.projectionDelta = undefined;\n                this.needsReset = true;\n            }\n            if (transition)\n                this.setOptions({ transition });\n        }\n        relegate() {\n            const stack = this.getStack();\n            if (stack) {\n                return stack.relegate(this);\n            }\n            else {\n                return false;\n            }\n        }\n        resetRotation() {\n            const { visualElement } = this.options;\n            if (!visualElement)\n                return;\n            // If there's no detected rotation values, we can early return without a forced render.\n            let hasRotate = false;\n            /**\n             * An unrolled check for rotation values. Most elements don't have any rotation and\n             * skipping the nested loop and new object creation is 50% faster.\n             */\n            const { latestValues } = visualElement;\n            if (latestValues.rotate ||\n                latestValues.rotateX ||\n                latestValues.rotateY ||\n                latestValues.rotateZ) {\n                hasRotate = true;\n            }\n            // If there's no rotation values, we don't need to do any more.\n            if (!hasRotate)\n                return;\n            const resetValues = {};\n            // Check the rotate value of all axes and reset to 0\n            for (let i = 0; i < transformAxes.length; i++) {\n                const key = \"rotate\" + transformAxes[i];\n                // Record the rotation and then temporarily set it to 0\n                if (latestValues[key]) {\n                    resetValues[key] = latestValues[key];\n                    visualElement.setStaticValue(key, 0);\n                }\n            }\n            // Force a render of this element to apply the transform with all rotations\n            // set to 0.\n            visualElement.render();\n            // Put back all the values we reset\n            for (const key in resetValues) {\n                visualElement.setStaticValue(key, resetValues[key]);\n            }\n            // Schedule a render for the next frame. This ensures we won't visually\n            // see the element with the reset rotate value applied.\n            visualElement.scheduleRender();\n        }\n        getProjectionStyles(styleProp) {\n            var _a, _b;\n            if (!this.instance || this.isSVG)\n                return undefined;\n            if (!this.isVisible) {\n                return hiddenVisibility;\n            }\n            const styles = {\n                visibility: \"\",\n            };\n            const transformTemplate = this.getTransformTemplate();\n            if (this.needsReset) {\n                this.needsReset = false;\n                styles.opacity = \"\";\n                styles.pointerEvents =\n                    resolveMotionValue(styleProp === null || styleProp === void 0 ? void 0 : styleProp.pointerEvents) || \"\";\n                styles.transform = transformTemplate\n                    ? transformTemplate(this.latestValues, \"\")\n                    : \"none\";\n                return styles;\n            }\n            const lead = this.getLead();\n            if (!this.projectionDelta || !this.layout || !lead.target) {\n                const emptyStyles = {};\n                if (this.options.layoutId) {\n                    emptyStyles.opacity =\n                        this.latestValues.opacity !== undefined\n                            ? this.latestValues.opacity\n                            : 1;\n                    emptyStyles.pointerEvents =\n                        resolveMotionValue(styleProp === null || styleProp === void 0 ? void 0 : styleProp.pointerEvents) || \"\";\n                }\n                if (this.hasProjected && !hasTransform(this.latestValues)) {\n                    emptyStyles.transform = transformTemplate\n                        ? transformTemplate({}, \"\")\n                        : \"none\";\n                    this.hasProjected = false;\n                }\n                return emptyStyles;\n            }\n            const valuesToRender = lead.animationValues || lead.latestValues;\n            this.applyTransformsToTarget();\n            styles.transform = buildProjectionTransform(this.projectionDeltaWithTransform, this.treeScale, valuesToRender);\n            if (transformTemplate) {\n                styles.transform = transformTemplate(valuesToRender, styles.transform);\n            }\n            const { x, y } = this.projectionDelta;\n            styles.transformOrigin = `${x.origin * 100}% ${y.origin * 100}% 0`;\n            if (lead.animationValues) {\n                /**\n                 * If the lead component is animating, assign this either the entering/leaving\n                 * opacity\n                 */\n                styles.opacity =\n                    lead === this\n                        ? (_b = (_a = valuesToRender.opacity) !== null && _a !== void 0 ? _a : this.latestValues.opacity) !== null && _b !== void 0 ? _b : 1\n                        : this.preserveOpacity\n                            ? this.latestValues.opacity\n                            : valuesToRender.opacityExit;\n            }\n            else {\n                /**\n                 * Or we're not animating at all, set the lead component to its layout\n                 * opacity and other components to hidden.\n                 */\n                styles.opacity =\n                    lead === this\n                        ? valuesToRender.opacity !== undefined\n                            ? valuesToRender.opacity\n                            : \"\"\n                        : valuesToRender.opacityExit !== undefined\n                            ? valuesToRender.opacityExit\n                            : 0;\n            }\n            /**\n             * Apply scale correction\n             */\n            for (const key in scaleCorrectors) {\n                if (valuesToRender[key] === undefined)\n                    continue;\n                const { correct, applyTo } = scaleCorrectors[key];\n                /**\n                 * Only apply scale correction to the value if we have an\n                 * active projection transform. Otherwise these values become\n                 * vulnerable to distortion if the element changes size without\n                 * a corresponding layout animation.\n                 */\n                const corrected = styles.transform === \"none\"\n                    ? valuesToRender[key]\n                    : correct(valuesToRender[key], lead);\n                if (applyTo) {\n                    const num = applyTo.length;\n                    for (let i = 0; i < num; i++) {\n                        styles[applyTo[i]] = corrected;\n                    }\n                }\n                else {\n                    styles[key] = corrected;\n                }\n            }\n            /**\n             * Disable pointer events on follow components. This is to ensure\n             * that if a follow component covers a lead component it doesn't block\n             * pointer events on the lead.\n             */\n            if (this.options.layoutId) {\n                styles.pointerEvents =\n                    lead === this\n                        ? resolveMotionValue(styleProp === null || styleProp === void 0 ? void 0 : styleProp.pointerEvents) || \"\"\n                        : \"none\";\n            }\n            return styles;\n        }\n        clearSnapshot() {\n            this.resumeFrom = this.snapshot = undefined;\n        }\n        // Only run on root\n        resetTree() {\n            this.root.nodes.forEach((node) => { var _a; return (_a = node.currentAnimation) === null || _a === void 0 ? void 0 : _a.stop(); });\n            this.root.nodes.forEach(clearMeasurements);\n            this.root.sharedNodes.clear();\n        }\n    };\n}\nfunction updateLayout(node) {\n    node.updateLayout();\n}\nfunction notifyLayoutUpdate(node) {\n    var _a;\n    const snapshot = ((_a = node.resumeFrom) === null || _a === void 0 ? void 0 : _a.snapshot) || node.snapshot;\n    if (node.isLead() &&\n        node.layout &&\n        snapshot &&\n        node.hasListeners(\"didUpdate\")) {\n        const { layoutBox: layout, measuredBox: measuredLayout } = node.layout;\n        const { animationType } = node.options;\n        const isShared = snapshot.source !== node.layout.source;\n        // TODO Maybe we want to also resize the layout snapshot so we don't trigger\n        // animations for instance if layout=\"size\" and an element has only changed position\n        if (animationType === \"size\") {\n            eachAxis((axis) => {\n                const axisSnapshot = isShared\n                    ? snapshot.measuredBox[axis]\n                    : snapshot.layoutBox[axis];\n                const length = calcLength(axisSnapshot);\n                axisSnapshot.min = layout[axis].min;\n                axisSnapshot.max = axisSnapshot.min + length;\n            });\n        }\n        else if (shouldAnimatePositionOnly(animationType, snapshot.layoutBox, layout)) {\n            eachAxis((axis) => {\n                const axisSnapshot = isShared\n                    ? snapshot.measuredBox[axis]\n                    : snapshot.layoutBox[axis];\n                const length = calcLength(layout[axis]);\n                axisSnapshot.max = axisSnapshot.min + length;\n                /**\n                 * Ensure relative target gets resized and rerendererd\n                 */\n                if (node.relativeTarget && !node.currentAnimation) {\n                    node.isProjectionDirty = true;\n                    node.relativeTarget[axis].max =\n                        node.relativeTarget[axis].min + length;\n                }\n            });\n        }\n        const layoutDelta = createDelta();\n        calcBoxDelta(layoutDelta, layout, snapshot.layoutBox);\n        const visualDelta = createDelta();\n        if (isShared) {\n            calcBoxDelta(visualDelta, node.applyTransform(measuredLayout, true), snapshot.measuredBox);\n        }\n        else {\n            calcBoxDelta(visualDelta, layout, snapshot.layoutBox);\n        }\n        const hasLayoutChanged = !isDeltaZero(layoutDelta);\n        let hasRelativeTargetChanged = false;\n        if (!node.resumeFrom) {\n            const relativeParent = node.getClosestProjectingParent();\n            /**\n             * If the relativeParent is itself resuming from a different element then\n             * the relative snapshot is not relavent\n             */\n            if (relativeParent && !relativeParent.resumeFrom) {\n                const { snapshot: parentSnapshot, layout: parentLayout } = relativeParent;\n                if (parentSnapshot && parentLayout) {\n                    const relativeSnapshot = createBox();\n                    calcRelativePosition(relativeSnapshot, snapshot.layoutBox, parentSnapshot.layoutBox);\n                    const relativeLayout = createBox();\n                    calcRelativePosition(relativeLayout, layout, parentLayout.layoutBox);\n                    if (!boxEqualsRounded(relativeSnapshot, relativeLayout)) {\n                        hasRelativeTargetChanged = true;\n                    }\n                    if (relativeParent.options.layoutRoot) {\n                        node.relativeTarget = relativeLayout;\n                        node.relativeTargetOrigin = relativeSnapshot;\n                        node.relativeParent = relativeParent;\n                    }\n                }\n            }\n        }\n        node.notifyListeners(\"didUpdate\", {\n            layout,\n            snapshot,\n            delta: visualDelta,\n            layoutDelta,\n            hasLayoutChanged,\n            hasRelativeTargetChanged,\n        });\n    }\n    else if (node.isLead()) {\n        const { onExitComplete } = node.options;\n        onExitComplete && onExitComplete();\n    }\n    /**\n     * Clearing transition\n     * TODO: Investigate why this transition is being passed in as {type: false } from Framer\n     * and why we need it at all\n     */\n    node.options.transition = undefined;\n}\nfunction propagateDirtyNodes(node) {\n    /**\n     * Increase debug counter for nodes encountered this frame\n     */\n    projectionFrameData.totalNodes++;\n    if (!node.parent)\n        return;\n    /**\n     * If this node isn't projecting, propagate isProjectionDirty. It will have\n     * no performance impact but it will allow the next child that *is* projecting\n     * but *isn't* dirty to just check its parent to see if *any* ancestor needs\n     * correcting.\n     */\n    if (!node.isProjecting()) {\n        node.isProjectionDirty = node.parent.isProjectionDirty;\n    }\n    /**\n     * Propagate isSharedProjectionDirty and isTransformDirty\n     * throughout the whole tree. A future revision can take another look at\n     * this but for safety we still recalcualte shared nodes.\n     */\n    node.isSharedProjectionDirty || (node.isSharedProjectionDirty = Boolean(node.isProjectionDirty ||\n        node.parent.isProjectionDirty ||\n        node.parent.isSharedProjectionDirty));\n    node.isTransformDirty || (node.isTransformDirty = node.parent.isTransformDirty);\n}\nfunction cleanDirtyNodes(node) {\n    node.isProjectionDirty =\n        node.isSharedProjectionDirty =\n            node.isTransformDirty =\n                false;\n}\nfunction clearSnapshot(node) {\n    node.clearSnapshot();\n}\nfunction clearMeasurements(node) {\n    node.clearMeasurements();\n}\nfunction clearIsLayoutDirty(node) {\n    node.isLayoutDirty = false;\n}\nfunction resetTransformStyle(node) {\n    const { visualElement } = node.options;\n    if (visualElement && visualElement.getProps().onBeforeLayoutMeasure) {\n        visualElement.notify(\"BeforeLayoutMeasure\");\n    }\n    node.resetTransform();\n}\nfunction finishAnimation(node) {\n    node.finishAnimation();\n    node.targetDelta = node.relativeTarget = node.target = undefined;\n    node.isProjectionDirty = true;\n}\nfunction resolveTargetDelta(node) {\n    node.resolveTargetDelta();\n}\nfunction calcProjection(node) {\n    node.calcProjection();\n}\nfunction resetRotation(node) {\n    node.resetRotation();\n}\nfunction removeLeadSnapshots(stack) {\n    stack.removeLeadSnapshot();\n}\nfunction mixAxisDelta(output, delta, p) {\n    output.translate = mix(delta.translate, 0, p);\n    output.scale = mix(delta.scale, 1, p);\n    output.origin = delta.origin;\n    output.originPoint = delta.originPoint;\n}\nfunction mixAxis(output, from, to, p) {\n    output.min = mix(from.min, to.min, p);\n    output.max = mix(from.max, to.max, p);\n}\nfunction mixBox(output, from, to, p) {\n    mixAxis(output.x, from.x, to.x, p);\n    mixAxis(output.y, from.y, to.y, p);\n}\nfunction hasOpacityCrossfade(node) {\n    return (node.animationValues && node.animationValues.opacityExit !== undefined);\n}\nconst defaultLayoutTransition = {\n    duration: 0.45,\n    ease: [0.4, 0, 0.1, 1],\n};\nconst userAgentContains = (string) => typeof navigator !== \"undefined\" &&\n    navigator.userAgent.toLowerCase().includes(string);\n/**\n * Measured bounding boxes must be rounded in Safari and\n * left untouched in Chrome, otherwise non-integer layouts within scaled-up elements\n * can appear to jump.\n */\nconst roundPoint = userAgentContains(\"applewebkit/\") && !userAgentContains(\"chrome/\")\n    ? Math.round\n    : noop;\nfunction roundAxis(axis) {\n    // Round to the nearest .5 pixels to support subpixel layouts\n    axis.min = roundPoint(axis.min);\n    axis.max = roundPoint(axis.max);\n}\nfunction roundBox(box) {\n    roundAxis(box.x);\n    roundAxis(box.y);\n}\nfunction shouldAnimatePositionOnly(animationType, snapshot, layout) {\n    return (animationType === \"position\" ||\n        (animationType === \"preserve-aspect\" &&\n            !isNear(aspectRatio(snapshot), aspectRatio(layout), 0.2)));\n}\n\nexport { cleanDirtyNodes, createProjectionNode, mixAxis, mixAxisDelta, mixBox, propagateDirtyNodes };\n","function record(data) {\n    if (window.MotionDebug) {\n        window.MotionDebug.record(data);\n    }\n}\n\nexport { record };\n","function isSVGElement(element) {\n    return element instanceof SVGElement && element.tagName !== \"svg\";\n}\n\nexport { isSVGElement };\n","import { frame, cancelFrame } from '../frameloop/frame.mjs';\n\n/**\n * Timeout defined in ms\n */\nfunction delay(callback, timeout) {\n    const start = performance.now();\n    const checkElapsed = ({ timestamp }) => {\n        const elapsed = timestamp - start;\n        if (elapsed >= timeout) {\n            cancelFrame(checkElapsed);\n            callback(elapsed - timeout);\n        }\n    };\n    frame.read(checkElapsed, true);\n    return () => cancelFrame(checkElapsed);\n}\n\nexport { delay };\n","import { animateMotionValue } from './motion-value.mjs';\nimport { motionValue } from '../../value/index.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction animateSingleValue(value, keyframes, options) {\n    const motionValue$1 = isMotionValue(value) ? value : motionValue(value);\n    motionValue$1.start(animateMotionValue(\"\", motionValue$1, keyframes, options));\n    return motionValue$1.animation;\n}\n\nexport { animateSingleValue };\n","import { createProjectionNode } from './create-projection-node.mjs';\nimport { addDomEvent } from '../../events/add-dom-event.mjs';\n\nconst DocumentProjectionNode = createProjectionNode({\n    attachResizeListener: (ref, notify) => addDomEvent(ref, \"resize\", notify),\n    measureScroll: () => ({\n        x: document.documentElement.scrollLeft || document.body.scrollLeft,\n        y: document.documentElement.scrollTop || document.body.scrollTop,\n    }),\n    checkIsScrollRoot: () => true,\n});\n\nexport { DocumentProjectionNode };\n","import { createProjectionNode } from './create-projection-node.mjs';\nimport { DocumentProjectionNode } from './DocumentProjectionNode.mjs';\n\nconst rootProjectionNode = {\n    current: undefined,\n};\nconst HTMLProjectionNode = createProjectionNode({\n    measureScroll: (instance) => ({\n        x: instance.scrollLeft,\n        y: instance.scrollTop,\n    }),\n    defaultParent: () => {\n        if (!rootProjectionNode.current) {\n            const documentNode = new DocumentProjectionNode({});\n            documentNode.mount(window);\n            documentNode.setOptions({ layoutScroll: true });\n            rootProjectionNode.current = documentNode;\n        }\n        return rootProjectionNode.current;\n    },\n    resetTransform: (instance, value) => {\n        instance.style.transform = value !== undefined ? value : \"none\";\n    },\n    checkIsScrollRoot: (instance) => Boolean(window.getComputedStyle(instance).position === \"fixed\"),\n});\n\nexport { HTMLProjectionNode, rootProjectionNode };\n","import { DragGesture } from '../../gestures/drag/index.mjs';\nimport { PanGesture } from '../../gestures/pan/index.mjs';\nimport { MeasureLayout } from './layout/MeasureLayout.mjs';\nimport { HTMLProjectionNode } from '../../projection/node/HTMLProjectionNode.mjs';\n\nconst drag = {\n    pan: {\n        Feature: PanGesture,\n    },\n    drag: {\n        Feature: DragGesture,\n        ProjectionNode: HTMLProjectionNode,\n        MeasureLayout,\n    },\n};\n\nexport { drag };\n","import { Feature } from '../../motion/features/Feature.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { VisualElementDragControls } from './VisualElementDragControls.mjs';\n\nclass DragGesture extends Feature {\n    constructor(node) {\n        super(node);\n        this.removeGroupControls = noop;\n        this.removeListeners = noop;\n        this.controls = new VisualElementDragControls(node);\n    }\n    mount() {\n        // If we've been provided a DragControls for manual control over the drag gesture,\n        // subscribe this component to it on mount.\n        const { dragControls } = this.node.getProps();\n        if (dragControls) {\n            this.removeGroupControls = dragControls.subscribe(this.controls);\n        }\n        this.removeListeners = this.controls.addListeners() || noop;\n    }\n    unmount() {\n        this.removeGroupControls();\n        this.removeListeners();\n    }\n}\n\nexport { DragGesture };\n","import { invariant } from '../../../utils/errors.mjs';\nimport { isNumericalString } from '../../../utils/is-numerical-string.mjs';\nimport { isCSSVariableToken } from './is-css-variable.mjs';\n\n/**\n * Parse Framer's special CSS variable format into a CSS token and a fallback.\n *\n * ```\n * `var(--foo, #fff)` => [`--foo`, '#fff']\n * ```\n *\n * @param current\n */\nconst splitCSSVariableRegex = /var\\((--[a-zA-Z0-9-_]+),? ?([a-zA-Z0-9 ()%#.,-]+)?\\)/;\nfunction parseCSSVariable(current) {\n    const match = splitCSSVariableRegex.exec(current);\n    if (!match)\n        return [,];\n    const [, token, fallback] = match;\n    return [token, fallback];\n}\nconst maxDepth = 4;\nfunction getVariableValue(current, element, depth = 1) {\n    invariant(depth <= maxDepth, `Max CSS variable fallback depth detected in property \"${current}\". This may indicate a circular fallback dependency.`);\n    const [token, fallback] = parseCSSVariable(current);\n    // No CSS variable detected\n    if (!token)\n        return;\n    // Attempt to read this CSS variable off the element\n    const resolved = window.getComputedStyle(element).getPropertyValue(token);\n    if (resolved) {\n        const trimmed = resolved.trim();\n        return isNumericalString(trimmed) ? parseFloat(trimmed) : trimmed;\n    }\n    else if (isCSSVariableToken(fallback)) {\n        // The fallback might itself be a CSS variable, in which case we attempt to resolve it too.\n        return getVariableValue(fallback, element, depth + 1);\n    }\n    else {\n        return fallback;\n    }\n}\n/**\n * Resolve CSS variables from\n *\n * @internal\n */\nfunction resolveCSSVariables(visualElement, { ...target }, transitionEnd) {\n    const element = visualElement.current;\n    if (!(element instanceof Element))\n        return { target, transitionEnd };\n    // If `transitionEnd` isn't `undefined`, clone it. We could clone `target` and `transitionEnd`\n    // only if they change but I think this reads clearer and this isn't a performance-critical path.\n    if (transitionEnd) {\n        transitionEnd = { ...transitionEnd };\n    }\n    // Go through existing `MotionValue`s and ensure any existing CSS variables are resolved\n    visualElement.values.forEach((value) => {\n        const current = value.get();\n        if (!isCSSVariableToken(current))\n            return;\n        const resolved = getVariableValue(current, element);\n        if (resolved)\n            value.set(resolved);\n    });\n    // Cycle through every target property and resolve CSS variables. Currently\n    // we only read single-var properties like `var(--foo)`, not `calc(var(--foo) + 20px)`\n    for (const key in target) {\n        const current = target[key];\n        if (!isCSSVariableToken(current))\n            continue;\n        const resolved = getVariableValue(current, element);\n        if (!resolved)\n            continue;\n        // Clone target if it hasn't already been\n        target[key] = resolved;\n        if (!transitionEnd)\n            transitionEnd = {};\n        // If the user hasn't already set this key on `transitionEnd`, set it to the unresolved\n        // CSS variable. This will ensure that after the animation the component will reflect\n        // changes in the value of the CSS variable.\n        if (transitionEnd[key] === undefined) {\n            transitionEnd[key] = current;\n        }\n    }\n    return { target, transitionEnd };\n}\n\nexport { parseCSSVariable, resolveCSSVariables };\n","import { isKeyframesTarget } from '../../../animation/utils/is-keyframes-target.mjs';\nimport { invariant } from '../../../utils/errors.mjs';\nimport { transformPropOrder } from '../../html/utils/transform.mjs';\nimport { findDimensionValueType } from '../value-types/dimensions.mjs';\nimport { isBrowser } from '../../../utils/is-browser.mjs';\nimport { number } from '../../../value/types/numbers/index.mjs';\nimport { px } from '../../../value/types/numbers/units.mjs';\n\nconst positionalKeys = new Set([\n    \"width\",\n    \"height\",\n    \"top\",\n    \"left\",\n    \"right\",\n    \"bottom\",\n    \"x\",\n    \"y\",\n    \"translateX\",\n    \"translateY\",\n]);\nconst isPositionalKey = (key) => positionalKeys.has(key);\nconst hasPositionalKey = (target) => {\n    return Object.keys(target).some(isPositionalKey);\n};\nconst isNumOrPxType = (v) => v === number || v === px;\nconst getPosFromMatrix = (matrix, pos) => parseFloat(matrix.split(\", \")[pos]);\nconst getTranslateFromMatrix = (pos2, pos3) => (_bbox, { transform }) => {\n    if (transform === \"none\" || !transform)\n        return 0;\n    const matrix3d = transform.match(/^matrix3d\\((.+)\\)$/);\n    if (matrix3d) {\n        return getPosFromMatrix(matrix3d[1], pos3);\n    }\n    else {\n        const matrix = transform.match(/^matrix\\((.+)\\)$/);\n        if (matrix) {\n            return getPosFromMatrix(matrix[1], pos2);\n        }\n        else {\n            return 0;\n        }\n    }\n};\nconst transformKeys = new Set([\"x\", \"y\", \"z\"]);\nconst nonTranslationalTransformKeys = transformPropOrder.filter((key) => !transformKeys.has(key));\nfunction removeNonTranslationalTransform(visualElement) {\n    const removedTransforms = [];\n    nonTranslationalTransformKeys.forEach((key) => {\n        const value = visualElement.getValue(key);\n        if (value !== undefined) {\n            removedTransforms.push([key, value.get()]);\n            value.set(key.startsWith(\"scale\") ? 1 : 0);\n        }\n    });\n    // Apply changes to element before measurement\n    if (removedTransforms.length)\n        visualElement.render();\n    return removedTransforms;\n}\nconst positionalValues = {\n    // Dimensions\n    width: ({ x }, { paddingLeft = \"0\", paddingRight = \"0\" }) => x.max - x.min - parseFloat(paddingLeft) - parseFloat(paddingRight),\n    height: ({ y }, { paddingTop = \"0\", paddingBottom = \"0\" }) => y.max - y.min - parseFloat(paddingTop) - parseFloat(paddingBottom),\n    top: (_bbox, { top }) => parseFloat(top),\n    left: (_bbox, { left }) => parseFloat(left),\n    bottom: ({ y }, { top }) => parseFloat(top) + (y.max - y.min),\n    right: ({ x }, { left }) => parseFloat(left) + (x.max - x.min),\n    // Transform\n    x: getTranslateFromMatrix(4, 13),\n    y: getTranslateFromMatrix(5, 14),\n};\n// Alias translate longform names\npositionalValues.translateX = positionalValues.x;\npositionalValues.translateY = positionalValues.y;\nconst convertChangedValueTypes = (target, visualElement, changedKeys) => {\n    const originBbox = visualElement.measureViewportBox();\n    const element = visualElement.current;\n    const elementComputedStyle = getComputedStyle(element);\n    const { display } = elementComputedStyle;\n    const origin = {};\n    // If the element is currently set to display: \"none\", make it visible before\n    // measuring the target bounding box\n    if (display === \"none\") {\n        visualElement.setStaticValue(\"display\", target.display || \"block\");\n    }\n    /**\n     * Record origins before we render and update styles\n     */\n    changedKeys.forEach((key) => {\n        origin[key] = positionalValues[key](originBbox, elementComputedStyle);\n    });\n    // Apply the latest values (as set in checkAndConvertChangedValueTypes)\n    visualElement.render();\n    const targetBbox = visualElement.measureViewportBox();\n    changedKeys.forEach((key) => {\n        // Restore styles to their **calculated computed style**, not their actual\n        // originally set style. This allows us to animate between equivalent pixel units.\n        const value = visualElement.getValue(key);\n        value && value.jump(origin[key]);\n        target[key] = positionalValues[key](targetBbox, elementComputedStyle);\n    });\n    return target;\n};\nconst checkAndConvertChangedValueTypes = (visualElement, target, origin = {}, transitionEnd = {}) => {\n    target = { ...target };\n    transitionEnd = { ...transitionEnd };\n    const targetPositionalKeys = Object.keys(target).filter(isPositionalKey);\n    // We want to remove any transform values that could affect the element's bounding box before\n    // it's measured. We'll reapply these later.\n    let removedTransformValues = [];\n    let hasAttemptedToRemoveTransformValues = false;\n    const changedValueTypeKeys = [];\n    targetPositionalKeys.forEach((key) => {\n        const value = visualElement.getValue(key);\n        if (!visualElement.hasValue(key))\n            return;\n        let from = origin[key];\n        let fromType = findDimensionValueType(from);\n        const to = target[key];\n        let toType;\n        // TODO: The current implementation of this basically throws an error\n        // if you try and do value conversion via keyframes. There's probably\n        // a way of doing this but the performance implications would need greater scrutiny,\n        // as it'd be doing multiple resize-remeasure operations.\n        if (isKeyframesTarget(to)) {\n            const numKeyframes = to.length;\n            const fromIndex = to[0] === null ? 1 : 0;\n            from = to[fromIndex];\n            fromType = findDimensionValueType(from);\n            for (let i = fromIndex; i < numKeyframes; i++) {\n                /**\n                 * Don't allow wildcard keyframes to be used to detect\n                 * a difference in value types.\n                 */\n                if (to[i] === null)\n                    break;\n                if (!toType) {\n                    toType = findDimensionValueType(to[i]);\n                    invariant(toType === fromType ||\n                        (isNumOrPxType(fromType) && isNumOrPxType(toType)), \"Keyframes must be of the same dimension as the current value\");\n                }\n                else {\n                    invariant(findDimensionValueType(to[i]) === toType, \"All keyframes must be of the same type\");\n                }\n            }\n        }\n        else {\n            toType = findDimensionValueType(to);\n        }\n        if (fromType !== toType) {\n            // If they're both just number or px, convert them both to numbers rather than\n            // relying on resize/remeasure to convert (which is wasteful in this situation)\n            if (isNumOrPxType(fromType) && isNumOrPxType(toType)) {\n                const current = value.get();\n                if (typeof current === \"string\") {\n                    value.set(parseFloat(current));\n                }\n                if (typeof to === \"string\") {\n                    target[key] = parseFloat(to);\n                }\n                else if (Array.isArray(to) && toType === px) {\n                    target[key] = to.map(parseFloat);\n                }\n            }\n            else if ((fromType === null || fromType === void 0 ? void 0 : fromType.transform) &&\n                (toType === null || toType === void 0 ? void 0 : toType.transform) &&\n                (from === 0 || to === 0)) {\n                // If one or the other value is 0, it's safe to coerce it to the\n                // type of the other without measurement\n                if (from === 0) {\n                    value.set(toType.transform(from));\n                }\n                else {\n                    target[key] = fromType.transform(to);\n                }\n            }\n            else {\n                // If we're going to do value conversion via DOM measurements, we first\n                // need to remove non-positional transform values that could affect the bbox measurements.\n                if (!hasAttemptedToRemoveTransformValues) {\n                    removedTransformValues =\n                        removeNonTranslationalTransform(visualElement);\n                    hasAttemptedToRemoveTransformValues = true;\n                }\n                changedValueTypeKeys.push(key);\n                transitionEnd[key] =\n                    transitionEnd[key] !== undefined\n                        ? transitionEnd[key]\n                        : target[key];\n                value.jump(to);\n            }\n        }\n    });\n    if (changedValueTypeKeys.length) {\n        const scrollY = changedValueTypeKeys.indexOf(\"height\") >= 0\n            ? window.pageYOffset\n            : null;\n        const convertedTarget = convertChangedValueTypes(target, visualElement, changedValueTypeKeys);\n        // If we removed transform values, reapply them before the next render\n        if (removedTransformValues.length) {\n            removedTransformValues.forEach(([key, value]) => {\n                visualElement.getValue(key).set(value);\n            });\n        }\n        // Reapply original values\n        visualElement.render();\n        // Restore scroll position\n        if (isBrowser && scrollY !== null) {\n            window.scrollTo({ top: scrollY });\n        }\n        return { target: convertedTarget, transitionEnd };\n    }\n    else {\n        return { target, transitionEnd };\n    }\n};\n/**\n * Convert value types for x/y/width/height/top/left/bottom/right\n *\n * Allows animation between `'auto'` -> `'100%'` or `0` -> `'calc(50% - 10vw)'`\n *\n * @internal\n */\nfunction unitConversion(visualElement, target, origin, transitionEnd) {\n    return hasPositionalKey(target)\n        ? checkAndConvertChangedValueTypes(visualElement, target, origin, transitionEnd)\n        : { target, transitionEnd };\n}\n\nexport { positionalValues, unitConversion };\n","import { resolveCSSVariables } from './css-variables-conversion.mjs';\nimport { unitConversion } from './unit-conversion.mjs';\n\n/**\n * Parse a DOM variant to make it animatable. This involves resolving CSS variables\n * and ensuring animations like \"20%\" => \"calc(50vw)\" are performed in pixels.\n */\nconst parseDomVariant = (visualElement, target, origin, transitionEnd) => {\n    const resolved = resolveCSSVariables(visualElement, target, transitionEnd);\n    target = resolved.target;\n    transitionEnd = resolved.transitionEnd;\n    return unitConversion(visualElement, target, origin, transitionEnd);\n};\n\nexport { parseDomVariant };\n","// Does this device prefer reduced motion? Returns `null` server-side.\nconst prefersReducedMotion = { current: null };\nconst hasReducedMotionListener = { current: false };\n\nexport { hasReducedMotionListener, prefersReducedMotion };\n","const visualElementStore = new WeakMap();\n\nexport { visualElementStore };\n","import { warning, invariant } from '../utils/errors.mjs';\nimport { createBox } from '../projection/geometry/models.mjs';\nimport { isRefObject } from '../utils/is-ref-object.mjs';\nimport { initPrefersReducedMotion } from '../utils/reduced-motion/index.mjs';\nimport { hasReducedMotionListener, prefersReducedMotion } from '../utils/reduced-motion/state.mjs';\nimport { SubscriptionManager } from '../utils/subscription-manager.mjs';\nimport { motionValue } from '../value/index.mjs';\nimport { isWillChangeMotionValue } from '../value/use-will-change/is.mjs';\nimport { isMotionValue } from '../value/utils/is-motion-value.mjs';\nimport { transformProps } from './html/utils/transform.mjs';\nimport { isControllingVariants, isVariantNode } from './utils/is-controlling-variants.mjs';\nimport { isVariantLabel } from './utils/is-variant-label.mjs';\nimport { updateMotionValuesFromProps } from './utils/motion-values.mjs';\nimport { resolveVariantFromProps } from './utils/resolve-variants.mjs';\nimport { warnOnce } from '../utils/warn-once.mjs';\nimport { featureDefinitions } from '../motion/features/definitions.mjs';\nimport { variantProps } from './utils/variant-props.mjs';\nimport { visualElementStore } from './store.mjs';\nimport { frame, cancelFrame } from '../frameloop/frame.mjs';\n\nconst featureNames = Object.keys(featureDefinitions);\nconst numFeatures = featureNames.length;\nconst propEventHandlers = [\n    \"AnimationStart\",\n    \"AnimationComplete\",\n    \"Update\",\n    \"BeforeLayoutMeasure\",\n    \"LayoutMeasure\",\n    \"LayoutAnimationStart\",\n    \"LayoutAnimationComplete\",\n];\nconst numVariantProps = variantProps.length;\n/**\n * A VisualElement is an imperative abstraction around UI elements such as\n * HTMLElement, SVGElement, Three.Object3D etc.\n */\nclass VisualElement {\n    constructor({ parent, props, presenceContext, reducedMotionConfig, visualState, }, options = {}) {\n        /**\n         * A reference to the current underlying Instance, e.g. a HTMLElement\n         * or Three.Mesh etc.\n         */\n        this.current = null;\n        /**\n         * A set containing references to this VisualElement's children.\n         */\n        this.children = new Set();\n        /**\n         * Determine what role this visual element should take in the variant tree.\n         */\n        this.isVariantNode = false;\n        this.isControllingVariants = false;\n        /**\n         * Decides whether this VisualElement should animate in reduced motion\n         * mode.\n         *\n         * TODO: This is currently set on every individual VisualElement but feels\n         * like it could be set globally.\n         */\n        this.shouldReduceMotion = null;\n        /**\n         * A map of all motion values attached to this visual element. Motion\n         * values are source of truth for any given animated value. A motion\n         * value might be provided externally by the component via props.\n         */\n        this.values = new Map();\n        /**\n         * Cleanup functions for active features (hover/tap/exit etc)\n         */\n        this.features = {};\n        /**\n         * A map of every subscription that binds the provided or generated\n         * motion values onChange listeners to this visual element.\n         */\n        this.valueSubscriptions = new Map();\n        /**\n         * A reference to the previously-provided motion values as returned\n         * from scrapeMotionValuesFromProps. We use the keys in here to determine\n         * if any motion values need to be removed after props are updated.\n         */\n        this.prevMotionValues = {};\n        /**\n         * An object containing a SubscriptionManager for each active event.\n         */\n        this.events = {};\n        /**\n         * An object containing an unsubscribe function for each prop event subscription.\n         * For example, every \"Update\" event can have multiple subscribers via\n         * VisualElement.on(), but only one of those can be defined via the onUpdate prop.\n         */\n        this.propEventSubscriptions = {};\n        this.notifyUpdate = () => this.notify(\"Update\", this.latestValues);\n        this.render = () => {\n            if (!this.current)\n                return;\n            this.triggerBuild();\n            this.renderInstance(this.current, this.renderState, this.props.style, this.projection);\n        };\n        this.scheduleRender = () => frame.render(this.render, false, true);\n        const { latestValues, renderState } = visualState;\n        this.latestValues = latestValues;\n        this.baseTarget = { ...latestValues };\n        this.initialValues = props.initial ? { ...latestValues } : {};\n        this.renderState = renderState;\n        this.parent = parent;\n        this.props = props;\n        this.presenceContext = presenceContext;\n        this.depth = parent ? parent.depth + 1 : 0;\n        this.reducedMotionConfig = reducedMotionConfig;\n        this.options = options;\n        this.isControllingVariants = isControllingVariants(props);\n        this.isVariantNode = isVariantNode(props);\n        if (this.isVariantNode) {\n            this.variantChildren = new Set();\n        }\n        this.manuallyAnimateOnMount = Boolean(parent && parent.current);\n        /**\n         * Any motion values that are provided to the element when created\n         * aren't yet bound to the element, as this would technically be impure.\n         * However, we iterate through the motion values and set them to the\n         * initial values for this component.\n         *\n         * TODO: This is impure and we should look at changing this to run on mount.\n         * Doing so will break some tests but this isn't neccessarily a breaking change,\n         * more a reflection of the test.\n         */\n        const { willChange, ...initialMotionValues } = this.scrapeMotionValuesFromProps(props, {});\n        for (const key in initialMotionValues) {\n            const value = initialMotionValues[key];\n            if (latestValues[key] !== undefined && isMotionValue(value)) {\n                value.set(latestValues[key], false);\n                if (isWillChangeMotionValue(willChange)) {\n                    willChange.add(key);\n                }\n            }\n        }\n    }\n    /**\n     * This method takes React props and returns found MotionValues. For example, HTML\n     * MotionValues will be found within the style prop, whereas for Three.js within attribute arrays.\n     *\n     * This isn't an abstract method as it needs calling in the constructor, but it is\n     * intended to be one.\n     */\n    scrapeMotionValuesFromProps(_props, _prevProps) {\n        return {};\n    }\n    mount(instance) {\n        this.current = instance;\n        visualElementStore.set(instance, this);\n        if (this.projection && !this.projection.instance) {\n            this.projection.mount(instance);\n        }\n        if (this.parent && this.isVariantNode && !this.isControllingVariants) {\n            this.removeFromVariantTree = this.parent.addVariantChild(this);\n        }\n        this.values.forEach((value, key) => this.bindToMotionValue(key, value));\n        if (!hasReducedMotionListener.current) {\n            initPrefersReducedMotion();\n        }\n        this.shouldReduceMotion =\n            this.reducedMotionConfig === \"never\"\n                ? false\n                : this.reducedMotionConfig === \"always\"\n                    ? true\n                    : prefersReducedMotion.current;\n        if (process.env.NODE_ENV !== \"production\") {\n            warnOnce(this.shouldReduceMotion !== true, \"You have Reduced Motion enabled on your device. Animations may not appear as expected.\");\n        }\n        if (this.parent)\n            this.parent.children.add(this);\n        this.update(this.props, this.presenceContext);\n    }\n    unmount() {\n        visualElementStore.delete(this.current);\n        this.projection && this.projection.unmount();\n        cancelFrame(this.notifyUpdate);\n        cancelFrame(this.render);\n        this.valueSubscriptions.forEach((remove) => remove());\n        this.removeFromVariantTree && this.removeFromVariantTree();\n        this.parent && this.parent.children.delete(this);\n        for (const key in this.events) {\n            this.events[key].clear();\n        }\n        for (const key in this.features) {\n            this.features[key].unmount();\n        }\n        this.current = null;\n    }\n    bindToMotionValue(key, value) {\n        const valueIsTransform = transformProps.has(key);\n        const removeOnChange = value.on(\"change\", (latestValue) => {\n            this.latestValues[key] = latestValue;\n            this.props.onUpdate &&\n                frame.update(this.notifyUpdate, false, true);\n            if (valueIsTransform && this.projection) {\n                this.projection.isTransformDirty = true;\n            }\n        });\n        const removeOnRenderRequest = value.on(\"renderRequest\", this.scheduleRender);\n        this.valueSubscriptions.set(key, () => {\n            removeOnChange();\n            removeOnRenderRequest();\n        });\n    }\n    sortNodePosition(other) {\n        /**\n         * If these nodes aren't even of the same type we can't compare their depth.\n         */\n        if (!this.current ||\n            !this.sortInstanceNodePosition ||\n            this.type !== other.type) {\n            return 0;\n        }\n        return this.sortInstanceNodePosition(this.current, other.current);\n    }\n    loadFeatures({ children, ...renderedProps }, isStrict, preloadedFeatures, initialLayoutGroupConfig) {\n        let ProjectionNodeConstructor;\n        let MeasureLayout;\n        /**\n         * If we're in development mode, check to make sure we're not rendering a motion component\n         * as a child of LazyMotion, as this will break the file-size benefits of using it.\n         */\n        if (process.env.NODE_ENV !== \"production\" &&\n            preloadedFeatures &&\n            isStrict) {\n            const strictMessage = \"You have rendered a `motion` component within a `LazyMotion` component. This will break tree shaking. Import and render a `m` component instead.\";\n            renderedProps.ignoreStrict\n                ? warning(false, strictMessage)\n                : invariant(false, strictMessage);\n        }\n        for (let i = 0; i < numFeatures; i++) {\n            const name = featureNames[i];\n            const { isEnabled, Feature: FeatureConstructor, ProjectionNode, MeasureLayout: MeasureLayoutComponent, } = featureDefinitions[name];\n            if (ProjectionNode)\n                ProjectionNodeConstructor = ProjectionNode;\n            if (isEnabled(renderedProps)) {\n                if (!this.features[name] && FeatureConstructor) {\n                    this.features[name] = new FeatureConstructor(this);\n                }\n                if (MeasureLayoutComponent) {\n                    MeasureLayout = MeasureLayoutComponent;\n                }\n            }\n        }\n        if (!this.projection && ProjectionNodeConstructor) {\n            this.projection = new ProjectionNodeConstructor(this.latestValues, this.parent && this.parent.projection);\n            const { layoutId, layout, drag, dragConstraints, layoutScroll, layoutRoot, } = renderedProps;\n            this.projection.setOptions({\n                layoutId,\n                layout,\n                alwaysMeasureLayout: Boolean(drag) ||\n                    (dragConstraints && isRefObject(dragConstraints)),\n                visualElement: this,\n                scheduleRender: () => this.scheduleRender(),\n                /**\n                 * TODO: Update options in an effect. This could be tricky as it'll be too late\n                 * to update by the time layout animations run.\n                 * We also need to fix this safeToRemove by linking it up to the one returned by usePresence,\n                 * ensuring it gets called if there's no potential layout animations.\n                 *\n                 */\n                animationType: typeof layout === \"string\" ? layout : \"both\",\n                initialPromotionConfig: initialLayoutGroupConfig,\n                layoutScroll,\n                layoutRoot,\n            });\n        }\n        return MeasureLayout;\n    }\n    updateFeatures() {\n        for (const key in this.features) {\n            const feature = this.features[key];\n            if (feature.isMounted) {\n                feature.update();\n            }\n            else {\n                feature.mount();\n                feature.isMounted = true;\n            }\n        }\n    }\n    triggerBuild() {\n        this.build(this.renderState, this.latestValues, this.options, this.props);\n    }\n    /**\n     * Measure the current viewport box with or without transforms.\n     * Only measures axis-aligned boxes, rotate and skew must be manually\n     * removed with a re-render to work.\n     */\n    measureViewportBox() {\n        return this.current\n            ? this.measureInstanceViewportBox(this.current, this.props)\n            : createBox();\n    }\n    getStaticValue(key) {\n        return this.latestValues[key];\n    }\n    setStaticValue(key, value) {\n        this.latestValues[key] = value;\n    }\n    /**\n     * Make a target animatable by Popmotion. For instance, if we're\n     * trying to animate width from 100px to 100vw we need to measure 100vw\n     * in pixels to determine what we really need to animate to. This is also\n     * pluggable to support Framer's custom value types like Color,\n     * and CSS variables.\n     */\n    makeTargetAnimatable(target, canMutate = true) {\n        return this.makeTargetAnimatableFromInstance(target, this.props, canMutate);\n    }\n    /**\n     * Update the provided props. Ensure any newly-added motion values are\n     * added to our map, old ones removed, and listeners updated.\n     */\n    update(props, presenceContext) {\n        if (props.transformTemplate || this.props.transformTemplate) {\n            this.scheduleRender();\n        }\n        this.prevProps = this.props;\n        this.props = props;\n        this.prevPresenceContext = this.presenceContext;\n        this.presenceContext = presenceContext;\n        /**\n         * Update prop event handlers ie onAnimationStart, onAnimationComplete\n         */\n        for (let i = 0; i < propEventHandlers.length; i++) {\n            const key = propEventHandlers[i];\n            if (this.propEventSubscriptions[key]) {\n                this.propEventSubscriptions[key]();\n                delete this.propEventSubscriptions[key];\n            }\n            const listener = props[\"on\" + key];\n            if (listener) {\n                this.propEventSubscriptions[key] = this.on(key, listener);\n            }\n        }\n        this.prevMotionValues = updateMotionValuesFromProps(this, this.scrapeMotionValuesFromProps(props, this.prevProps), this.prevMotionValues);\n        if (this.handleChildMotionValue) {\n            this.handleChildMotionValue();\n        }\n    }\n    getProps() {\n        return this.props;\n    }\n    /**\n     * Returns the variant definition with a given name.\n     */\n    getVariant(name) {\n        return this.props.variants ? this.props.variants[name] : undefined;\n    }\n    /**\n     * Returns the defined default transition on this component.\n     */\n    getDefaultTransition() {\n        return this.props.transition;\n    }\n    getTransformPagePoint() {\n        return this.props.transformPagePoint;\n    }\n    getClosestVariantNode() {\n        return this.isVariantNode\n            ? this\n            : this.parent\n                ? this.parent.getClosestVariantNode()\n                : undefined;\n    }\n    getVariantContext(startAtParent = false) {\n        if (startAtParent) {\n            return this.parent ? this.parent.getVariantContext() : undefined;\n        }\n        if (!this.isControllingVariants) {\n            const context = this.parent\n                ? this.parent.getVariantContext() || {}\n                : {};\n            if (this.props.initial !== undefined) {\n                context.initial = this.props.initial;\n            }\n            return context;\n        }\n        const context = {};\n        for (let i = 0; i < numVariantProps; i++) {\n            const name = variantProps[i];\n            const prop = this.props[name];\n            if (isVariantLabel(prop) || prop === false) {\n                context[name] = prop;\n            }\n        }\n        return context;\n    }\n    /**\n     * Add a child visual element to our set of children.\n     */\n    addVariantChild(child) {\n        const closestVariantNode = this.getClosestVariantNode();\n        if (closestVariantNode) {\n            closestVariantNode.variantChildren &&\n                closestVariantNode.variantChildren.add(child);\n            return () => closestVariantNode.variantChildren.delete(child);\n        }\n    }\n    /**\n     * Add a motion value and bind it to this visual element.\n     */\n    addValue(key, value) {\n        // Remove existing value if it exists\n        if (value !== this.values.get(key)) {\n            this.removeValue(key);\n            this.bindToMotionValue(key, value);\n        }\n        this.values.set(key, value);\n        this.latestValues[key] = value.get();\n    }\n    /**\n     * Remove a motion value and unbind any active subscriptions.\n     */\n    removeValue(key) {\n        this.values.delete(key);\n        const unsubscribe = this.valueSubscriptions.get(key);\n        if (unsubscribe) {\n            unsubscribe();\n            this.valueSubscriptions.delete(key);\n        }\n        delete this.latestValues[key];\n        this.removeValueFromRenderState(key, this.renderState);\n    }\n    /**\n     * Check whether we have a motion value for this key\n     */\n    hasValue(key) {\n        return this.values.has(key);\n    }\n    getValue(key, defaultValue) {\n        if (this.props.values && this.props.values[key]) {\n            return this.props.values[key];\n        }\n        let value = this.values.get(key);\n        if (value === undefined && defaultValue !== undefined) {\n            value = motionValue(defaultValue, { owner: this });\n            this.addValue(key, value);\n        }\n        return value;\n    }\n    /**\n     * If we're trying to animate to a previously unencountered value,\n     * we need to check for it in our state and as a last resort read it\n     * directly from the instance (which might have performance implications).\n     */\n    readValue(key) {\n        var _a;\n        return this.latestValues[key] !== undefined || !this.current\n            ? this.latestValues[key]\n            : (_a = this.getBaseTargetFromProps(this.props, key)) !== null && _a !== void 0 ? _a : this.readValueFromInstance(this.current, key, this.options);\n    }\n    /**\n     * Set the base target to later animate back to. This is currently\n     * only hydrated on creation and when we first read a value.\n     */\n    setBaseTarget(key, value) {\n        this.baseTarget[key] = value;\n    }\n    /**\n     * Find the base target for a value thats been removed from all animation\n     * props.\n     */\n    getBaseTarget(key) {\n        var _a;\n        const { initial } = this.props;\n        const valueFromInitial = typeof initial === \"string\" || typeof initial === \"object\"\n            ? (_a = resolveVariantFromProps(this.props, initial)) === null || _a === void 0 ? void 0 : _a[key]\n            : undefined;\n        /**\n         * If this value still exists in the current initial variant, read that.\n         */\n        if (initial && valueFromInitial !== undefined) {\n            return valueFromInitial;\n        }\n        /**\n         * Alternatively, if this VisualElement config has defined a getBaseTarget\n         * so we can read the value from an alternative source, try that.\n         */\n        const target = this.getBaseTargetFromProps(this.props, key);\n        if (target !== undefined && !isMotionValue(target))\n            return target;\n        /**\n         * If the value was initially defined on initial, but it doesn't any more,\n         * return undefined. Otherwise return the value as initially read from the DOM.\n         */\n        return this.initialValues[key] !== undefined &&\n            valueFromInitial === undefined\n            ? undefined\n            : this.baseTarget[key];\n    }\n    on(eventName, callback) {\n        if (!this.events[eventName]) {\n            this.events[eventName] = new SubscriptionManager();\n        }\n        return this.events[eventName].add(callback);\n    }\n    notify(eventName, ...args) {\n        if (this.events[eventName]) {\n            this.events[eventName].notify(...args);\n        }\n    }\n}\n\nexport { VisualElement };\n","import { isBrowser } from '../is-browser.mjs';\nimport { hasReducedMotionListener, prefersReducedMotion } from './state.mjs';\n\nfunction initPrefersReducedMotion() {\n    hasReducedMotionListener.current = true;\n    if (!isBrowser)\n        return;\n    if (window.matchMedia) {\n        const motionMediaQuery = window.matchMedia(\"(prefers-reduced-motion)\");\n        const setReducedMotionPreferences = () => (prefersReducedMotion.current = motionMediaQuery.matches);\n        motionMediaQuery.addListener(setReducedMotionPreferences);\n        setReducedMotionPreferences();\n    }\n    else {\n        prefersReducedMotion.current = false;\n    }\n}\n\nexport { initPrefersReducedMotion };\n","import { isWillChangeMotionValue } from '../../value/use-will-change/is.mjs';\nimport { warnOnce } from '../../utils/warn-once.mjs';\nimport { motionValue } from '../../value/index.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction updateMotionValuesFromProps(element, next, prev) {\n    const { willChange } = next;\n    for (const key in next) {\n        const nextValue = next[key];\n        const prevValue = prev[key];\n        if (isMotionValue(nextValue)) {\n            /**\n             * If this is a motion value found in props or style, we want to add it\n             * to our visual element's motion value map.\n             */\n            element.addValue(key, nextValue);\n            if (isWillChangeMotionValue(willChange)) {\n                willChange.add(key);\n            }\n            /**\n             * Check the version of the incoming motion value with this version\n             * and warn against mismatches.\n             */\n            if (process.env.NODE_ENV === \"development\") {\n                warnOnce(nextValue.version === \"10.16.16\", `Attempting to mix Framer Motion versions ${nextValue.version} with 10.16.16 may not work as expected.`);\n            }\n        }\n        else if (isMotionValue(prevValue)) {\n            /**\n             * If we're swapping from a motion value to a static value,\n             * create a new motion value from that\n             */\n            element.addValue(key, motionValue(nextValue, { owner: element }));\n            if (isWillChangeMotionValue(willChange)) {\n                willChange.remove(key);\n            }\n        }\n        else if (prevValue !== nextValue) {\n            /**\n             * If this is a flat value that has changed, update the motion value\n             * or create one if it doesn't exist. We only want to do this if we're\n             * not handling the value with our animation state.\n             */\n            if (element.hasValue(key)) {\n                const existingValue = element.getValue(key);\n                // TODO: Only update values that aren't being animated or even looked at\n                !existingValue.hasAnimated && existingValue.set(nextValue);\n            }\n            else {\n                const latestValue = element.getStaticValue(key);\n                element.addValue(key, motionValue(latestValue !== undefined ? latestValue : nextValue, { owner: element }));\n            }\n        }\n    }\n    // Handle removed values\n    for (const key in prev) {\n        if (next[key] === undefined)\n            element.removeValue(key);\n    }\n    return next;\n}\n\nexport { updateMotionValuesFromProps };\n","import { getOrigin, checkTargetForNewValues } from '../utils/setters.mjs';\nimport { parseDomVariant } from './utils/parse-dom-variant.mjs';\nimport { VisualElement } from '../VisualElement.mjs';\n\nclass DOMVisualElement extends VisualElement {\n    sortInstanceNodePosition(a, b) {\n        /**\n         * compareDocumentPosition returns a bitmask, by using the bitwise &\n         * we're returning true if 2 in that bitmask is set to true. 2 is set\n         * to true if b preceeds a.\n         */\n        return a.compareDocumentPosition(b) & 2 ? 1 : -1;\n    }\n    getBaseTargetFromProps(props, key) {\n        return props.style ? props.style[key] : undefined;\n    }\n    removeValueFromRenderState(key, { vars, style }) {\n        delete vars[key];\n        delete style[key];\n    }\n    makeTargetAnimatableFromInstance({ transition, transitionEnd, ...target }, { transformValues }, isMounted) {\n        let origin = getOrigin(target, transition || {}, this);\n        /**\n         * If Framer has provided a function to convert `Color` etc value types, convert them\n         */\n        if (transformValues) {\n            if (transitionEnd)\n                transitionEnd = transformValues(transitionEnd);\n            if (target)\n                target = transformValues(target);\n            if (origin)\n                origin = transformValues(origin);\n        }\n        if (isMounted) {\n            checkTargetForNewValues(this, target, origin);\n            const parsed = parseDomVariant(this, target, origin, transitionEnd);\n            transitionEnd = parsed.transitionEnd;\n            target = parsed.target;\n        }\n        return {\n            transition,\n            transitionEnd,\n            ...target,\n        };\n    }\n}\n\nexport { DOMVisualElement };\n","import { buildHTMLStyles } from './utils/build-styles.mjs';\nimport { isCSSVariableName } from '../dom/utils/is-css-variable.mjs';\nimport { transformProps } from './utils/transform.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { renderHTML } from './utils/render.mjs';\nimport { getDefaultValueType } from '../dom/value-types/defaults.mjs';\nimport { measureViewportBox } from '../../projection/utils/measure.mjs';\nimport { DOMVisualElement } from '../dom/DOMVisualElement.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction getComputedStyle(element) {\n    return window.getComputedStyle(element);\n}\nclass HTMLVisualElement extends DOMVisualElement {\n    readValueFromInstance(instance, key) {\n        if (transformProps.has(key)) {\n            const defaultType = getDefaultValueType(key);\n            return defaultType ? defaultType.default || 0 : 0;\n        }\n        else {\n            const computedStyle = getComputedStyle(instance);\n            const value = (isCSSVariableName(key)\n                ? computedStyle.getPropertyValue(key)\n                : computedStyle[key]) || 0;\n            return typeof value === \"string\" ? value.trim() : value;\n        }\n    }\n    measureInstanceViewportBox(instance, { transformPagePoint }) {\n        return measureViewportBox(instance, transformPagePoint);\n    }\n    build(renderState, latestValues, options, props) {\n        buildHTMLStyles(renderState, latestValues, options, props.transformTemplate);\n    }\n    scrapeMotionValuesFromProps(props, prevProps) {\n        return scrapeMotionValuesFromProps(props, prevProps);\n    }\n    handleChildMotionValue() {\n        if (this.childSubscription) {\n            this.childSubscription();\n            delete this.childSubscription;\n        }\n        const { children } = this.props;\n        if (isMotionValue(children)) {\n            this.childSubscription = children.on(\"change\", (latest) => {\n                if (this.current)\n                    this.current.textContent = `${latest}`;\n            });\n        }\n    }\n    renderInstance(instance, renderState, styleProp, projection) {\n        renderHTML(instance, renderState, styleProp, projection);\n    }\n}\n\nexport { HTMLVisualElement, getComputedStyle };\n","import { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { DOMVisualElement } from '../dom/DOMVisualElement.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { camelToDash } from '../dom/utils/camel-to-dash.mjs';\nimport { camelCaseAttributes } from './utils/camel-case-attrs.mjs';\nimport { transformProps } from '../html/utils/transform.mjs';\nimport { renderSVG } from './utils/render.mjs';\nimport { getDefaultValueType } from '../dom/value-types/defaults.mjs';\nimport { createBox } from '../../projection/geometry/models.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\n\nclass SVGVisualElement extends DOMVisualElement {\n    constructor() {\n        super(...arguments);\n        this.isSVGTag = false;\n    }\n    getBaseTargetFromProps(props, key) {\n        return props[key];\n    }\n    readValueFromInstance(instance, key) {\n        if (transformProps.has(key)) {\n            const defaultType = getDefaultValueType(key);\n            return defaultType ? defaultType.default || 0 : 0;\n        }\n        key = !camelCaseAttributes.has(key) ? camelToDash(key) : key;\n        return instance.getAttribute(key);\n    }\n    measureInstanceViewportBox() {\n        return createBox();\n    }\n    scrapeMotionValuesFromProps(props, prevProps) {\n        return scrapeMotionValuesFromProps(props, prevProps);\n    }\n    build(renderState, latestValues, options, props) {\n        buildSVGAttrs(renderState, latestValues, options, this.isSVGTag, props.transformTemplate);\n    }\n    renderInstance(instance, renderState, styleProp, projection) {\n        renderSVG(instance, renderState, styleProp, projection);\n    }\n    mount(instance) {\n        this.isSVGTag = isSVGTag(instance.tagName);\n        super.mount(instance);\n    }\n}\n\nexport { SVGVisualElement };\n","import { HTMLVisualElement } from '../html/HTMLVisualElement.mjs';\nimport { SVGVisualElement } from '../svg/SVGVisualElement.mjs';\nimport { isSVGComponent } from './utils/is-svg-component.mjs';\n\nconst createDomVisualElement = (Component, options) => {\n    return isSVGComponent(Component)\n        ? new SVGVisualElement(options, { enableHardwareAcceleration: false })\n        : new HTMLVisualElement(options, { enableHardwareAcceleration: true });\n};\n\nexport { createDomVisualElement };\n","import { createMotionComponent } from '../../motion/index.mjs';\nimport { createMotionProxy } from './motion-proxy.mjs';\nimport { createDomMotionConfig } from './utils/create-config.mjs';\nimport { gestureAnimations } from '../../motion/features/gestures.mjs';\nimport { animations } from '../../motion/features/animations.mjs';\nimport { drag } from '../../motion/features/drag.mjs';\nimport { createDomVisualElement } from './create-visual-element.mjs';\nimport { layout } from '../../motion/features/layout.mjs';\n\nconst preloadedFeatures = {\n    ...animations,\n    ...gestureAnimations,\n    ...drag,\n    ...layout,\n};\n/**\n * HTML & SVG components, optimised for use with gestures and animation. These can be used as\n * drop-in replacements for any HTML & SVG component, all CSS & SVG properties are supported.\n *\n * @public\n */\nconst motion = /*@__PURE__*/ createMotionProxy((Component, config) => createDomMotionConfig(Component, config, preloadedFeatures, createDomVisualElement));\n/**\n * Create a DOM `motion` component with the provided string. This is primarily intended\n * as a full alternative to `motion` for consumers who have to support environments that don't\n * support `Proxy`.\n *\n * ```javascript\n * import { createDomMotionComponent } from \"framer-motion\"\n *\n * const motion = {\n *   div: createDomMotionComponent('div')\n * }\n * ```\n *\n * @public\n */\nfunction createDomMotionComponent(key) {\n    return createMotionComponent(createDomMotionConfig(key, { forwardMotionProps: false }, preloadedFeatures, createDomVisualElement));\n}\n\nexport { createDomMotionComponent, motion };\n","import { HTMLProjectionNode } from '../../projection/node/HTMLProjectionNode.mjs';\nimport { MeasureLayout } from './layout/MeasureLayout.mjs';\n\nconst layout = {\n    layout: {\n        ProjectionNode: HTMLProjectionNode,\n        MeasureLayout,\n    },\n};\n\nexport { layout };\n","import { isSVGComponent } from './is-svg-component.mjs';\nimport { createUseRender } from '../use-render.mjs';\nimport { svgMotionConfig } from '../../svg/config-motion.mjs';\nimport { htmlMotionConfig } from '../../html/config-motion.mjs';\n\nfunction createDomMotionConfig(Component, { forwardMotionProps = false }, preloadedFeatures, createVisualElement) {\n    const baseConfig = isSVGComponent(Component)\n        ? svgMotionConfig\n        : htmlMotionConfig;\n    return {\n        ...baseConfig,\n        preloadedFeatures,\n        useRender: createUseRender(forwardMotionProps),\n        createVisualElement,\n        Component,\n    };\n}\n\nexport { createDomMotionConfig };\n","/**\n * Convert camelCase to dash-case properties.\n */\nconst camelToDash = (str) => str.replace(/([a-z])([A-Z])/g, \"$1-$2\").toLowerCase();\n\nexport { camelToDash };\n","const checkStringStartsWith = (token) => (key) => typeof key === \"string\" && key.startsWith(token);\nconst isCSSVariableName = checkStringStartsWith(\"--\");\nconst isCSSVariableToken = checkStringStartsWith(\"var(--\");\nconst cssVariableRegex = /var\\s*\\(\\s*--[\\w-]+(\\s*,\\s*(?:(?:[^)(]|\\((?:[^)(]+|\\([^)(]*\\))*\\))*)+)?\\s*\\)/g;\n\nexport { cssVariableRegex, isCSSVariableName, isCSSVariableToken };\n","import { complex } from '../../../value/types/complex/index.mjs';\nimport { filter } from '../../../value/types/complex/filter.mjs';\nimport { getDefaultValueType } from './defaults.mjs';\n\nfunction getAnimatableNone(key, value) {\n    let defaultValueType = getDefaultValueType(key);\n    if (defaultValueType !== filter)\n        defaultValueType = complex;\n    // If value is not recognised as animatable, ie \"none\", create an animatable version origin based on the target\n    return defaultValueType.getAnimatableNone\n        ? defaultValueType.getAnimatableNone(value)\n        : undefined;\n}\n\nexport { getAnimatableNone };\n","import { color } from '../../../value/types/color/index.mjs';\nimport { filter } from '../../../value/types/complex/filter.mjs';\nimport { numberValueTypes } from './number.mjs';\n\n/**\n * A map of default value types for common values\n */\nconst defaultValueTypes = {\n    ...numberValueTypes,\n    // Color props\n    color,\n    backgroundColor: color,\n    outlineColor: color,\n    fill: color,\n    stroke: color,\n    // Border props\n    borderColor: color,\n    borderTopColor: color,\n    borderRightColor: color,\n    borderBottomColor: color,\n    borderLeftColor: color,\n    filter,\n    WebkitFilter: filter,\n};\n/**\n * Gets the default ValueType for the provided value key\n */\nconst getDefaultValueType = (key) => defaultValueTypes[key];\n\nexport { defaultValueTypes, getDefaultValueType };\n","/**\n * ValueType for \"auto\"\n */\nconst auto = {\n    test: (v) => v === \"auto\",\n    parse: (v) => v,\n};\n\nexport { auto };\n","import { number } from '../../../value/types/numbers/index.mjs';\nimport { px, percent, degrees, vw, vh } from '../../../value/types/numbers/units.mjs';\nimport { testValueType } from './test.mjs';\nimport { auto } from './type-auto.mjs';\n\n/**\n * A list of value types commonly used for dimensions\n */\nconst dimensionValueTypes = [number, px, percent, degrees, vw, vh, auto];\n/**\n * Tests a dimensional value against the list of dimension ValueTypes\n */\nconst findDimensionValueType = (v) => dimensionValueTypes.find(testValueType(v));\n\nexport { dimensionValueTypes, findDimensionValueType };\n","import { number } from '../../../value/types/numbers/index.mjs';\n\nconst int = {\n    ...number,\n    transform: Math.round,\n};\n\nexport { int };\n","import { scale, alpha } from '../../../value/types/numbers/index.mjs';\nimport { px, degrees, progressPercentage } from '../../../value/types/numbers/units.mjs';\nimport { int } from './type-int.mjs';\n\nconst numberValueTypes = {\n    // Border props\n    borderWidth: px,\n    borderTopWidth: px,\n    borderRightWidth: px,\n    borderBottomWidth: px,\n    borderLeftWidth: px,\n    borderRadius: px,\n    radius: px,\n    borderTopLeftRadius: px,\n    borderTopRightRadius: px,\n    borderBottomRightRadius: px,\n    borderBottomLeftRadius: px,\n    // Positioning props\n    width: px,\n    maxWidth: px,\n    height: px,\n    maxHeight: px,\n    size: px,\n    top: px,\n    right: px,\n    bottom: px,\n    left: px,\n    // Spacing props\n    padding: px,\n    paddingTop: px,\n    paddingRight: px,\n    paddingBottom: px,\n    paddingLeft: px,\n    margin: px,\n    marginTop: px,\n    marginRight: px,\n    marginBottom: px,\n    marginLeft: px,\n    // Transform props\n    rotate: degrees,\n    rotateX: degrees,\n    rotateY: degrees,\n    rotateZ: degrees,\n    scale,\n    scaleX: scale,\n    scaleY: scale,\n    scaleZ: scale,\n    skew: degrees,\n    skewX: degrees,\n    skewY: degrees,\n    distance: px,\n    translateX: px,\n    translateY: px,\n    translateZ: px,\n    x: px,\n    y: px,\n    z: px,\n    perspective: px,\n    transformPerspective: px,\n    opacity: alpha,\n    originX: progressPercentage,\n    originY: progressPercentage,\n    originZ: px,\n    // Misc\n    zIndex: int,\n    // SVG\n    fillOpacity: alpha,\n    strokeOpacity: alpha,\n    numOctaves: int,\n};\n\nexport { numberValueTypes };\n","/**\n * Tests a provided value against a ValueType\n */\nconst testValueType = (v) => (type) => type.test(v);\n\nexport { testValueType };\n","/**\n * Generate a list of every possible transform key.\n */\nconst transformPropOrder = [\n    \"transformPerspective\",\n    \"x\",\n    \"y\",\n    \"z\",\n    \"translateX\",\n    \"translateY\",\n    \"translateZ\",\n    \"scale\",\n    \"scaleX\",\n    \"scaleY\",\n    \"rotate\",\n    \"rotateX\",\n    \"rotateY\",\n    \"rotateZ\",\n    \"skew\",\n    \"skewX\",\n    \"skewY\",\n];\n/**\n * A quick lookup for transform props.\n */\nconst transformProps = new Set(transformPropOrder);\n\nexport { transformPropOrder, transformProps };\n","import { resolveVariantFromProps } from './resolve-variants.mjs';\n\n/**\n * Creates an object containing the latest state of every MotionValue on a VisualElement\n */\nfunction getCurrent(visualElement) {\n    const current = {};\n    visualElement.values.forEach((value, key) => (current[key] = value.get()));\n    return current;\n}\n/**\n * Creates an object containing the latest velocity of every MotionValue on a VisualElement\n */\nfunction getVelocity(visualElement) {\n    const velocity = {};\n    visualElement.values.forEach((value, key) => (velocity[key] = value.getVelocity()));\n    return velocity;\n}\nfunction resolveVariant(visualElement, definition, custom) {\n    const props = visualElement.getProps();\n    return resolveVariantFromProps(props, definition, custom !== undefined ? custom : props.custom, getCurrent(visualElement), getVelocity(visualElement));\n}\n\nexport { resolveVariant };\n","function resolveVariantFromProps(props, definition, custom, currentValues = {}, currentVelocity = {}) {\n    /**\n     * If the variant definition is a function, resolve.\n     */\n    if (typeof definition === \"function\") {\n        definition = definition(custom !== undefined ? custom : props.custom, currentValues, currentVelocity);\n    }\n    /**\n     * If the variant definition is a variant label, or\n     * the function returned a variant label, resolve.\n     */\n    if (typeof definition === \"string\") {\n        definition = props.variants && props.variants[definition];\n    }\n    /**\n     * At this point we've resolved both functions and variant labels,\n     * but the resolved variant label might itself have been a function.\n     * If so, resolve. This can only have returned a valid target object.\n     */\n    if (typeof definition === \"function\") {\n        definition = definition(custom !== undefined ? custom : props.custom, currentValues, currentVelocity);\n    }\n    return definition;\n}\n\nexport { resolveVariantFromProps };\n","import { color } from '../../../value/types/color/index.mjs';\nimport { complex } from '../../../value/types/complex/index.mjs';\nimport { dimensionValueTypes } from './dimensions.mjs';\nimport { testValueType } from './test.mjs';\n\n/**\n * A list of all ValueTypes\n */\nconst valueTypes = [...dimensionValueTypes, color, complex];\n/**\n * Tests a value against the list of ValueTypes\n */\nconst findValueType = (v) => valueTypes.find(testValueType(v));\n\nexport { findValueType };\n","import { isNumericalString } from '../../utils/is-numerical-string.mjs';\nimport { isZeroValueString } from '../../utils/is-zero-value-string.mjs';\nimport { resolveFinalValueInKeyframes } from '../../utils/resolve-value.mjs';\nimport { motionValue } from '../../value/index.mjs';\nimport { complex } from '../../value/types/complex/index.mjs';\nimport { getAnimatableNone } from '../dom/value-types/animatable-none.mjs';\nimport { findValueType } from '../dom/value-types/find.mjs';\nimport { resolveVariant } from './resolve-dynamic-variants.mjs';\n\n/**\n * Set VisualElement's MotionValue, creating a new MotionValue for it if\n * it doesn't exist.\n */\nfunction setMotionValue(visualElement, key, value) {\n    if (visualElement.hasValue(key)) {\n        visualElement.getValue(key).set(value);\n    }\n    else {\n        visualElement.addValue(key, motionValue(value));\n    }\n}\nfunction setTarget(visualElement, definition) {\n    const resolved = resolveVariant(visualElement, definition);\n    let { transitionEnd = {}, transition = {}, ...target } = resolved ? visualElement.makeTargetAnimatable(resolved, false) : {};\n    target = { ...target, ...transitionEnd };\n    for (const key in target) {\n        const value = resolveFinalValueInKeyframes(target[key]);\n        setMotionValue(visualElement, key, value);\n    }\n}\nfunction setVariants(visualElement, variantLabels) {\n    const reversedLabels = [...variantLabels].reverse();\n    reversedLabels.forEach((key) => {\n        const variant = visualElement.getVariant(key);\n        variant && setTarget(visualElement, variant);\n        if (visualElement.variantChildren) {\n            visualElement.variantChildren.forEach((child) => {\n                setVariants(child, variantLabels);\n            });\n        }\n    });\n}\nfunction setValues(visualElement, definition) {\n    if (Array.isArray(definition)) {\n        return setVariants(visualElement, definition);\n    }\n    else if (typeof definition === \"string\") {\n        return setVariants(visualElement, [definition]);\n    }\n    else {\n        setTarget(visualElement, definition);\n    }\n}\nfunction checkTargetForNewValues(visualElement, target, origin) {\n    var _a, _b;\n    const newValueKeys = Object.keys(target).filter((key) => !visualElement.hasValue(key));\n    const numNewValues = newValueKeys.length;\n    if (!numNewValues)\n        return;\n    for (let i = 0; i < numNewValues; i++) {\n        const key = newValueKeys[i];\n        const targetValue = target[key];\n        let value = null;\n        /**\n         * If the target is a series of keyframes, we can use the first value\n         * in the array. If this first value is null, we'll still need to read from the DOM.\n         */\n        if (Array.isArray(targetValue)) {\n            value = targetValue[0];\n        }\n        /**\n         * If the target isn't keyframes, or the first keyframe was null, we need to\n         * first check if an origin value was explicitly defined in the transition as \"from\",\n         * if not read the value from the DOM. As an absolute fallback, take the defined target value.\n         */\n        if (value === null) {\n            value = (_b = (_a = origin[key]) !== null && _a !== void 0 ? _a : visualElement.readValue(key)) !== null && _b !== void 0 ? _b : target[key];\n        }\n        /**\n         * If value is still undefined or null, ignore it. Preferably this would throw,\n         * but this was causing issues in Framer.\n         */\n        if (value === undefined || value === null)\n            continue;\n        if (typeof value === \"string\" &&\n            (isNumericalString(value) || isZeroValueString(value))) {\n            // If this is a number read as a string, ie \"0\" or \"200\", convert it to a number\n            value = parseFloat(value);\n        }\n        else if (!findValueType(value) && complex.test(targetValue)) {\n            value = getAnimatableNone(key, targetValue);\n        }\n        visualElement.addValue(key, motionValue(value, { owner: visualElement }));\n        if (origin[key] === undefined) {\n            origin[key] = value;\n        }\n        if (value !== null)\n            visualElement.setBaseTarget(key, value);\n    }\n}\nfunction getOriginFromTransition(key, transition) {\n    if (!transition)\n        return;\n    const valueTransition = transition[key] || transition[\"default\"] || transition;\n    return valueTransition.from;\n}\nfunction getOrigin(target, transition, visualElement) {\n    const origin = {};\n    for (const key in target) {\n        const transitionOrigin = getOriginFromTransition(key, transition);\n        if (transitionOrigin !== undefined) {\n            origin[key] = transitionOrigin;\n        }\n        else {\n            const value = visualElement.getValue(key);\n            if (value) {\n                origin[key] = value.get();\n            }\n        }\n    }\n    return origin;\n}\n\nexport { checkTargetForNewValues, getOrigin, getOriginFromTransition, setTarget, setValues };\n","function addUniqueItem(arr, item) {\n    if (arr.indexOf(item) === -1)\n        arr.push(item);\n}\nfunction removeItem(arr, item) {\n    const index = arr.indexOf(item);\n    if (index > -1)\n        arr.splice(index, 1);\n}\n// Adapted from array-move\nfunction moveItem([...arr], fromIndex, toIndex) {\n    const startIndex = fromIndex < 0 ? arr.length + fromIndex : fromIndex;\n    if (startIndex >= 0 && startIndex < arr.length) {\n        const endIndex = toIndex < 0 ? arr.length + toIndex : toIndex;\n        const [item] = arr.splice(fromIndex, 1);\n        arr.splice(endIndex, 0, item);\n    }\n    return arr;\n}\n\nexport { addUniqueItem, moveItem, removeItem };\n","const clamp = (min, max, v) => Math.min(Math.max(v, min), max);\n\nexport { clamp };\n","/**\n * Check if value is a numerical string, ie a string that is purely a number eg \"100\" or \"-100.1\"\n */\nconst isNumericalString = (v) => /^\\-?\\d*\\.?\\d+$/.test(v);\n\nexport { isNumericalString };\n","/**\n * Check if the value is a zero value string like \"0px\" or \"0%\"\n */\nconst isZeroValueString = (v) => /^0[^.\\s]+$/.test(v);\n\nexport { isZeroValueString };\n","/*\n  Value in range from progress\n\n  Given a lower limit and an upper limit, we return the value within\n  that range as expressed by progress (usually a number from 0 to 1)\n\n  So progress = 0.5 would change\n\n  from -------- to\n\n  to\n\n  from ---- to\n\n  E.g. from = 10, to = 20, progress = 0.5 => 15\n\n  @param [number]: Lower limit of range\n  @param [number]: Upper limit of range\n  @param [number]: The progress between lower and upper limits expressed 0-1\n  @return [number]: Value as calculated from progress within range (not limited within range)\n*/\nconst mix = (from, to, progress) => -progress * from + progress * to + from;\n\nexport { mix };\n","/**\n * Pipe\n * Compose other transformers to run linearily\n * pipe(min(20), max(40))\n * @param  {...functions} transformers\n * @return {function}\n */\nconst combineFunctions = (a, b) => (v) => b(a(v));\nconst pipe = (...transformers) => transformers.reduce(combineFunctions);\n\nexport { pipe };\n","/*\n  Progress within given range\n\n  Given a lower limit and an upper limit, we return the progress\n  (expressed as a number 0-1) represented by the given value, and\n  limit that progress to within 0-1.\n\n  @param [number]: Lower limit\n  @param [number]: Upper limit\n  @param [number]: Value to find progress within given range\n  @return [number]: Progress of value within range as expressed 0-1\n*/\nconst progress = (from, to, value) => {\n    const toFromDifference = to - from;\n    return toFromDifference === 0 ? 1 : (value - from) / toFromDifference;\n};\n\nexport { progress };\n","import { isKeyframesTarget } from '../animation/utils/is-keyframes-target.mjs';\n\nconst isCustomValue = (v) => {\n    return Boolean(v && typeof v === \"object\" && v.mix && v.toValue);\n};\nconst resolveFinalValueInKeyframes = (v) => {\n    // TODO maybe throw if v.length - 1 is placeholder token?\n    return isKeyframesTarget(v) ? v[v.length - 1] || 0 : v;\n};\n\nexport { isCustomValue, resolveFinalValueInKeyframes };\n","import { addUniqueItem, removeItem } from './array.mjs';\n\nclass SubscriptionManager {\n    constructor() {\n        this.subscriptions = [];\n    }\n    add(handler) {\n        addUniqueItem(this.subscriptions, handler);\n        return () => removeItem(this.subscriptions, handler);\n    }\n    notify(a, b, c) {\n        const numSubscriptions = this.subscriptions.length;\n        if (!numSubscriptions)\n            return;\n        if (numSubscriptions === 1) {\n            /**\n             * If there's only a single handler we can just call it without invoking a loop.\n             */\n            this.subscriptions[0](a, b, c);\n        }\n        else {\n            for (let i = 0; i < numSubscriptions; i++) {\n                /**\n                 * Check whether the handler exists before firing as it's possible\n                 * the subscriptions were modified during this loop running.\n                 */\n                const handler = this.subscriptions[i];\n                handler && handler(a, b, c);\n            }\n        }\n    }\n    getSize() {\n        return this.subscriptions.length;\n    }\n    clear() {\n        this.subscriptions.length = 0;\n    }\n}\n\nexport { SubscriptionManager };\n","/**\n * Converts seconds to milliseconds\n *\n * @param seconds - Time in seconds.\n * @return milliseconds - Converted time in milliseconds.\n */\nconst secondsToMilliseconds = (seconds) => seconds * 1000;\nconst millisecondsToSeconds = (milliseconds) => milliseconds / 1000;\n\nexport { millisecondsToSeconds, secondsToMilliseconds };\n","/*\n  Convert velocity into velocity per second\n\n  @param [number]: Unit per frame\n  @param [number]: Frame duration in ms\n*/\nfunction velocityPerSecond(velocity, frameDuration) {\n    return frameDuration ? velocity * (1000 / frameDuration) : 0;\n}\n\nexport { velocityPerSecond };\n","import { SubscriptionManager } from '../utils/subscription-manager.mjs';\nimport { velocityPerSecond } from '../utils/velocity-per-second.mjs';\nimport { warnOnce } from '../utils/warn-once.mjs';\nimport { frame, frameData } from '../frameloop/frame.mjs';\n\nconst isFloat = (value) => {\n    return !isNaN(parseFloat(value));\n};\nconst collectMotionValues = {\n    current: undefined,\n};\n/**\n * `MotionValue` is used to track the state and velocity of motion values.\n *\n * @public\n */\nclass MotionValue {\n    /**\n     * @param init - The initiating value\n     * @param config - Optional configuration options\n     *\n     * -  `transformer`: A function to transform incoming values with.\n     *\n     * @internal\n     */\n    constructor(init, options = {}) {\n        /**\n         * This will be replaced by the build step with the latest version number.\n         * When MotionValues are provided to motion components, warn if versions are mixed.\n         */\n        this.version = \"10.16.16\";\n        /**\n         * Duration, in milliseconds, since last updating frame.\n         *\n         * @internal\n         */\n        this.timeDelta = 0;\n        /**\n         * Timestamp of the last time this `MotionValue` was updated.\n         *\n         * @internal\n         */\n        this.lastUpdated = 0;\n        /**\n         * Tracks whether this value can output a velocity. Currently this is only true\n         * if the value is numerical, but we might be able to widen the scope here and support\n         * other value types.\n         *\n         * @internal\n         */\n        this.canTrackVelocity = false;\n        /**\n         * An object containing a SubscriptionManager for each active event.\n         */\n        this.events = {};\n        this.updateAndNotify = (v, render = true) => {\n            this.prev = this.current;\n            this.current = v;\n            // Update timestamp\n            const { delta, timestamp } = frameData;\n            if (this.lastUpdated !== timestamp) {\n                this.timeDelta = delta;\n                this.lastUpdated = timestamp;\n                frame.postRender(this.scheduleVelocityCheck);\n            }\n            // Update update subscribers\n            if (this.prev !== this.current && this.events.change) {\n                this.events.change.notify(this.current);\n            }\n            // Update velocity subscribers\n            if (this.events.velocityChange) {\n                this.events.velocityChange.notify(this.getVelocity());\n            }\n            // Update render subscribers\n            if (render && this.events.renderRequest) {\n                this.events.renderRequest.notify(this.current);\n            }\n        };\n        /**\n         * Schedule a velocity check for the next frame.\n         *\n         * This is an instanced and bound function to prevent generating a new\n         * function once per frame.\n         *\n         * @internal\n         */\n        this.scheduleVelocityCheck = () => frame.postRender(this.velocityCheck);\n        /**\n         * Updates `prev` with `current` if the value hasn't been updated this frame.\n         * This ensures velocity calculations return `0`.\n         *\n         * This is an instanced and bound function to prevent generating a new\n         * function once per frame.\n         *\n         * @internal\n         */\n        this.velocityCheck = ({ timestamp }) => {\n            if (timestamp !== this.lastUpdated) {\n                this.prev = this.current;\n                if (this.events.velocityChange) {\n                    this.events.velocityChange.notify(this.getVelocity());\n                }\n            }\n        };\n        this.hasAnimated = false;\n        this.prev = this.current = init;\n        this.canTrackVelocity = isFloat(this.current);\n        this.owner = options.owner;\n    }\n    /**\n     * Adds a function that will be notified when the `MotionValue` is updated.\n     *\n     * It returns a function that, when called, will cancel the subscription.\n     *\n     * When calling `onChange` inside a React component, it should be wrapped with the\n     * `useEffect` hook. As it returns an unsubscribe function, this should be returned\n     * from the `useEffect` function to ensure you don't add duplicate subscribers..\n     *\n     * ```jsx\n     * export const MyComponent = () => {\n     *   const x = useMotionValue(0)\n     *   const y = useMotionValue(0)\n     *   const opacity = useMotionValue(1)\n     *\n     *   useEffect(() => {\n     *     function updateOpacity() {\n     *       const maxXY = Math.max(x.get(), y.get())\n     *       const newOpacity = transform(maxXY, [0, 100], [1, 0])\n     *       opacity.set(newOpacity)\n     *     }\n     *\n     *     const unsubscribeX = x.on(\"change\", updateOpacity)\n     *     const unsubscribeY = y.on(\"change\", updateOpacity)\n     *\n     *     return () => {\n     *       unsubscribeX()\n     *       unsubscribeY()\n     *     }\n     *   }, [])\n     *\n     *   return <motion.div style={{ x }} />\n     * }\n     * ```\n     *\n     * @param subscriber - A function that receives the latest value.\n     * @returns A function that, when called, will cancel this subscription.\n     *\n     * @deprecated\n     */\n    onChange(subscription) {\n        if (process.env.NODE_ENV !== \"production\") {\n            warnOnce(false, `value.onChange(callback) is deprecated. Switch to value.on(\"change\", callback).`);\n        }\n        return this.on(\"change\", subscription);\n    }\n    on(eventName, callback) {\n        if (!this.events[eventName]) {\n            this.events[eventName] = new SubscriptionManager();\n        }\n        const unsubscribe = this.events[eventName].add(callback);\n        if (eventName === \"change\") {\n            return () => {\n                unsubscribe();\n                /**\n                 * If we have no more change listeners by the start\n                 * of the next frame, stop active animations.\n                 */\n                frame.read(() => {\n                    if (!this.events.change.getSize()) {\n                        this.stop();\n                    }\n                });\n            };\n        }\n        return unsubscribe;\n    }\n    clearListeners() {\n        for (const eventManagers in this.events) {\n            this.events[eventManagers].clear();\n        }\n    }\n    /**\n     * Attaches a passive effect to the `MotionValue`.\n     *\n     * @internal\n     */\n    attach(passiveEffect, stopPassiveEffect) {\n        this.passiveEffect = passiveEffect;\n        this.stopPassiveEffect = stopPassiveEffect;\n    }\n    /**\n     * Sets the state of the `MotionValue`.\n     *\n     * @remarks\n     *\n     * ```jsx\n     * const x = useMotionValue(0)\n     * x.set(10)\n     * ```\n     *\n     * @param latest - Latest value to set.\n     * @param render - Whether to notify render subscribers. Defaults to `true`\n     *\n     * @public\n     */\n    set(v, render = true) {\n        if (!render || !this.passiveEffect) {\n            this.updateAndNotify(v, render);\n        }\n        else {\n            this.passiveEffect(v, this.updateAndNotify);\n        }\n    }\n    setWithVelocity(prev, current, delta) {\n        this.set(current);\n        this.prev = prev;\n        this.timeDelta = delta;\n    }\n    /**\n     * Set the state of the `MotionValue`, stopping any active animations,\n     * effects, and resets velocity to `0`.\n     */\n    jump(v) {\n        this.updateAndNotify(v);\n        this.prev = v;\n        this.stop();\n        if (this.stopPassiveEffect)\n            this.stopPassiveEffect();\n    }\n    /**\n     * Returns the latest state of `MotionValue`\n     *\n     * @returns - The latest state of `MotionValue`\n     *\n     * @public\n     */\n    get() {\n        if (collectMotionValues.current) {\n            collectMotionValues.current.push(this);\n        }\n        return this.current;\n    }\n    /**\n     * @public\n     */\n    getPrevious() {\n        return this.prev;\n    }\n    /**\n     * Returns the latest velocity of `MotionValue`\n     *\n     * @returns - The latest velocity of `MotionValue`. Returns `0` if the state is non-numerical.\n     *\n     * @public\n     */\n    getVelocity() {\n        // This could be isFloat(this.prev) && isFloat(this.current), but that would be wasteful\n        return this.canTrackVelocity\n            ? // These casts could be avoided if parseFloat would be typed better\n                velocityPerSecond(parseFloat(this.current) -\n                    parseFloat(this.prev), this.timeDelta)\n            : 0;\n    }\n    /**\n     * Registers a new animation to control this `MotionValue`. Only one\n     * animation can drive a `MotionValue` at one time.\n     *\n     * ```jsx\n     * value.start()\n     * ```\n     *\n     * @param animation - A function that starts the provided animation\n     *\n     * @internal\n     */\n    start(startAnimation) {\n        this.stop();\n        return new Promise((resolve) => {\n            this.hasAnimated = true;\n            this.animation = startAnimation(resolve);\n            if (this.events.animationStart) {\n                this.events.animationStart.notify();\n            }\n        }).then(() => {\n            if (this.events.animationComplete) {\n                this.events.animationComplete.notify();\n            }\n            this.clearAnimation();\n        });\n    }\n    /**\n     * Stop the currently active animation.\n     *\n     * @public\n     */\n    stop() {\n        if (this.animation) {\n            this.animation.stop();\n            if (this.events.animationCancel) {\n                this.events.animationCancel.notify();\n            }\n        }\n        this.clearAnimation();\n    }\n    /**\n     * Returns `true` if this value is currently animating.\n     *\n     * @public\n     */\n    isAnimating() {\n        return !!this.animation;\n    }\n    clearAnimation() {\n        delete this.animation;\n    }\n    /**\n     * Destroy and clean up subscribers to this `MotionValue`.\n     *\n     * The `MotionValue` hooks like `useMotionValue` and `useTransform` automatically\n     * handle the lifecycle of the returned `MotionValue`, so this method is only necessary if you've manually\n     * created a `MotionValue` via the `motionValue` function.\n     *\n     * @public\n     */\n    destroy() {\n        this.clearListeners();\n        this.stop();\n        if (this.stopPassiveEffect) {\n            this.stopPassiveEffect();\n        }\n    }\n}\nfunction motionValue(init, options) {\n    return new MotionValue(init, options);\n}\n\nexport { MotionValue, collectMotionValues, motionValue };\n","import { rgba } from './rgba.mjs';\nimport { isColorString } from './utils.mjs';\n\nfunction parseHex(v) {\n    let r = \"\";\n    let g = \"\";\n    let b = \"\";\n    let a = \"\";\n    // If we have 6 characters, ie #FF0000\n    if (v.length > 5) {\n        r = v.substring(1, 3);\n        g = v.substring(3, 5);\n        b = v.substring(5, 7);\n        a = v.substring(7, 9);\n        // Or we have 3 characters, ie #F00\n    }\n    else {\n        r = v.substring(1, 2);\n        g = v.substring(2, 3);\n        b = v.substring(3, 4);\n        a = v.substring(4, 5);\n        r += r;\n        g += g;\n        b += b;\n        a += a;\n    }\n    return {\n        red: parseInt(r, 16),\n        green: parseInt(g, 16),\n        blue: parseInt(b, 16),\n        alpha: a ? parseInt(a, 16) / 255 : 1,\n    };\n}\nconst hex = {\n    test: isColorString(\"#\"),\n    parse: parseHex,\n    transform: rgba.transform,\n};\n\nexport { hex };\n","import { alpha } from '../numbers/index.mjs';\nimport { percent } from '../numbers/units.mjs';\nimport { sanitize } from '../utils.mjs';\nimport { isColorString, splitColor } from './utils.mjs';\n\nconst hsla = {\n    test: isColorString(\"hsl\", \"hue\"),\n    parse: splitColor(\"hue\", \"saturation\", \"lightness\"),\n    transform: ({ hue, saturation, lightness, alpha: alpha$1 = 1 }) => {\n        return (\"hsla(\" +\n            Math.round(hue) +\n            \", \" +\n            percent.transform(sanitize(saturation)) +\n            \", \" +\n            percent.transform(sanitize(lightness)) +\n            \", \" +\n            sanitize(alpha.transform(alpha$1)) +\n            \")\");\n    },\n};\n\nexport { hsla };\n","import { isString } from '../utils.mjs';\nimport { hex } from './hex.mjs';\nimport { hsla } from './hsla.mjs';\nimport { rgba } from './rgba.mjs';\n\nconst color = {\n    test: (v) => rgba.test(v) || hex.test(v) || hsla.test(v),\n    parse: (v) => {\n        if (rgba.test(v)) {\n            return rgba.parse(v);\n        }\n        else if (hsla.test(v)) {\n            return hsla.parse(v);\n        }\n        else {\n            return hex.parse(v);\n        }\n    },\n    transform: (v) => {\n        return isString(v)\n            ? v\n            : v.hasOwnProperty(\"red\")\n                ? rgba.transform(v)\n                : hsla.transform(v);\n    },\n};\n\nexport { color };\n","import { clamp } from '../../../utils/clamp.mjs';\nimport { number, alpha } from '../numbers/index.mjs';\nimport { sanitize } from '../utils.mjs';\nimport { isColorString, splitColor } from './utils.mjs';\n\nconst clampRgbUnit = (v) => clamp(0, 255, v);\nconst rgbUnit = {\n    ...number,\n    transform: (v) => Math.round(clampRgbUnit(v)),\n};\nconst rgba = {\n    test: isColorString(\"rgb\", \"red\"),\n    parse: splitColor(\"red\", \"green\", \"blue\"),\n    transform: ({ red, green, blue, alpha: alpha$1 = 1 }) => \"rgba(\" +\n        rgbUnit.transform(red) +\n        \", \" +\n        rgbUnit.transform(green) +\n        \", \" +\n        rgbUnit.transform(blue) +\n        \", \" +\n        sanitize(alpha.transform(alpha$1)) +\n        \")\",\n};\n\nexport { rgbUnit, rgba };\n","import { isString, singleColorRegex, floatRegex } from '../utils.mjs';\n\n/**\n * Returns true if the provided string is a color, ie rgba(0,0,0,0) or #000,\n * but false if a number or multiple colors\n */\nconst isColorString = (type, testProp) => (v) => {\n    return Boolean((isString(v) && singleColorRegex.test(v) && v.startsWith(type)) ||\n        (testProp && Object.prototype.hasOwnProperty.call(v, testProp)));\n};\nconst splitColor = (aName, bName, cName) => (v) => {\n    if (!isString(v))\n        return v;\n    const [a, b, c, alpha] = v.match(floatRegex);\n    return {\n        [aName]: parseFloat(a),\n        [bName]: parseFloat(b),\n        [cName]: parseFloat(c),\n        alpha: alpha !== undefined ? parseFloat(alpha) : 1,\n    };\n};\n\nexport { isColorString, splitColor };\n","import { complex } from './index.mjs';\nimport { floatRegex } from '../utils.mjs';\n\n/**\n * Properties that should default to 1 or 100%\n */\nconst maxDefaults = new Set([\"brightness\", \"contrast\", \"saturate\", \"opacity\"]);\nfunction applyDefaultFilter(v) {\n    const [name, value] = v.slice(0, -1).split(\"(\");\n    if (name === \"drop-shadow\")\n        return v;\n    const [number] = value.match(floatRegex) || [];\n    if (!number)\n        return v;\n    const unit = value.replace(number, \"\");\n    let defaultValue = maxDefaults.has(name) ? 1 : 0;\n    if (number !== value)\n        defaultValue *= 100;\n    return name + \"(\" + defaultValue + unit + \")\";\n}\nconst functionRegex = /([a-z-]*)\\(.*?\\)/g;\nconst filter = {\n    ...complex,\n    getAnimatableNone: (v) => {\n        const functions = v.match(functionRegex);\n        return functions ? functions.map(applyDefaultFilter).join(\" \") : v;\n    },\n};\n\nexport { filter };\n","import { cssVariableRegex } from '../../../render/dom/utils/is-css-variable.mjs';\nimport { noop } from '../../../utils/noop.mjs';\nimport { color } from '../color/index.mjs';\nimport { number } from '../numbers/index.mjs';\nimport { colorRegex, floatRegex, isString, sanitize } from '../utils.mjs';\n\nfunction test(v) {\n    var _a, _b;\n    return (isNaN(v) &&\n        isString(v) &&\n        (((_a = v.match(floatRegex)) === null || _a === void 0 ? void 0 : _a.length) || 0) +\n            (((_b = v.match(colorRegex)) === null || _b === void 0 ? void 0 : _b.length) || 0) >\n            0);\n}\nconst cssVarTokeniser = {\n    regex: cssVariableRegex,\n    countKey: \"Vars\",\n    token: \"${v}\",\n    parse: noop,\n};\nconst colorTokeniser = {\n    regex: colorRegex,\n    countKey: \"Colors\",\n    token: \"${c}\",\n    parse: color.parse,\n};\nconst numberTokeniser = {\n    regex: floatRegex,\n    countKey: \"Numbers\",\n    token: \"${n}\",\n    parse: number.parse,\n};\nfunction tokenise(info, { regex, countKey, token, parse }) {\n    const matches = info.tokenised.match(regex);\n    if (!matches)\n        return;\n    info[\"num\" + countKey] = matches.length;\n    info.tokenised = info.tokenised.replace(regex, token);\n    info.values.push(...matches.map(parse));\n}\nfunction analyseComplexValue(value) {\n    const originalValue = value.toString();\n    const info = {\n        value: originalValue,\n        tokenised: originalValue,\n        values: [],\n        numVars: 0,\n        numColors: 0,\n        numNumbers: 0,\n    };\n    if (info.value.includes(\"var(--\"))\n        tokenise(info, cssVarTokeniser);\n    tokenise(info, colorTokeniser);\n    tokenise(info, numberTokeniser);\n    return info;\n}\nfunction parseComplexValue(v) {\n    return analyseComplexValue(v).values;\n}\nfunction createTransformer(source) {\n    const { values, numColors, numVars, tokenised } = analyseComplexValue(source);\n    const numValues = values.length;\n    return (v) => {\n        let output = tokenised;\n        for (let i = 0; i < numValues; i++) {\n            if (i < numVars) {\n                output = output.replace(cssVarTokeniser.token, v[i]);\n            }\n            else if (i < numVars + numColors) {\n                output = output.replace(colorTokeniser.token, color.transform(v[i]));\n            }\n            else {\n                output = output.replace(numberTokeniser.token, sanitize(v[i]));\n            }\n        }\n        return output;\n    };\n}\nconst convertNumbersToZero = (v) => typeof v === \"number\" ? 0 : v;\nfunction getAnimatableNone(v) {\n    const parsed = parseComplexValue(v);\n    const transformer = createTransformer(v);\n    return transformer(parsed.map(convertNumbersToZero));\n}\nconst complex = {\n    test,\n    parse: parseComplexValue,\n    createTransformer,\n    getAnimatableNone,\n};\n\nexport { analyseComplexValue, complex };\n","import { clamp } from '../../../utils/clamp.mjs';\n\nconst number = {\n    test: (v) => typeof v === \"number\",\n    parse: parseFloat,\n    transform: (v) => v,\n};\nconst alpha = {\n    ...number,\n    transform: (v) => clamp(0, 1, v),\n};\nconst scale = {\n    ...number,\n    default: 1,\n};\n\nexport { alpha, number, scale };\n","import { isString } from '../utils.mjs';\n\nconst createUnitType = (unit) => ({\n    test: (v) => isString(v) && v.endsWith(unit) && v.split(\" \").length === 1,\n    parse: parseFloat,\n    transform: (v) => `${v}${unit}`,\n});\nconst degrees = createUnitType(\"deg\");\nconst percent = createUnitType(\"%\");\nconst px = createUnitType(\"px\");\nconst vh = createUnitType(\"vh\");\nconst vw = createUnitType(\"vw\");\nconst progressPercentage = {\n    ...percent,\n    parse: (v) => percent.parse(v) / 100,\n    transform: (v) => percent.transform(v * 100),\n};\n\nexport { degrees, percent, progressPercentage, px, vh, vw };\n","/**\n * TODO: When we move from string as a source of truth to data models\n * everything in this folder should probably be referred to as models vs types\n */\n// If this number is a decimal, make it just five decimal places\n// to avoid exponents\nconst sanitize = (v) => Math.round(v * 100000) / 100000;\nconst floatRegex = /(-)?([\\d]*\\.?[\\d])+/g;\nconst colorRegex = /(#[0-9a-f]{3,8}|(rgb|hsl)a?\\((-?[\\d\\.]+%?[,\\s]+){2}(-?[\\d\\.]+%?)\\s*[\\,\\/]?\\s*[\\d\\.]*%?\\))/gi;\nconst singleColorRegex = /^(#[0-9a-f]{3,8}|(rgb|hsl)a?\\((-?[\\d\\.]+%?[,\\s]+){2}(-?[\\d\\.]+%?)\\s*[\\,\\/]?\\s*[\\d\\.]*%?\\))$/i;\nfunction isString(v) {\n    return typeof v === \"string\";\n}\n\nexport { colorRegex, floatRegex, isString, sanitize, singleColorRegex };\n","import { isMotionValue } from '../utils/is-motion-value.mjs';\n\nfunction isWillChangeMotionValue(value) {\n    return Boolean(isMotionValue(value) && value.add);\n}\n\nexport { isWillChangeMotionValue };\n","const isMotionValue = (value) => Boolean(value && value.getVelocity);\n\nexport { isMotionValue };\n"],"names":["hadFocusVisibleRecentlyTimeout","hadKeyboardEvent","hadFocusVisibleRecently","inputTypesWhitelist","text","search","url","tel","email","password","number","date","month","week","time","datetime","handleKeyDown","event","metaKey","altKey","ctrlKey","handlePointerDown","handleVisibilityChange","this","visibilityState","isFocusVisible","target","matches","error","node","type","tagName","readOnly","isContentEditable","focusTriggersKeyboardModality","ref","React","doc","ownerDocument","addEventListener","isFocusVisibleRef","onFocus","current","onBlur","window","clearTimeout","setTimeout","setRef","value","fn","useEnhancedEffect","arguments","useForkRef","_len","length","refs","Array","_key","every","instance","forEach","animationControls","hasMounted","subscribers","Set","controls","subscribe","visualElement","add","delete","start","definition","transitionOverride","invariant","animations","push","animateVisualElement","Promise","all","set","setValues","stop","values","stopAnimation","mount","useAnimation","useConstant","useIsomorphicLayoutEffect","instantAnimationState","isBezierDefinition","easing","isArray","isWaapiSupportedEasing","Boolean","supportedWaapiEasing","cubicBezierAsString","_ref","a","b","c","d","concat","linear","ease","easeIn","easeOut","easeInOut","circIn","circOut","backIn","backOut","mapEasingToNativeEasing","map","calcBezier","t","a1","a2","subdivisionPrecision","subdivisionMaxIterations","cubicBezier","mX1","mY1","mX2","mY2","noop","getTForX","aX","x","lowerBound","upperBound","currentX","currentT","i","Math","abs","binarySubdivide","isEasingArray","reverseEasing","backInOut","mirrorEasing","easingLookup","circInOut","anticipate","p","pow","easingDefinitionToFunction","x1","y1","x2","y2","undefined","hueToRgb","q","mixLinearColor","from","to","v","fromExpo","sqrt","max","colorTypes","hex","rgba","hsla","asRGBA","color","find","test","model","parse","hue","saturation","lightness","alpha","red","green","blue","round","hslaToRgba","mixColor","fromRGBA","toRGBA","blended","mix","transform","mixImmediate","origin","getMixer","startsWith","mixComplex","mixArray","output","numValues","blendValue","fromThis","mixObject","key","template","complex","createTransformer","originStats","analyseComplexValue","targetStats","numVars","numColors","numNumbers","pipe","warning","mixNumber","createMixers","customMixer","mixers","mixerFactory","numMixers","mixer","easingFunction","interpolate","input","clamp","isClamp","inputLength","reverse","interpolator","progressInRange","progress","defaultOffset","arr","offset","remaining","min","offsetProgress","fillOffset","keyframes","duration","keyframeValues","times","easingFunctions","state","done","absoluteTimes","o","convertOffsetToTimes","mapTimeToKeyframe","splice","calculatedDuration","next","velocitySampleDuration","calcGeneratorVelocity","resolveValue","prevT","velocityPerSecond","safeMin","minDuration","maxDuration","minDamping","maxDamping","findSpring","envelope","derivative","bounce","velocity","mass","secondsToMilliseconds","dampingRatio","millisecondsToSeconds","undampedFreq","exponentialDecay","delta","calcAngularFreq","exp","e","f","g","initialGuess","result","rootIterations","approximateRoot","isNaN","stiffness","damping","durationKeys","physicsKeys","isSpringType","options","keys","some","spring","restDelta","restSpeed","isResolvedFromDuration","springOptions","derived","getSpringOptions","initialVelocity","initialDelta","undampedAngularFreq","isGranularScale","resolveSpring","angularFreq","sin","cos","dampedAngularFreq","freqForT","sinh","cosh","currentVelocity","isBelowVelocityThreshold","isBelowDisplacementThreshold","inertia","power","timeConstant","bounceDamping","bounceStiffness","modifyTarget","nearestBoundary","amplitude","ideal","calcDelta","calcLatest","applyFriction","latest","timeReachedBoundary","spring$1","checkCatchBoundary","hasUpdatedFrame","frameloopDriver","update","passTimestamp","timestamp","frame","cancelFrame","now","frameData","isProcessing","performance","maxGeneratorDuration","calcGeneratorDuration","generator","Infinity","types","decay","tween","animateValue","resolveFinishedPromise","currentFinishedPromise","autoplay","delay","driver","keyframes$1","repeat","repeatDelay","repeatType","onPlay","onStop","onComplete","onUpdate","speed","hasStopped","updateFinishedPromise","resolve","animationDriver","generatorFactory","mapNumbersToKeyframes","mirroredGenerator","playState","holdTime","startTime","cancelTime","resolvedDuration","totalDuration","currentTime","tick","timeWithoutDelay","isInDelayPhase","elapsed","frameGenerator","currentIteration","floor","iterationProgress","iterationIsOdd","isAnimationFinished","finish","stopAnimationDriver","cancel","play","then","reject","newTime","newSpeed","pause","complete","sample","supportsWaapi","callback","memo","Object","hasOwnProperty","call","Element","prototype","acceleratedValues","createAcceleratedAnimation","valueName","has","requiresPregeneratedKeyframes","sampleAnimation","pregeneratedKeyframes","animation","element","keyframeOptions","animate","fill","iterations","direction","animateStyle","owner","cancelAnimation","safeCancel","onfinish","getFinalKeyframe","attachTimeline","timeline","playbackRate","setWithVelocity","underDampedSpring","keyframesTransition","getDefaultTransition","valueKey","transformProps","isAnimatable","isNone","isZeroValueString","animateMotionValue","transition","valueTransition","getValueTransition","isTargetAnimatable","defaultOrigin","get","animatableTemplateValue","noneKeyframeIndexes","getAnimatableNone","getKeyframes","originKeyframe","targetKeyframe","isOriginAnimatable","getVelocity","isTransitionDefined","setValue","createInstantAnimation","isHandoff","HTMLElement","getProps","acceleratedAnimation","shouldBlockAnimation","protectedKeys","needsAnimating","shouldBlock","hasKeyframesChanged","animateTarget","transitionEnd","makeTargetAnimatable","willChange","getValue","animationTypeState","animationState","getState","valueTarget","HandoffAppearAnimations","appearId","optimizedAppearDataAttribute","canSkip","shouldReduceMotion","isWillChangeMotionValue","remove","setTarget","animateVariant","variant","resolved","resolveVariant","custom","getAnimation","getChildAnimations","variantChildren","size","forwardDelay","delayChildren","staggerChildren","staggerDirection","maxStaggerDuration","generateStaggerDuration","sort","sortByTreeOrder","child","notify","animateChildren","when","first","last","sortNodePosition","resolvedDefinition","camelToDash","isKeyframesTarget","_delay","acos","MotionConfigContext","createContext","transformPagePoint","isStatic","reducedMotion","MotionContext","LazyContext","strict","isRefObject","isVariantLabel","isAnimationControls","variantPriorityOrder","variantProps","isControllingVariants","props","name","isVariantNode","variants","useCreateMotionContext","initial","context","inherit","getCurrentTreeVariants","useContext","useMemo","variantLabelsAsDependency","prop","join","featureProps","exit","drag","focus","hover","tap","pan","inView","layout","featureDefinitions","isEnabled","SwitchLayoutGroupContext","motionComponentSymbol","Symbol","for","createMotionComponent","preloadedFeatures","createVisualElement","useRender","useVisualState","Component","features","loadFeatures","ForwardRefComponent","forwardRef","externalRef","MeasureLayout","configAndProps","layoutId","useLayoutId","visualState","isBrowser","parent","lazyContext","presenceContext","PresenceContext","reducedMotionConfig","visualElementRef","useRef","renderer","blockInitialAnimation","useInsertionEffect","wantsHandoff","HandoffComplete","render","animateChanges","useEffect","updateFeatures","useVisualElement","initialLayoutGroupConfig","isStrict","Provider","useCallback","unmount","useMotionRef","_ref2","layoutGroupId","LayoutGroupContext","id","createMotionProxy","createConfig","Proxy","componentCache","Map","_target","lowercaseSVGElements","isSVGComponent","includes","indexOf","scaleCorrectors","isForcedMotionValue","translateAlias","y","z","transformPerspective","numTransforms","transformPropOrder","getValueAsType","buildHTMLStyles","latestValues","transformTemplate","style","vars","transformOrigin","hasTransform","hasTransformOrigin","transformIsNone","isCSSVariableName","valueType","numberValueTypes","valueAsType","default","transformIsDefault","enableHardwareAcceleration","allowTransformNone","transformString","transformName","trim","buildTransform","originX","originY","originZ","createHtmlRenderState","copyRawValuesOnly","source","isMotionValue","useStyle","assign","useInitialMotionValues","transformValues","useHTMLProps","htmlProps","dragListener","draggable","userSelect","WebkitUserSelect","WebkitTouchCallout","touchAction","tabIndex","onTap","onTapStart","whileTap","validMotionProps","isValidMotionProp","shouldForward","isValidProp","require","_a","calcOrigin","px","dashKeys","array","camelKeys","buildSVGAttrs","isSVGTag","attrX","attrY","attrScale","pathLength","pathSpacing","pathOffset","viewBox","attrs","dimensions","pxOriginX","width","pxOriginY","height","calcSVGTransformOrigin","scale","spacing","useDashCase","buildSVGPath","createSvgRenderState","tag","toLowerCase","useSVGProps","_isStatic","visualProps","rawStyles","createUseRender","forwardMotionProps","filteredProps","isDom","filterProps","elementProps","children","renderedChildren","createElement","renderHTML","styleProp","projection","getProjectionStyles","setProperty","camelCaseAttributes","renderSVG","renderState","_styleProp","setAttribute","scrapeMotionValuesFromProps","prevProps","newValues","scrapeMotionValuesFromProps$1","charAt","toUpperCase","substring","resolveMotionValue","unwrappedValue","isCustomValue","toValue","makeUseVisualState","config","make","createRenderState","onMount","makeLatestValues","makeState","scrapeMotionValues","motionValues","isControllingVariants$1","isVariantNode$1","isInitialAnimationBlocked","variantToSet","resolveVariantFromProps","svgMotionConfig","read","getBBox","getBoundingClientRect","htmlMotionConfig","addDomEvent","eventName","handler","passive","removeEventListener","isPrimaryPointer","pointerType","button","isPrimary","extractEventInfo","pointType","point","addPointerInfo","addPointerEvent","createLock","lock","openLock","globalHorizontalLock","globalVerticalLock","getGlobalLock","openHorizontal","openVertical","isDragActive","openGestureLock","Feature","constructor","isMounted","addHoverEvent","isActive","callbackName","handleEvent","info","whileHover","setActive","isNodeOrChild","parentElement","fireSyntheticPointerEvent","syntheticPointerEvent","PointerEvent","observerCallbacks","WeakMap","observers","fireObserverCallback","entry","fireAllObserverCallbacks","entries","observeIntersection","rootInteresectionObserver","root","lookupRoot","document","rootObservers","JSON","stringify","IntersectionObserver","initIntersectionObserver","observe","unobserve","thresholdNames","gestureAnimations","super","hasEnteredView","isInView","startObserver","viewport","margin","rootMargin","amount","once","threshold","isIntersecting","onViewportEnter","onViewportLeave","hasOptionsChanged","prevViewport","hasViewportOptionChanged","removeStartListeners","removeEndListeners","removeAccessibleListeners","startPointerPress","startEvent","startInfo","isPressing","removePointerUpListener","endPointerPress","endEvent","endInfo","checkPressEnd","onTapCancel","removePointerCancelListener","cancelEvent","cancelInfo","cancelPress","startPress","startAccessiblePress","removeKeydownListener","keydownEvent","keyupEvent","removeBlurListener","handleBlur","removePointerListener","removeFocusListener","shallowCompare","prev","prevLength","reversePriorityOrder","numAnimationTypes","createAnimationState","animateList","createTypeState","whileInView","whileDrag","whileFocus","isInitialRender","buildResolvedTypeValues","acc","changedActiveType","getVariantContext","removedKeys","encounteredKeys","removedVariantIndex","typeState","propIsVariant","activeDelta","isInherited","manuallyAnimateOnMount","prevProp","variantDidChange","checkVariantsDidChange","shouldAnimateType","definitionList","resolvedValues","reduce","prevResolvedValues","allKeys","markToAnimate","fallbackAnimation","fallbackTarget","getBaseTarget","shouldAnimate","setAnimateFunction","makeAnimator","updateAnimationControlsSubscription","prevAnimate","isPresent","onExitComplete","prevIsPresent","prevPresenceContext","exitAnimation","register","distance","PanSession","handlers","contextWindow","lastMoveEvent","lastMoveEventInfo","updatePoint","getPanInfo","history","isPanStarted","isDistancePastThreshold","xDelta","yDelta","distance2D","onStart","onMove","handlePointerMove","transformPoint","handlePointerUp","end","onEnd","onSessionEnd","panInfo","initialInfo","onSessionStart","removeListeners","updateHandlers","subtractPoint","lastDevicePoint","startDevicePoint","timeDelta","timestampedPoint","lastPoint","calcLength","axis","isNear","maxDistance","calcAxisDelta","originPoint","translate","calcBoxDelta","calcRelativeAxis","relative","calcRelativeAxisPosition","calcRelativePosition","calcRelativeAxisConstraints","calcViewportAxisConstraints","layoutAxis","constraintsAxis","defaultElastic","resolveAxisElastic","dragElastic","minLabel","maxLabel","resolvePointElastic","label","createDelta","createBox","eachAxis","convertBoundingBoxToBox","top","left","right","bottom","isIdentityScale","hasScale","scaleX","scaleY","has2DTranslate","rotate","rotateX","rotateY","is2DTranslate","scalePoint","applyPointDelta","boxScale","applyAxisDelta","applyBoxDelta","box","snapToDefault","Number","isInteger","translateAxis","transformAxis","transforms","scaleKey","originKey","axisOrigin","xKeys","yKeys","transformBox","measureViewportBox","topLeft","bottomRight","transformBoxPoints","getContextWindow","defaultView","elementDragControls","VisualElementDragControls","openGlobalLock","isDragging","currentDirection","constraints","hasMutatedConstraints","elastic","originEvent","snapToCursor","panSession","dragPropagation","onDragStart","resolveConstraints","isAnimationBlocked","getAxisMotionValue","percent","measuredAxis","layoutBox","parseFloat","dragDirectionLock","onDirectionLock","onDrag","lockThreshold","getCurrentDirection","updateAxis","getTransformPagePoint","startAnimation","onDragEnd","_point","shouldDrag","axisValue","applyConstraints","dragConstraints","measure","prevConstraints","resolveRefConstraints","calcRelativeConstraints","resolveDragElastic","relativeConstraints","rebaseAxisConstraints","onMeasureDragConstraints","constraintsElement","constraintsBox","rootProjectionNode","viewportBox","scroll","measurePageBox","measuredConstraints","calcViewportConstraints","userConstraints","convertBoxToBoundingBox","dragMomentum","dragTransition","dragSnapToOrigin","onDragTransitionEnd","momentumAnimations","startAxisValueAnimation","dragKey","externalMotionValue","scalePositionWithinConstraints","boxProgress","sourceLength","targetLength","updateScroll","updateLayout","addListeners","stopPointerListener","measureDragConstraints","stopMeasureLayoutListener","stopResizeListener","stopLayoutUpdateListener","hasLayoutChanged","motionValue","asyncHandler","globalProjectionState","hasAnimatedSinceResize","hasEverUpdated","pixelsToPercent","pixels","correctBorderRadius","correct","correctBoxShadow","treeScale","projectionDelta","original","shadow","xScale","yScale","averageScale","MeasureLayoutWithContext","React__default","componentDidMount","layoutGroup","switchLayoutGroup","correctors","defaultScaleCorrectors","group","didUpdate","safeToRemove","setOptions","getSnapshotBeforeUpdate","layoutDependency","willUpdate","promote","relegate","postRender","stack","getStack","members","componentDidUpdate","queueMicrotask","currentAnimation","isLead","componentWillUnmount","promoteContext","scheduleCheckAfterUnmount","deregister","useId","usePresence","borderRadius","applyTo","borderTopLeftRadius","borderTopRightRadius","borderBottomLeftRadius","borderBottomRightRadius","boxShadow","borders","numBorders","asNumber","isPx","getRadius","radiusName","easeCrossfadeIn","compress","easeCrossfadeOut","copyAxisInto","originAxis","copyBoxInto","originBox","removePointDelta","removeAxisTransforms","sourceAxis","removeAxisDelta","removeBoxTransforms","sourceBox","isAxisDeltaZero","isDeltaZero","boxEqualsRounded","aspectRatio","NodeStack","addUniqueItem","scheduleRender","removeItem","prevLead","lead","indexOfNode","findIndex","member","preserveFollowOpacity","show","resumeFrom","preserveOpacity","snapshot","animationValues","isUpdating","isLayoutDirty","crossfade","hide","exitAnimationComplete","resumingFrom","removeLeadSnapshot","buildProjectionTransform","latestTransform","xTranslate","yTranslate","elementScaleX","elementScaleY","compareByDepth","depth","FlatTree","isDirty","transformAxes","hiddenVisibility","visibility","projectionFrameData","totalNodes","resolvedTargetDeltas","recalculatedProjection","createProjectionNode","attachResizeListener","defaultParent","measureScroll","checkIsScrollRoot","resetTransform","animationId","isTreeAnimating","isProjectionDirty","isSharedProjectionDirty","isTransformDirty","updateManuallyBlocked","updateBlockedByResize","isSVG","needsReset","shouldResetTransform","eventHandlers","hasTreeAnimated","updateScheduled","projectionUpdateScheduled","checkUpdateFailed","clearAllSnapshots","updateProjection","data","nodes","propagateDirtyNodes","resolveTargetDelta","calcProjection","cleanDirtyNodes","MotionDebug","record","hasProjected","isVisible","animationProgress","sharedNodes","path","SubscriptionManager","notifyListeners","subscriptionManager","args","hasListeners","SVGElement","cancelDelay","resizeUnblockUpdate","timeout","checkElapsed","finishAnimation","registerSharedNode","hasRelativeTargetChanged","newLayout","isTreeAnimationBlocked","relativeTarget","layoutTransition","defaultLayoutTransition","onLayoutAnimationStart","onLayoutAnimationComplete","targetChanged","targetLayout","hasOnlyRelativeTargetChanged","layoutRoot","setAnimationOrigin","animationOptions","blockUpdate","unblockUpdate","isUpdateBlocked","startUpdate","resetRotation","getTransformTemplate","shouldNotifyListeners","prevTransformTemplateValue","updateSnapshot","clearMeasurements","clearIsLayoutDirty","resetTransformStyle","notifyLayoutUpdate","steps","process","preRender","clearSnapshot","removeLeadSnapshots","scheduleUpdateProjection","alwaysMeasureLayout","prevLayout","layoutCorrected","phase","needsMeasurement","layoutScroll","isRoot","isResetRequested","hasProjection","transformTemplateValue","transformTemplateHasChanged","removeTransform","pageBox","removeElementScroll","roundAxis","measuredBox","boxWithoutScroll","rootScroll","applyTransform","transformOnly","withTransforms","boxWithoutTransform","setTargetDelta","targetDelta","forceRelativeParentToResolveTarget","relativeParent","resolvedRelativeTargetAt","forceRecalculation","getLead","isShared","attemptToResolveRelativeTarget","getClosestProjectingParent","relativeTargetOrigin","targetWithTransforms","isProjecting","pendingAnimation","prevTreeScaleX","prevTreeScaleY","treePath","isSharedTransition","treeLength","display","applyTreeDeltas","projectionTransform","projectionDeltaWithTransform","prevProjectionTransform","notifyAll","snapshotLatestValues","mixedValues","relativeLayout","isSharedLayoutAnimation","isOnlyMember","shouldCrossfadeOpacity","hasOpacityCrossfade","prevRelativeTarget","mixTargetDelta","mixAxisDelta","mixAxis","follow","opacity","opacityExit","borderLabel","followRadius","leadRadius","mixValues","motionValue$1","animateSingleValue","completeAnimation","applyTransformsToTarget","shouldAnimatePositionOnly","animationType","xLength","yLength","initialPromotionConfig","shouldPreserveFollowOpacity","getPrevLead","hasRotate","rotateZ","resetValues","setStaticValue","_b","styles","pointerEvents","emptyStyles","valuesToRender","corrected","num","resetTree","clear","measuredLayout","axisSnapshot","layoutDelta","visualDelta","parentSnapshot","parentLayout","relativeSnapshot","onBeforeLayoutMeasure","userAgentContains","string","navigator","userAgent","roundPoint","DocumentProjectionNode","documentElement","scrollLeft","body","scrollTop","HTMLProjectionNode","documentNode","getComputedStyle","position","removePointerDownListener","onPointerDown","pointerDownEvent","session","createPanHandlers","onPanSessionStart","onPanStart","onPan","onPanEnd","removeGroupControls","dragControls","ProjectionNode","splitCSSVariableRegex","maxDepth","getVariableValue","token","fallback","match","exec","parseCSSVariable","getPropertyValue","trimmed","isNumericalString","isCSSVariableToken","positionalKeys","isPositionalKey","isNumOrPxType","getPosFromMatrix","matrix","pos","split","getTranslateFromMatrix","pos2","pos3","_bbox","matrix3d","transformKeys","nonTranslationalTransformKeys","filter","positionalValues","_ref3","paddingLeft","paddingRight","_ref4","_ref5","paddingTop","paddingBottom","_ref6","_ref7","_ref8","_ref9","_ref10","_ref11","translateX","translateY","checkAndConvertChangedValueTypes","targetPositionalKeys","removedTransformValues","hasAttemptedToRemoveTransformValues","changedValueTypeKeys","hasValue","fromType","findDimensionValueType","toType","numKeyframes","fromIndex","removedTransforms","removeNonTranslationalTransform","jump","scrollY","pageYOffset","convertedTarget","convertChangedValueTypes","changedKeys","originBbox","elementComputedStyle","targetBbox","_ref12","scrollTo","unitConversion","hasPositionalKey","parseDomVariant","resolveCSSVariables","prefersReducedMotion","hasReducedMotionListener","visualElementStore","featureNames","numFeatures","propEventHandlers","numVariantProps","VisualElement","valueSubscriptions","prevMotionValues","events","propEventSubscriptions","notifyUpdate","triggerBuild","renderInstance","baseTarget","initialValues","initialMotionValues","_props","_prevProps","removeFromVariantTree","addVariantChild","bindToMotionValue","matchMedia","motionMediaQuery","setReducedMotionPreferences","addListener","initPrefersReducedMotion","valueIsTransform","removeOnChange","on","latestValue","removeOnRenderRequest","other","sortInstanceNodePosition","ProjectionNodeConstructor","renderedProps","FeatureConstructor","MeasureLayoutComponent","feature","build","measureInstanceViewportBox","getStaticValue","canMutate","makeTargetAnimatableFromInstance","listener","nextValue","prevValue","addValue","existingValue","hasAnimated","removeValue","updateMotionValuesFromProps","handleChildMotionValue","getVariant","getClosestVariantNode","closestVariantNode","unsubscribe","removeValueFromRenderState","defaultValue","readValue","getBaseTargetFromProps","readValueFromInstance","setBaseTarget","valueFromInitial","DOMVisualElement","compareDocumentPosition","getOrigin","checkTargetForNewValues","parsed","HTMLVisualElement","defaultType","getDefaultValueType","computedStyle","childSubscription","textContent","SVGVisualElement","getAttribute","createDomVisualElement","motion","createDomMotionConfig","str","replace","checkStringStartsWith","cssVariableRegex","defaultValueType","defaultValueTypes","backgroundColor","outlineColor","stroke","borderColor","borderTopColor","borderRightColor","borderBottomColor","borderLeftColor","WebkitFilter","dimensionValueTypes","degrees","vw","vh","testValueType","int","borderWidth","borderTopWidth","borderRightWidth","borderBottomWidth","borderLeftWidth","radius","maxWidth","maxHeight","padding","marginTop","marginRight","marginBottom","marginLeft","scaleZ","skew","skewX","skewY","translateZ","perspective","progressPercentage","zIndex","fillOpacity","strokeOpacity","numOctaves","getCurrent","currentValues","valueTypes","findValueType","setMotionValue","resolveFinalValueInKeyframes","setVariants","variantLabels","newValueKeys","numNewValues","targetValue","getOriginFromTransition","transitionOrigin","item","index","combineFunctions","transformers","toFromDifference","subscriptions","numSubscriptions","getSize","seconds","milliseconds","frameDuration","collectMotionValues","MotionValue","init","_this","version","lastUpdated","canTrackVelocity","updateAndNotify","scheduleVelocityCheck","change","velocityChange","renderRequest","velocityCheck","onChange","subscription","clearListeners","eventManagers","attach","passiveEffect","stopPassiveEffect","getPrevious","animationStart","animationComplete","clearAnimation","animationCancel","isAnimating","destroy","isColorString","r","parseInt","splitColor","alpha$1","sanitize","isString","rgbUnit","clampRgbUnit","testProp","singleColorRegex","aName","bName","cName","floatRegex","maxDefaults","applyDefaultFilter","slice","unit","functionRegex","functions","cssVarTokeniser","regex","countKey","colorTokeniser","colorRegex","numberTokeniser","tokenise","tokenised","originalValue","toString","parseComplexValue","convertNumbersToZero","transformer","createUnitType","endsWith"],"sourceRoot":""}