{"version":3,"file":"static/js/412.a000c53e.chunk.js","mappings":"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","sources":["../node_modules/@mui/icons-material/esm/Copyright.js","components/Footer.js","components/animations/DelayAnimation.js","../node_modules/framer-motion/dist/es/render/dom/viewport/index.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/resolve-element.mjs","../node_modules/framer-motion/dist/es/utils/use-in-view.mjs"],"sourcesContent":["\"use client\";\n\nimport createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M11.88 9.14c1.28.06 1.61 1.15 1.63 1.66h1.79c-.08-1.98-1.49-3.19-3.45-3.19C9.64 7.61 8 9 8 12.14c0 1.94.93 4.24 3.84 4.24 2.22 0 3.41-1.65 3.44-2.95h-1.79c-.03.59-.45 1.38-1.63 1.44-1.31-.04-1.86-1.06-1.86-2.73 0-2.89 1.28-2.98 1.88-3zM12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm0 18c-4.41 0-8-3.59-8-8s3.59-8 8-8 8 3.59 8 8-3.59 8-8 8z\"\n}), 'Copyright');","import { Copyright } from \"@mui/icons-material\";\r\nimport { Button } from \"@mui/material\";\r\nimport React from \"react\";\r\nimport DelayAnimation from \"./animations/DelayAnimation\";\r\n\r\nfunction Footer({ setIsMessageOpen }) {\r\n  return (\r\n    <div\r\n      className=\"bg-sky-600 text-center text-xl flex justify-between p-2\"\r\n      style={{ height: \"90px\" }}\r\n    >\r\n      <DelayAnimation delay={0}>\r\n        <div className=\"flex flex-col h-full left-0 justify-center\">\r\n          <Button\r\n            variant=\"contained\"\r\n            color=\"success\"\r\n            size=\"small\"\r\n            onClick={() => setIsMessageOpen(true)}\r\n          >\r\n            Let's Talk\r\n          </Button>\r\n        </div>\r\n      </DelayAnimation>\r\n\r\n      {/* This will only show on small and medium-sized devices */}\r\n      <DelayAnimation delay={0.5}>\r\n        <div className=\"h-full flex flex-col justify-center\">\r\n          <div\r\n            style={{\r\n              fontSize: \"14px\",\r\n              lineHeight: \"21px\",\r\n              letterSpacing: \"1px\",\r\n              wordSpacing: \"2px\",\r\n            }}\r\n          >\r\n            Copyright <Copyright fontSize=\"small\" /> Devmwas 2023\r\n          </div>\r\n        </div>\r\n      </DelayAnimation>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Footer;\r\n","import React, { useEffect, useRef } from \"react\";\r\nimport { motion, useAnimation, useInView } from \"framer-motion\";\r\n\r\nfunction DelayAnimation({ children, delay }) {\r\n  // We create refs to grab our animation element\r\n  const ourRef = useRef(null);\r\n\r\n  // We'll use this to control our animation programatically\r\n  const delayAnimationControls = useAnimation();\r\n\r\n  // This will tell us whether our element is in view or not\r\n  const isInView = useInView(ourRef, { once: true });\r\n\r\n  // We execute this effect whenever our element is in view\r\n  useEffect(() => {\r\n    if (isInView) {\r\n      delayAnimationControls.start(\"show\");\r\n    }\r\n  }, [isInView]);\r\n\r\n  // Our Variants\r\n  const delayAnimationVariants = {\r\n    hidden: {\r\n      opacity: 0,\r\n      transform: \"scale(0)\",\r\n    },\r\n    show: {\r\n      opacity: 1,\r\n      transform: \"scale(1)\",\r\n    },\r\n  };\r\n\r\n  return (\r\n    <motion.div\r\n      ref={ourRef}\r\n      initial=\"hidden\"\r\n      animate={delayAnimationControls}\r\n      variants={delayAnimationVariants}\r\n      transition={{ delay, duration: 0.5 }}\r\n    >\r\n      {children}\r\n    </motion.div>\r\n  );\r\n}\r\n\r\nexport default DelayAnimation;\r\n","import { resolveElements } from '../utils/resolve-element.mjs';\n\nconst thresholds = {\n    some: 0,\n    all: 1,\n};\nfunction inView(elementOrSelector, onStart, { root, margin: rootMargin, amount = \"some\" } = {}) {\n    const elements = resolveElements(elementOrSelector);\n    const activeIntersections = new WeakMap();\n    const onIntersectionChange = (entries) => {\n        entries.forEach((entry) => {\n            const onEnd = activeIntersections.get(entry.target);\n            /**\n             * If there's no change to the intersection, we don't need to\n             * do anything here.\n             */\n            if (entry.isIntersecting === Boolean(onEnd))\n                return;\n            if (entry.isIntersecting) {\n                const newOnEnd = onStart(entry);\n                if (typeof newOnEnd === \"function\") {\n                    activeIntersections.set(entry.target, newOnEnd);\n                }\n                else {\n                    observer.unobserve(entry.target);\n                }\n            }\n            else if (onEnd) {\n                onEnd(entry);\n                activeIntersections.delete(entry.target);\n            }\n        });\n    };\n    const observer = new IntersectionObserver(onIntersectionChange, {\n        root,\n        rootMargin,\n        threshold: typeof amount === \"number\" ? amount : thresholds[amount],\n    });\n    elements.forEach((element) => observer.observe(element));\n    return () => observer.disconnect();\n}\n\nexport { inView };\n","import { invariant } from '../../../utils/errors.mjs';\n\nfunction resolveElements(elements, scope, selectorCache) {\n    var _a;\n    if (typeof elements === \"string\") {\n        let root = document;\n        if (scope) {\n            invariant(Boolean(scope.current), \"Scope provided, but no element detected.\");\n            root = scope.current;\n        }\n        if (selectorCache) {\n            (_a = selectorCache[elements]) !== null && _a !== void 0 ? _a : (selectorCache[elements] = root.querySelectorAll(elements));\n            elements = selectorCache[elements];\n        }\n        else {\n            elements = root.querySelectorAll(elements);\n        }\n    }\n    else if (elements instanceof Element) {\n        elements = [elements];\n    }\n    /**\n     * Return an empty array\n     */\n    return Array.from(elements || []);\n}\n\nexport { resolveElements };\n","import { useState, useEffect } from 'react';\nimport { inView } from '../render/dom/viewport/index.mjs';\n\nfunction useInView(ref, { root, margin, amount, once = false } = {}) {\n    const [isInView, setInView] = useState(false);\n    useEffect(() => {\n        if (!ref.current || (once && isInView))\n            return;\n        const onEnter = () => {\n            setInView(true);\n            return once ? undefined : () => setInView(false);\n        };\n        const options = {\n            root: (root && root.current) || undefined,\n            margin,\n            amount,\n        };\n        return inView(ref.current, onEnter, options);\n    }, [root, ref, margin, once]);\n    return isInView;\n}\n\nexport { useInView };\n"],"names":["createSvgIcon","_jsx","d","_ref","setIsMessageOpen","_jsxs","className","style","height","children","DelayAnimation","delay","Button","variant","color","size","onClick","fontSize","lineHeight","letterSpacing","wordSpacing","Copyright","ourRef","useRef","delayAnimationControls","useAnimation","isInView","useInView","once","useEffect","start","motion","div","ref","initial","animate","variants","hidden","opacity","transform","show","transition","duration","thresholds","some","all","inView","elementOrSelector","onStart","root","margin","rootMargin","amount","arguments","length","undefined","elements","scope","selectorCache","_a","document","invariant","Boolean","current","querySelectorAll","Element","Array","from","resolveElements","activeIntersections","WeakMap","observer","IntersectionObserver","entries","forEach","entry","onEnd","get","target","isIntersecting","newOnEnd","set","unobserve","delete","threshold","element","observe","disconnect","setInView","useState","options","onEnter"],"sourceRoot":""}