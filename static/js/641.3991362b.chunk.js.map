{"version":3,"file":"static/js/641.3991362b.chunk.js","mappings":"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","sources":["components/animations/IntroHeadingAnimation.js","components/animations/IntroButtonAnimation.js","components/animations/IntroBigTextAnimation.js","components/animations/NameAnimation.js","components/Intro.js","components/Lines.js","../node_modules/framer-motion/dist/es/render/dom/viewport/index.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/resolve-element.mjs","../node_modules/framer-motion/dist/es/utils/use-in-view.mjs"],"sourcesContent":["import { motion, useAnimation, useInView } from \"framer-motion\";\r\nimport React, { useEffect, useRef } from \"react\";\r\n\r\nfunction IntroHeadingAnimation({ children, letterSpacing = null }) {\r\n  // Creating a ref for our element\r\n  const ourRef = useRef(null);\r\n\r\n  // This will help us know whenever our Headings are in view for the first time\r\n  const isInView = useInView(ourRef, { once: true });\r\n\r\n  // This variable will help us control the animation programatically\r\n  const headingControls = useAnimation();\r\n\r\n  // We execute this effect whenever our element is in view\r\n  useEffect(() => {\r\n    if (isInView) {\r\n      headingControls.start(\"normalSpace\");\r\n    }\r\n  }, [isInView]);\r\n\r\n  // Our Variants\r\n  const headingVariants = {\r\n    spacedOut: {\r\n      letterSpacing: \"24px\",\r\n      width: \"300vw\",\r\n      left: \"-16.5%\",\r\n    },\r\n    normalSpace: {\r\n      letterSpacing: letterSpacing || \"-1px\",\r\n      width: \"fit-content\",\r\n      left: 0,\r\n    },\r\n  };\r\n\r\n  return (\r\n    <motion.div\r\n      ref={ourRef}\r\n      className=\"bg-yellow=-500\"\r\n      style={{\r\n        position: \"absolute\",\r\n        overflow: \"hidden\",\r\n      }}\r\n      variants={headingVariants}\r\n      initial=\"spacedOut\"\r\n      animate={headingControls}\r\n      transition={{ duration: 2 }}\r\n    >\r\n      {children}\r\n    </motion.div>\r\n  );\r\n}\r\n\r\nexport default IntroHeadingAnimation;\r\n","import React, { useEffect, useRef } from \"react\";\r\nimport { motion, useAnimation, useInView } from \"framer-motion\";\r\n\r\nfunction IntroButtonAnimation({ children }) {\r\n  // We create refs to grab our animation element\r\n  const ourRef = useRef(null);\r\n\r\n  // We'll use this to control our animation programatically\r\n  const introButtonControls = useAnimation();\r\n\r\n  // This will tell us whether our element is in view or not\r\n  const isInView = useInView(ourRef, { once: true });\r\n\r\n  // We execute this effect whenever our element is in view\r\n  useEffect(() => {\r\n    if (isInView) {\r\n      introButtonControls.start(\"show\");\r\n    }\r\n  }, [isInView]);\r\n\r\n  // Our Variants\r\n  const introButtonVariants = {\r\n    hidden: {\r\n      opacity: 0,\r\n      transform: \"scaleY(0)\",\r\n    },\r\n    show: {\r\n      opacity: 1,\r\n      transform: \"scaleY(1)\",\r\n    },\r\n  };\r\n\r\n  return (\r\n    <motion.div\r\n      className=\"rounded-md w-1/4 min-w-[200px]\"\r\n      ref={ourRef}\r\n      initial=\"hidden\"\r\n      animate={introButtonControls}\r\n      variants={introButtonVariants}\r\n      transition={{ duration: 0.5, delay: 1.5 }}\r\n    >\r\n      {children}\r\n    </motion.div>\r\n  );\r\n}\r\n\r\nexport default IntroButtonAnimation;\r\n","import React, { useEffect, useRef, useState } from \"react\";\r\nimport { motion, useAnimation, useInView } from \"framer-motion\";\r\n\r\n/* We use the offset to remove the height of the job title since its absolutely positioned */\r\n// We use left to either animate the colored screen to the left or right\r\nfunction IntroBigTextAnimation({ children, offSet, direction }) {\r\n  // This will help us remove this component from DOM once it'sfinished animating\r\n  // We do this to reduce DOM size which affects page speed\r\n  const [isVisible, setIsVisible] = useState(true);\r\n\r\n  // These variables will enable us to control the animations programatically\r\n  const bigTextControls = useAnimation();\r\n  const coloredScreenControls = useAnimation();\r\n\r\n  // We grab our element\r\n  const ourRef = useRef(null);\r\n\r\n  //   To help us know whenever our element is in view\r\n  const isInView = useInView(ourRef, { once: true });\r\n\r\n  //   We'll do this only after the first time our element is in view\r\n  useEffect(() => {\r\n    if (isInView) {\r\n      bigTextControls.start(\"visible\");\r\n      coloredScreenControls.start(\"hidden\");\r\n\r\n      // We want to remove this component from DOM tree once it has finished animating (3 seconds maybe)\r\n      // we do this to decrease DOM size as a large DOM tree will load slowly\r\n      setTimeout(() => {\r\n        setIsVisible(false);\r\n      }, 3000);\r\n    }\r\n  }, [isInView]);\r\n\r\n  // This will animate the Big Text element\r\n  const bigTextVariants = {\r\n    hidden: {\r\n      y: \"0px\",\r\n    },\r\n    visible: {\r\n      y: \"0px\",\r\n    },\r\n  };\r\n\r\n  // This will animate the colored screen element\r\n  const coloredScreenVariants = {\r\n    visible: {\r\n      left: \"0%\",\r\n    },\r\n    hidden: {\r\n      // The direction property controls where the colored screen goes horizotally\r\n      left: direction === \"left\" ? \"-100%\" : \"100%\",\r\n    },\r\n  };\r\n\r\n  return (\r\n    <div ref={ourRef} style={{ position: \"relative\" }}>\r\n      {/* Here we'll animate our Big Text element */}\r\n      <motion.div\r\n        initial=\"hidden\"\r\n        animate={bigTextControls}\r\n        variants={bigTextVariants}\r\n        transition={{ duration: 2, delay: 0 }}\r\n        style={{ overflow: \"hidden\" }}\r\n      >\r\n        {children}\r\n        {/* Here we'll have a colored screen move across the view port */}\r\n        {/* We want to remove this element from DM tree once it's finished animating */}\r\n        {isVisible ? (\r\n          <motion.div\r\n            style={{\r\n              position: \"absolute\",\r\n              top: 0,\r\n              left: 0,\r\n              bottom: 0,\r\n              right: 0,\r\n              top: `${offSet}`,\r\n              width: \"100%\",\r\n              height: `calc(100% - ${offSet})`,\r\n              backgroundColor: \"orange\",\r\n              borderRadius: \"2%\",\r\n              overflow: \"hidden\",\r\n              zIndex: 1,\r\n            }}\r\n            initial=\"visible\"\r\n            animate={coloredScreenControls}\r\n            variants={coloredScreenVariants}\r\n            transition={{ duration: 2, ease: \"backIn\" }}\r\n          ></motion.div>\r\n        ) : null}\r\n      </motion.div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default IntroBigTextAnimation;\r\n","import { motion, useAnimation, useInView } from \"framer-motion\";\r\nimport React, { useEffect, useRef } from \"react\";\r\n\r\nfunction NameAnimation({ children }) {\r\n  // Creating a ref for our element\r\n  const ourRef = useRef(null);\r\n\r\n  // This will help us know whenever our Headings are in view for the first time\r\n  const isInView = useInView(ourRef, { once: true });\r\n\r\n  // This variable will help us control the animation programatically\r\n  const headingControls = useAnimation();\r\n\r\n  // We execute this effect whenever our element is in view\r\n  useEffect(() => {\r\n    if (isInView) {\r\n      headingControls.start(\"normalSpace\");\r\n    }\r\n  }, [isInView]);\r\n\r\n  // Our Variants\r\n  const headingVariants = {\r\n    spacedOut: {\r\n      letterSpacing: \"24px\",\r\n      width: \"300vw\",\r\n      left: \"-100px\",\r\n    },\r\n    normalSpace: {\r\n      letterSpacing: \"3px\",\r\n      width: \"fit-content\",\r\n      left: \"0px\",\r\n    },\r\n  };\r\n\r\n  return (\r\n    <motion.div\r\n      ref={ourRef}\r\n      className=\"bg-yellow=-500\"\r\n      style={{\r\n        position: \"absolute\",\r\n        overflow: \"hidden\",\r\n      }}\r\n      variants={headingVariants}\r\n      initial=\"spacedOut\"\r\n      animate={headingControls}\r\n      transition={{ duration: 2 }}\r\n    >\r\n      {children}\r\n    </motion.div>\r\n  );\r\n}\r\n\r\nexport default NameAnimation;\r\n","import { Button } from \"@mui/material\";\r\nimport Lines from \"./Lines\";\r\nimport IntroHeadingAnimation from \"./animations/IntroHeadingAnimation\";\r\nimport IntroButtonAnimation from \"./animations/IntroButtonAnimation\";\r\nimport IntroBigTextAnimation from \"./animations/IntroBigTextAnimation\";\r\nimport NameAnimation from \"./animations/NameAnimation\";\r\n\r\nfunction Intro({ setIsMessageOpen }) {\r\n  return (\r\n    <div\r\n      className=\"p-2 flex flex-col h-[100vh] max-w-[100%]\"\r\n      style={{\r\n        backgroundImage:\r\n          \"linear-gradient(to bottom right, darkBlue, black, darkBlue)\",\r\n      }}\r\n      id=\"home\"\r\n    >\r\n      {/* Contaner for our Intro component's contents */}\r\n      <div className=\"my-auto\">\r\n        <div className=\"flex relative\" style={{ height: \"70vh\" }}>\r\n          <div className=\"my-auto sm:w-5/6 z-30\">\r\n            {/* Greetings */}\r\n            <div\r\n              // Here, we'll set the text size(text), line height(leading) and letter spacing(tracking)\r\n              // for different screen sizes using one giant TailwindCSS class name\r\n              className=\"text-sky-400 text-[14px] sm:text[16px] lg:text-[16px] leading-[21px]\r\n              sm:leading-[24px] lg:leading-[27px] tracking-[1px] sm:tracking-[2px] lg:tracking-[3px]\"\r\n            >\r\n              Hello. It's your\r\n            </div>\r\n\r\n            {/* We include Framer Motion animations to make it fancy */}\r\n            <IntroHeadingAnimation>\r\n              <div\r\n                // Tracking didnt support letter-spacing animations so I had to remove it\r\n                // tracking-[-0.48px] sm:tracking-[-0.64px] lg:tracking-[-1px]\r\n                className=\"font-extrabold text-[24px] sm:text-32px] lg:text-[40px]\r\n                leading-[26.4px] sm:leading-[35.2px] lg:leading-[44px]\"\r\n              >\r\n                Frontend Web Developer\r\n                <div style={{ display: \"inline-block\", color: \"orange\" }}>\r\n                  .\r\n                </div>\r\n              </div>\r\n            </IntroHeadingAnimation>\r\n\r\n            {/* We include Framer Motion animations to make it fancy */}\r\n            {/* We pass the offset which is literally the marginTop of our Title element */}\r\n            <IntroBigTextAnimation offSet={\"56px\"} direction=\"right\">\r\n              <div\r\n                style={{\r\n                  // This used to be lg:6px md:4px 2px for lower devices. But then I had to make a\r\n                  // trade-off beween fanciness and functionality and code cleanliness\r\n                  wordSpacing: \"3px\",\r\n                }}\r\n                className=\"text-[14px] mt-[56px] sm:text-[16px] lg:text-[16px] leading-[27px] sm:leading-[24px] \r\n                lg:leading-[21px] tracking-[1px] sm:tracking-[2px] lg:tracking-[3px]\"\r\n              >\r\n                Welcome to my digital realm, where I engineer captivating and\r\n                responsive frontend experiences. I seamlessly blend creativity\r\n                with cutting-edge technologies to redefine the standards of\r\n                frontend excellence. Explore my portfolio, and let's elevate\r\n                your online presence together.\r\n              </div>\r\n            </IntroBigTextAnimation>\r\n\r\n            {/* This will only show on large devices and above */}\r\n            {/* We include Framer Motion animations to make it fancy */}\r\n            <NameAnimation>\r\n              <div\r\n                // Tracking didnt support letter-spacing animations so I had to remove it\r\n                // tracking-[1px] sm:tracking-[2px] lg:tracking-[3px]\"\r\n                className=\"text-sky-400 mt-2 text-[14px] sm:text-[16px] lg:text-[16px] \r\n                leading-[21px] sm:leading-[24px] lg:leading-[27px]\"\r\n              >\r\n                - Devmwas\r\n              </div>\r\n            </NameAnimation>\r\n\r\n            {/* Call To Action button - (LET'S TALK BUTTON) */}\r\n            <div style={{ marginTop: \"56px\" }} className=\"mt-12 sm:mt-20\">\r\n              {/* We include Framer Motion animations to make it fancy */}\r\n              <IntroButtonAnimation>\r\n                <Button\r\n                  fullWidth\r\n                  variant=\"outlined\"\r\n                  color=\"primary\"\r\n                  onClick={() => setIsMessageOpen(true)}\r\n                >\r\n                  <div className=\"font-bold\">Let's Talk</div>\r\n                </Button>\r\n              </IntroButtonAnimation>\r\n            </div>\r\n          </div>\r\n\r\n          {/* This is just a fancy background for aesthetics*/}\r\n          <div\r\n            style={{\r\n              backgroundImage:\r\n                \"linear-gradient(to top right, black, darkBlue, black)\",\r\n            }}\r\n            className=\"absolute right-[2vh] h-[70vh] overflow-hidden rounded-[2%] opacity-60 \r\n            flex flex-wrap z-0 w-[48vw] lg:w-[46.667vw]\"\r\n          >\r\n            <Lines />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Intro;\r\n","import React from \"react\";\r\n\r\nfunction Lines({ angle }) {\r\n  let lines = [];\r\n  // We used to have 2,000 lines here till I noticed the impact on performance and\r\n  // decided to reduce them to 0\r\n  // Might remove this component completely or replace it with a more ligher and fancier background\r\n  for (let i = 0; i < 0; i++) {\r\n    lines.push(\r\n      <div\r\n        key={i}\r\n        style={{\r\n          opacity: 0.2,\r\n          transform: `rotate(${angle || 45}deg)`,\r\n          height: 10,\r\n          width: 2,\r\n        }}\r\n        className=\"m-1 bg-sky-400 -z-5\"\r\n      ></div>\r\n    );\r\n  }\r\n  return lines;\r\n}\r\n\r\nexport default Lines;\r\n","import { resolveElements } from '../utils/resolve-element.mjs';\n\nconst thresholds = {\n    some: 0,\n    all: 1,\n};\nfunction inView(elementOrSelector, onStart, { root, margin: rootMargin, amount = \"some\" } = {}) {\n    const elements = resolveElements(elementOrSelector);\n    const activeIntersections = new WeakMap();\n    const onIntersectionChange = (entries) => {\n        entries.forEach((entry) => {\n            const onEnd = activeIntersections.get(entry.target);\n            /**\n             * If there's no change to the intersection, we don't need to\n             * do anything here.\n             */\n            if (entry.isIntersecting === Boolean(onEnd))\n                return;\n            if (entry.isIntersecting) {\n                const newOnEnd = onStart(entry);\n                if (typeof newOnEnd === \"function\") {\n                    activeIntersections.set(entry.target, newOnEnd);\n                }\n                else {\n                    observer.unobserve(entry.target);\n                }\n            }\n            else if (onEnd) {\n                onEnd(entry);\n                activeIntersections.delete(entry.target);\n            }\n        });\n    };\n    const observer = new IntersectionObserver(onIntersectionChange, {\n        root,\n        rootMargin,\n        threshold: typeof amount === \"number\" ? amount : thresholds[amount],\n    });\n    elements.forEach((element) => observer.observe(element));\n    return () => observer.disconnect();\n}\n\nexport { inView };\n","import { invariant } from '../../../utils/errors.mjs';\n\nfunction resolveElements(elements, scope, selectorCache) {\n    var _a;\n    if (typeof elements === \"string\") {\n        let root = document;\n        if (scope) {\n            invariant(Boolean(scope.current), \"Scope provided, but no element detected.\");\n            root = scope.current;\n        }\n        if (selectorCache) {\n            (_a = selectorCache[elements]) !== null && _a !== void 0 ? _a : (selectorCache[elements] = root.querySelectorAll(elements));\n            elements = selectorCache[elements];\n        }\n        else {\n            elements = root.querySelectorAll(elements);\n        }\n    }\n    else if (elements instanceof Element) {\n        elements = [elements];\n    }\n    /**\n     * Return an empty array\n     */\n    return Array.from(elements || []);\n}\n\nexport { resolveElements };\n","import { useState, useEffect } from 'react';\nimport { inView } from '../render/dom/viewport/index.mjs';\n\nfunction useInView(ref, { root, margin, amount, once = false } = {}) {\n    const [isInView, setInView] = useState(false);\n    useEffect(() => {\n        if (!ref.current || (once && isInView))\n            return;\n        const onEnter = () => {\n            setInView(true);\n            return once ? undefined : () => setInView(false);\n        };\n        const options = {\n            root: (root && root.current) || undefined,\n            margin,\n            amount,\n        };\n        return inView(ref.current, onEnter, options);\n    }, [root, ref, margin, once]);\n    return isInView;\n}\n\nexport { useInView };\n"],"names":["_ref","children","letterSpacing","ourRef","useRef","isInView","useInView","once","headingControls","useAnimation","useEffect","start","headingVariants","spacedOut","width","left","normalSpace","_jsx","motion","div","ref","className","style","position","overflow","variants","initial","animate","transition","duration","introButtonControls","hidden","opacity","transform","show","delay","offSet","direction","isVisible","setIsVisible","useState","bigTextControls","coloredScreenControls","setTimeout","coloredScreenVariants","visible","_jsxs","y","top","bottom","right","concat","height","backgroundColor","borderRadius","zIndex","ease","setIsMessageOpen","backgroundImage","id","IntroHeadingAnimation","display","color","IntroBigTextAnimation","wordSpacing","NameAnimation","marginTop","IntroButtonAnimation","Button","fullWidth","variant","onClick","Lines","angle","lines","i","push","thresholds","some","all","inView","elementOrSelector","onStart","root","margin","rootMargin","amount","arguments","length","undefined","elements","scope","selectorCache","_a","document","invariant","Boolean","current","querySelectorAll","Element","Array","from","resolveElements","activeIntersections","WeakMap","observer","IntersectionObserver","entries","forEach","entry","onEnd","get","target","isIntersecting","newOnEnd","set","unobserve","delete","threshold","element","observe","disconnect","setInView","options","onEnter"],"sourceRoot":""}